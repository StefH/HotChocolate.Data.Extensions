// <auto-generated/>
#nullable enable

namespace Microsoft.Extensions.DependencyInjection
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public static partial class StarWarsGeneratedClientServiceCollectionExtensions
    {
        public static global::StrawberryShake.IClientBuilder<global::StarWarsGeneratedClient.State.StarWarsGeneratedClientStoreAccessor> AddStarWarsGeneratedClient(this global::Microsoft.Extensions.DependencyInjection.IServiceCollection services, global::StrawberryShake.ExecutionStrategy strategy = global::StrawberryShake.ExecutionStrategy.NetworkOnly)
        {
            var serviceCollection = new global::Microsoft.Extensions.DependencyInjection.ServiceCollection();
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp =>
            {
                ConfigureClientDefault(sp, serviceCollection, strategy);
                return new ClientServiceProvider(global::Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(serviceCollection));
            });
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => new global::StarWarsGeneratedClient.State.StarWarsGeneratedClientStoreAccessor(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IEntityStore>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IEntityIdSerializer>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Collections.Generic.IEnumerable<global::StrawberryShake.IOperationRequestFactory>>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Collections.Generic.IEnumerable<global::StrawberryShake.IOperationResultDataFactory>>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp))));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.GetHeroQuery>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.CreateReviewMutation>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.GetCharactersByIdsQuery>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.GetAllCharactersQuery>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.GetCharactersWithCursorPagingQuery>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.GetCharactersWithPagingQuery>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.GetAllHumansAndDroidsQuery>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.StarWarsGeneratedClient>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.IStarWarsGeneratedClient>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            return new global::StrawberryShake.ClientBuilder<global::StarWarsGeneratedClient.State.StarWarsGeneratedClientStoreAccessor>("StarWarsGeneratedClient", services, serviceCollection);
        }

        private static global::Microsoft.Extensions.DependencyInjection.IServiceCollection ConfigureClientDefault(global::System.IServiceProvider parentServices, global::Microsoft.Extensions.DependencyInjection.ServiceCollection services, global::StrawberryShake.ExecutionStrategy strategy = global::StrawberryShake.ExecutionStrategy.NetworkOnly)
        {
            global::Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton<global::StrawberryShake.IEntityStore, global::StrawberryShake.EntityStore>(services);
            global::Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton<global::StrawberryShake.IOperationStore>(services, sp => new global::StrawberryShake.OperationStore(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IEntityStore>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Transport.Http.IHttpConnection>(services, sp =>
            {
                var clientFactory = global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Net.Http.IHttpClientFactory>(parentServices);
                return new global::StrawberryShake.Transport.Http.HttpConnection(() => clientFactory.CreateClient("StarWarsGeneratedClient"));
            });
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, global::StarWarsGeneratedClient.GetHero_Hero_Human>, global::StarWarsGeneratedClient.State.GetHero_Hero_HumanFromHumanEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, global::StarWarsGeneratedClient.GetHero_Hero_Droid>, global::StarWarsGeneratedClient.State.GetHero_Hero_DroidFromDroidEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, global::StarWarsGeneratedClient.GetHero_Hero_Friends_Edges_Node_Human>, global::StarWarsGeneratedClient.State.GetHero_Hero_Friends_Edges_Node_HumanFromHumanEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, global::StarWarsGeneratedClient.GetHero_Hero_Friends_Edges_Node_Droid>, global::StarWarsGeneratedClient.State.GetHero_Hero_Friends_Edges_Node_DroidFromDroidEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.ReviewEntity, global::StarWarsGeneratedClient.CreateReview_CreateReview_Review_Review>, global::StarWarsGeneratedClient.State.CreateReview_CreateReview_Review_ReviewFromReviewEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, global::StarWarsGeneratedClient.GetCharactersByIds_CharactersByIds_Human>, global::StarWarsGeneratedClient.State.GetCharactersByIds_CharactersByIds_HumanFromHumanEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, global::StarWarsGeneratedClient.GetCharactersByIds_CharactersByIds_Droid>, global::StarWarsGeneratedClient.State.GetCharactersByIds_CharactersByIds_DroidFromDroidEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, global::StarWarsGeneratedClient.GetAllCharacters_Characters_Human>, global::StarWarsGeneratedClient.State.GetAllCharacters_Characters_HumanFromHumanEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, global::StarWarsGeneratedClient.GetAllCharacters_Characters_Droid>, global::StarWarsGeneratedClient.State.GetAllCharacters_Characters_DroidFromDroidEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, global::StarWarsGeneratedClient.GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_Human>, global::StarWarsGeneratedClient.State.GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_HumanFromHumanEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, global::StarWarsGeneratedClient.GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_Droid>, global::StarWarsGeneratedClient.State.GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_DroidFromDroidEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, global::StarWarsGeneratedClient.GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_Human>, global::StarWarsGeneratedClient.State.GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_HumanFromHumanEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, global::StarWarsGeneratedClient.GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_Droid>, global::StarWarsGeneratedClient.State.GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_DroidFromDroidEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, global::StarWarsGeneratedClient.GetAllHumansAndDroids_Characters_Human>, global::StarWarsGeneratedClient.State.GetAllHumansAndDroids_Characters_HumanFromHumanEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, global::StarWarsGeneratedClient.GetAllHumansAndDroids_Characters_Droid>, global::StarWarsGeneratedClient.State.GetAllHumansAndDroids_Characters_DroidFromDroidEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StarWarsGeneratedClient.EpisodeSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StarWarsGeneratedClient.SortEnumTypeSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.StringSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.BooleanSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.ByteSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.ShortSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.IntSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.LongSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.FloatSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.DecimalSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.UrlSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.UUIDSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.IdSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.DateTimeSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.DateSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.ByteArraySerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.TimeSpanSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.JsonSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StarWarsGeneratedClient.CreateReviewInputInputValueFormatter>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StarWarsGeneratedClient.ICharacterFilterInputInputValueFormatter>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StarWarsGeneratedClient.ComparableInt32OperationFilterInputInputValueFormatter>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StarWarsGeneratedClient.StringOperationFilterInputInputValueFormatter>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StarWarsGeneratedClient.ListComparableInt32OperationFilterInputInputValueFormatter>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StarWarsGeneratedClient.ListEpisodeOperationFilterInputInputValueFormatter>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StarWarsGeneratedClient.EpisodeOperationFilterInputInputValueFormatter>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StarWarsGeneratedClient.ComparableDoubleOperationFilterInputInputValueFormatter>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StarWarsGeneratedClient.ICharacterSortInputInputValueFormatter>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializerResolver>(services, sp => new global::StrawberryShake.Serialization.SerializerResolver(global::System.Linq.Enumerable.Concat(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Collections.Generic.IEnumerable<global::StrawberryShake.Serialization.ISerializer>>(parentServices), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Collections.Generic.IEnumerable<global::StrawberryShake.Serialization.ISerializer>>(sp))));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.IGetHeroResult>, global::StarWarsGeneratedClient.State.GetHeroResultFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.IGetHeroResult>>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationRequestFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.IGetHeroQuery>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.IGetHeroResult>, global::StarWarsGeneratedClient.State.GetHeroBuilder>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::StarWarsGeneratedClient.IGetHeroResult>>(services, sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.IGetHeroResult>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.IHttpConnection>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.IGetHeroResult>>(sp), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp), strategy));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StarWarsGeneratedClient.GetHeroQuery>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StarWarsGeneratedClient.IGetHeroQuery>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.GetHeroQuery>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.ICreateReviewResult>, global::StarWarsGeneratedClient.State.CreateReviewResultFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.ICreateReviewResult>>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationRequestFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.ICreateReviewMutation>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.ICreateReviewResult>, global::StarWarsGeneratedClient.State.CreateReviewBuilder>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::StarWarsGeneratedClient.ICreateReviewResult>>(services, sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.ICreateReviewResult>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.IHttpConnection>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.ICreateReviewResult>>(sp), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp), strategy));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StarWarsGeneratedClient.CreateReviewMutation>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StarWarsGeneratedClient.ICreateReviewMutation>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.CreateReviewMutation>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.IGetCharactersByIdsResult>, global::StarWarsGeneratedClient.State.GetCharactersByIdsResultFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.IGetCharactersByIdsResult>>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationRequestFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.IGetCharactersByIdsQuery>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.IGetCharactersByIdsResult>, global::StarWarsGeneratedClient.State.GetCharactersByIdsBuilder>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::StarWarsGeneratedClient.IGetCharactersByIdsResult>>(services, sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.IGetCharactersByIdsResult>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.IHttpConnection>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.IGetCharactersByIdsResult>>(sp), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp), strategy));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StarWarsGeneratedClient.GetCharactersByIdsQuery>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StarWarsGeneratedClient.IGetCharactersByIdsQuery>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.GetCharactersByIdsQuery>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.IGetAllCharactersResult>, global::StarWarsGeneratedClient.State.GetAllCharactersResultFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.IGetAllCharactersResult>>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationRequestFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.IGetAllCharactersQuery>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.IGetAllCharactersResult>, global::StarWarsGeneratedClient.State.GetAllCharactersBuilder>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::StarWarsGeneratedClient.IGetAllCharactersResult>>(services, sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.IGetAllCharactersResult>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.IHttpConnection>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.IGetAllCharactersResult>>(sp), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp), strategy));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StarWarsGeneratedClient.GetAllCharactersQuery>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StarWarsGeneratedClient.IGetAllCharactersQuery>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.GetAllCharactersQuery>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.IGetCharactersWithCursorPagingResult>, global::StarWarsGeneratedClient.State.GetCharactersWithCursorPagingResultFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.IGetCharactersWithCursorPagingResult>>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationRequestFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.IGetCharactersWithCursorPagingQuery>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.IGetCharactersWithCursorPagingResult>, global::StarWarsGeneratedClient.State.GetCharactersWithCursorPagingBuilder>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::StarWarsGeneratedClient.IGetCharactersWithCursorPagingResult>>(services, sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.IGetCharactersWithCursorPagingResult>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.IHttpConnection>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.IGetCharactersWithCursorPagingResult>>(sp), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp), strategy));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StarWarsGeneratedClient.GetCharactersWithCursorPagingQuery>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StarWarsGeneratedClient.IGetCharactersWithCursorPagingQuery>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.GetCharactersWithCursorPagingQuery>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.IGetCharactersWithPagingResult>, global::StarWarsGeneratedClient.State.GetCharactersWithPagingResultFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.IGetCharactersWithPagingResult>>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationRequestFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.IGetCharactersWithPagingQuery>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.IGetCharactersWithPagingResult>, global::StarWarsGeneratedClient.State.GetCharactersWithPagingBuilder>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::StarWarsGeneratedClient.IGetCharactersWithPagingResult>>(services, sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.IGetCharactersWithPagingResult>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.IHttpConnection>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.IGetCharactersWithPagingResult>>(sp), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp), strategy));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StarWarsGeneratedClient.GetCharactersWithPagingQuery>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StarWarsGeneratedClient.IGetCharactersWithPagingQuery>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.GetCharactersWithPagingQuery>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.IGetAllHumansAndDroidsResult>, global::StarWarsGeneratedClient.State.GetAllHumansAndDroidsResultFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.IGetAllHumansAndDroidsResult>>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationRequestFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.IGetAllHumansAndDroidsQuery>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.IGetAllHumansAndDroidsResult>, global::StarWarsGeneratedClient.State.GetAllHumansAndDroidsBuilder>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::StarWarsGeneratedClient.IGetAllHumansAndDroidsResult>>(services, sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.IGetAllHumansAndDroidsResult>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.IHttpConnection>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.IGetAllHumansAndDroidsResult>>(sp), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp), strategy));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StarWarsGeneratedClient.GetAllHumansAndDroidsQuery>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StarWarsGeneratedClient.IGetAllHumansAndDroidsQuery>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.GetAllHumansAndDroidsQuery>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityIdSerializer, global::StarWarsGeneratedClient.State.StarWarsGeneratedClientEntityIdFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StarWarsGeneratedClient.StarWarsGeneratedClient>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StarWarsGeneratedClient.IStarWarsGeneratedClient>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.StarWarsGeneratedClient>(sp));
            return services;
        }

        private class ClientServiceProvider : System.IServiceProvider, System.IDisposable
        {
            private readonly System.IServiceProvider _provider;
            public ClientServiceProvider(System.IServiceProvider provider)
            {
                _provider = provider;
            }

            public object? GetService(System.Type serviceType)
            {
                return _provider.GetService(serviceType);
            }

            public void Dispose()
            {
                if (_provider is System.IDisposable d)
                {
                    d.Dispose();
                }
            }
        }
    }
}

namespace StarWarsGeneratedClient
{
    /// <summary>
    /// The queries related to reviews.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetHeroResult : global::System.IEquatable<GetHeroResult>, IGetHeroResult
    {
        public GetHeroResult(global::StarWarsGeneratedClient.IGetHero_Hero hero)
        {
            Hero = hero;
        }

        /// <summary>
        /// Retrieve a hero by a particular Star Wars episode.
        /// 
        /// 
        /// **Returns:**
        /// The hero character.
        /// </summary>
        public global::StarWarsGeneratedClient.IGetHero_Hero Hero { get; }

        public virtual global::System.Boolean Equals(GetHeroResult? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Hero.Equals(other.Hero));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetHeroResult)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Hero.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetHero_Hero_Human : global::System.IEquatable<GetHero_Hero_Human>, IGetHero_Hero_Human
    {
        public GetHero_Hero_Human(global::System.Int32 id, global::System.String name, global::StarWarsGeneratedClient.IGetHero_Hero_Friends? friends)
        {
            Id = id;
            Name = name;
            Friends = friends;
        }

        /// <summary>
        /// The unique identifier for the character.
        /// </summary>
        public global::System.Int32 Id { get; }

        /// <summary>
        /// The name of the character.
        /// </summary>
        public global::System.String Name { get; }

        public global::StarWarsGeneratedClient.IGetHero_Hero_Friends? Friends { get; }

        public virtual global::System.Boolean Equals(GetHero_Hero_Human? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id == other.Id) && Name.Equals(other.Name) && ((Friends is null && other.Friends is null) || Friends != null && Friends.Equals(other.Friends));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetHero_Hero_Human)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                hash ^= 397 * Name.GetHashCode();
                if (Friends != null)
                {
                    hash ^= 397 * Friends.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetHero_Hero_Droid : global::System.IEquatable<GetHero_Hero_Droid>, IGetHero_Hero_Droid
    {
        public GetHero_Hero_Droid(global::System.Int32 id, global::System.String name, global::StarWarsGeneratedClient.IGetHero_Hero_Friends? friends)
        {
            Id = id;
            Name = name;
            Friends = friends;
        }

        /// <summary>
        /// The unique identifier for the character.
        /// </summary>
        public global::System.Int32 Id { get; }

        /// <summary>
        /// The name of the character.
        /// </summary>
        public global::System.String Name { get; }

        public global::StarWarsGeneratedClient.IGetHero_Hero_Friends? Friends { get; }

        public virtual global::System.Boolean Equals(GetHero_Hero_Droid? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id == other.Id) && Name.Equals(other.Name) && ((Friends is null && other.Friends is null) || Friends != null && Friends.Equals(other.Friends));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetHero_Hero_Droid)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                hash ^= 397 * Name.GetHashCode();
                if (Friends != null)
                {
                    hash ^= 397 * Friends.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// A connection to a list of items.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetHero_Hero_Friends_FriendsConnection : global::System.IEquatable<GetHero_Hero_Friends_FriendsConnection>, IGetHero_Hero_Friends_FriendsConnection
    {
        public GetHero_Hero_Friends_FriendsConnection(global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.IGetHero_Hero_Friends_Edges>? edges)
        {
            Edges = edges;
        }

        /// <summary>
        /// A list of edges.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.IGetHero_Hero_Friends_Edges>? Edges { get; }

        public virtual global::System.Boolean Equals(GetHero_Hero_Friends_FriendsConnection? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Edges, other.Edges));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetHero_Hero_Friends_FriendsConnection)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (Edges != null)
                {
                    foreach (var Edges_elm in Edges)
                    {
                        hash ^= 397 * Edges_elm.GetHashCode();
                    }
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// An edge in a connection.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetHero_Hero_Friends_Edges_FriendsEdge : global::System.IEquatable<GetHero_Hero_Friends_Edges_FriendsEdge>, IGetHero_Hero_Friends_Edges_FriendsEdge
    {
        public GetHero_Hero_Friends_Edges_FriendsEdge(global::StarWarsGeneratedClient.IGetHero_Hero_Friends_Edges_Node? node)
        {
            Node = node;
        }

        /// <summary>
        /// The item at the end of the edge.
        /// </summary>
        public global::StarWarsGeneratedClient.IGetHero_Hero_Friends_Edges_Node? Node { get; }

        public virtual global::System.Boolean Equals(GetHero_Hero_Friends_Edges_FriendsEdge? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((Node is null && other.Node is null) || Node != null && Node.Equals(other.Node)));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetHero_Hero_Friends_Edges_FriendsEdge)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (Node != null)
                {
                    hash ^= 397 * Node.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetHero_Hero_Friends_Edges_Node_Human : global::System.IEquatable<GetHero_Hero_Friends_Edges_Node_Human>, IGetHero_Hero_Friends_Edges_Node_Human
    {
        public GetHero_Hero_Friends_Edges_Node_Human(global::System.Int32 id, global::System.String name)
        {
            Id = id;
            Name = name;
        }

        /// <summary>
        /// The unique identifier for the character.
        /// </summary>
        public global::System.Int32 Id { get; }

        /// <summary>
        /// The name of the character.
        /// </summary>
        public global::System.String Name { get; }

        public virtual global::System.Boolean Equals(GetHero_Hero_Friends_Edges_Node_Human? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id == other.Id) && Name.Equals(other.Name);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetHero_Hero_Friends_Edges_Node_Human)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                hash ^= 397 * Name.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetHero_Hero_Friends_Edges_Node_Droid : global::System.IEquatable<GetHero_Hero_Friends_Edges_Node_Droid>, IGetHero_Hero_Friends_Edges_Node_Droid
    {
        public GetHero_Hero_Friends_Edges_Node_Droid(global::System.Int32 id, global::System.String name)
        {
            Id = id;
            Name = name;
        }

        /// <summary>
        /// The unique identifier for the character.
        /// </summary>
        public global::System.Int32 Id { get; }

        /// <summary>
        /// The name of the character.
        /// </summary>
        public global::System.String Name { get; }

        public virtual global::System.Boolean Equals(GetHero_Hero_Friends_Edges_Node_Droid? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id == other.Id) && Name.Equals(other.Name);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetHero_Hero_Friends_Edges_Node_Droid)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                hash ^= 397 * Name.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// The queries related to reviews.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetHeroResult
    {
        /// <summary>
        /// Retrieve a hero by a particular Star Wars episode.
        /// 
        /// 
        /// **Returns:**
        /// The hero character.
        /// </summary>
        public global::StarWarsGeneratedClient.IGetHero_Hero Hero { get; }
    }

    /// <summary>
    /// A character in the Star Wars universe.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetHero_Hero
    {
        /// <summary>
        /// The unique identifier for the character.
        /// </summary>
        public global::System.Int32 Id { get; }

        /// <summary>
        /// The name of the character.
        /// </summary>
        public global::System.String Name { get; }

        /// <summary>
        /// The ids of the character's friends.
        /// </summary>
        public global::StarWarsGeneratedClient.IGetHero_Hero_Friends? Friends { get; }
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetHero_Hero_Human : IGetHero_Hero
    {
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetHero_Hero_Droid : IGetHero_Hero
    {
    }

    /// <summary>
    /// A connection to a list of items.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetHero_Hero_Friends
    {
        /// <summary>
        /// A list of edges.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.IGetHero_Hero_Friends_Edges>? Edges { get; }
    }

    /// <summary>
    /// A connection to a list of items.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetHero_Hero_Friends_FriendsConnection : IGetHero_Hero_Friends
    {
    }

    /// <summary>
    /// An edge in a connection.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetHero_Hero_Friends_Edges
    {
        /// <summary>
        /// The item at the end of the edge.
        /// </summary>
        public global::StarWarsGeneratedClient.IGetHero_Hero_Friends_Edges_Node? Node { get; }
    }

    /// <summary>
    /// An edge in a connection.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetHero_Hero_Friends_Edges_FriendsEdge : IGetHero_Hero_Friends_Edges
    {
    }

    /// <summary>
    /// A character in the Star Wars universe.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface ICharacterWithIdAndName
    {
        /// <summary>
        /// The unique identifier for the character.
        /// </summary>
        public global::System.Int32 Id { get; }

        /// <summary>
        /// The name of the character.
        /// </summary>
        public global::System.String Name { get; }
    }

    /// <summary>
    /// A character in the Star Wars universe.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetHero_Hero_Friends_Edges_Node : ICharacterWithIdAndName
    {
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetHero_Hero_Friends_Edges_Node_Human : IGetHero_Hero_Friends_Edges_Node
    {
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetHero_Hero_Friends_Edges_Node_Droid : IGetHero_Hero_Friends_Edges_Node
    {
    }

    /// <summary>
    /// The mutations related to reviews.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class CreateReviewResult : global::System.IEquatable<CreateReviewResult>, ICreateReviewResult
    {
        public CreateReviewResult(global::StarWarsGeneratedClient.ICreateReview_CreateReview createReview)
        {
            CreateReview = createReview;
        }

        /// <summary>
        /// Creates a review for a given Star Wars episode.
        /// </summary>
        public global::StarWarsGeneratedClient.ICreateReview_CreateReview CreateReview { get; }

        public virtual global::System.Boolean Equals(CreateReviewResult? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (CreateReview.Equals(other.CreateReview));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CreateReviewResult)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * CreateReview.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// This payload allows us to query the created review object.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class CreateReview_CreateReview_CreateReviewPayload : global::System.IEquatable<CreateReview_CreateReview_CreateReviewPayload>, ICreateReview_CreateReview_CreateReviewPayload
    {
        public CreateReview_CreateReview_CreateReviewPayload(global::StarWarsGeneratedClient.ICreateReview_CreateReview_Review review)
        {
            Review = review;
        }

        /// <summary>
        /// The review that was being created.
        /// </summary>
        public global::StarWarsGeneratedClient.ICreateReview_CreateReview_Review Review { get; }

        public virtual global::System.Boolean Equals(CreateReview_CreateReview_CreateReviewPayload? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Review.Equals(other.Review));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CreateReview_CreateReview_CreateReviewPayload)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Review.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// A review of a particular movie.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class CreateReview_CreateReview_Review_Review : global::System.IEquatable<CreateReview_CreateReview_Review_Review>, ICreateReview_CreateReview_Review_Review
    {
        public CreateReview_CreateReview_Review_Review(global::System.String commentary, global::System.Int32 stars)
        {
            Commentary = commentary;
            Stars = stars;
        }

        /// <summary>
        /// An explanation for the rating.
        /// </summary>
        public global::System.String Commentary { get; }

        /// <summary>
        /// The number of stars given for this review.
        /// </summary>
        public global::System.Int32 Stars { get; }

        public virtual global::System.Boolean Equals(CreateReview_CreateReview_Review_Review? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Commentary.Equals(other.Commentary)) && Stars == other.Stars;
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CreateReview_CreateReview_Review_Review)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Commentary.GetHashCode();
                hash ^= 397 * Stars.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// The mutations related to reviews.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface ICreateReviewResult
    {
        /// <summary>
        /// Creates a review for a given Star Wars episode.
        /// </summary>
        public global::StarWarsGeneratedClient.ICreateReview_CreateReview CreateReview { get; }
    }

    /// <summary>
    /// This payload allows us to query the created review object.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface ICreateReview_CreateReview
    {
        /// <summary>
        /// The review that was being created.
        /// </summary>
        public global::StarWarsGeneratedClient.ICreateReview_CreateReview_Review Review { get; }
    }

    /// <summary>
    /// This payload allows us to query the created review object.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface ICreateReview_CreateReview_CreateReviewPayload : ICreateReview_CreateReview
    {
    }

    /// <summary>
    /// A review of a particular movie.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface ICreateReview_CreateReview_Review
    {
        /// <summary>
        /// An explanation for the rating.
        /// </summary>
        public global::System.String Commentary { get; }

        /// <summary>
        /// The number of stars given for this review.
        /// </summary>
        public global::System.Int32 Stars { get; }
    }

    /// <summary>
    /// A review of a particular movie.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface ICreateReview_CreateReview_Review_Review : ICreateReview_CreateReview_Review
    {
    }

    /// <summary>
    /// The queries related to reviews.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersByIdsResult : global::System.IEquatable<GetCharactersByIdsResult>, IGetCharactersByIdsResult
    {
        public GetCharactersByIdsResult(global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.IGetCharactersByIds_CharactersByIds> charactersByIds)
        {
            CharactersByIds = charactersByIds;
        }

        /// <summary>
        /// Gets characters by it`s id.
        /// 
        /// 
        /// **Returns:**
        /// The characters.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.IGetCharactersByIds_CharactersByIds> CharactersByIds { get; }

        public virtual global::System.Boolean Equals(GetCharactersByIdsResult? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(CharactersByIds, other.CharactersByIds));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetCharactersByIdsResult)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                foreach (var CharactersByIds_elm in CharactersByIds)
                {
                    hash ^= 397 * CharactersByIds_elm.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersByIds_CharactersByIds_Human : global::System.IEquatable<GetCharactersByIds_CharactersByIds_Human>, IGetCharactersByIds_CharactersByIds_Human
    {
        public GetCharactersByIds_CharactersByIds_Human(global::System.Int32 id, global::System.String name, global::System.Double height, global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode> appearsIn)
        {
            Id = id;
            Name = name;
            Height = height;
            AppearsIn = appearsIn;
        }

        /// <summary>
        /// The unique identifier for the character.
        /// </summary>
        public global::System.Int32 Id { get; }

        /// <summary>
        /// The name of the character.
        /// </summary>
        public global::System.String Name { get; }

        /// <summary>
        /// The height of the character.
        /// </summary>
        public global::System.Double Height { get; }

        /// <summary>
        /// The episodes the character appears in.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode> AppearsIn { get; }

        public virtual global::System.Boolean Equals(GetCharactersByIds_CharactersByIds_Human? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id == other.Id) && Name.Equals(other.Name) && Height == other.Height && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(AppearsIn, other.AppearsIn);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetCharactersByIds_CharactersByIds_Human)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                hash ^= 397 * Name.GetHashCode();
                hash ^= 397 * Height.GetHashCode();
                foreach (var AppearsIn_elm in AppearsIn)
                {
                    hash ^= 397 * AppearsIn_elm.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersByIds_CharactersByIds_Droid : global::System.IEquatable<GetCharactersByIds_CharactersByIds_Droid>, IGetCharactersByIds_CharactersByIds_Droid
    {
        public GetCharactersByIds_CharactersByIds_Droid(global::System.Int32 id, global::System.String name, global::System.Double height, global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode> appearsIn)
        {
            Id = id;
            Name = name;
            Height = height;
            AppearsIn = appearsIn;
        }

        /// <summary>
        /// The unique identifier for the character.
        /// </summary>
        public global::System.Int32 Id { get; }

        /// <summary>
        /// The name of the character.
        /// </summary>
        public global::System.String Name { get; }

        /// <summary>
        /// The height of the character.
        /// </summary>
        public global::System.Double Height { get; }

        /// <summary>
        /// The episodes the character appears in.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode> AppearsIn { get; }

        public virtual global::System.Boolean Equals(GetCharactersByIds_CharactersByIds_Droid? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id == other.Id) && Name.Equals(other.Name) && Height == other.Height && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(AppearsIn, other.AppearsIn);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetCharactersByIds_CharactersByIds_Droid)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                hash ^= 397 * Name.GetHashCode();
                hash ^= 397 * Height.GetHashCode();
                foreach (var AppearsIn_elm in AppearsIn)
                {
                    hash ^= 397 * AppearsIn_elm.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// The queries related to reviews.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetCharactersByIdsResult
    {
        /// <summary>
        /// Gets characters by it`s id.
        /// 
        /// 
        /// **Returns:**
        /// The characters.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.IGetCharactersByIds_CharactersByIds> CharactersByIds { get; }
    }

    /// <summary>
    /// A character in the Star Wars universe.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IC
    {
        /// <summary>
        /// The unique identifier for the character.
        /// </summary>
        public global::System.Int32 Id { get; }

        /// <summary>
        /// The name of the character.
        /// </summary>
        public global::System.String Name { get; }

        /// <summary>
        /// The height of the character.
        /// </summary>
        public global::System.Double Height { get; }

        /// <summary>
        /// The episodes the character appears in.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode> AppearsIn { get; }
    }

    /// <summary>
    /// A character in the Star Wars universe.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetCharactersByIds_CharactersByIds : IC
    {
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetCharactersByIds_CharactersByIds_Human : IGetCharactersByIds_CharactersByIds
    {
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetCharactersByIds_CharactersByIds_Droid : IGetCharactersByIds_CharactersByIds
    {
    }

    /// <summary>
    /// The queries related to reviews.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetAllCharactersResult : global::System.IEquatable<GetAllCharactersResult>, IGetAllCharactersResult
    {
        public GetAllCharactersResult(global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.IGetAllCharacters_Characters> characters)
        {
            Characters = characters;
        }

        /// <summary>
        /// Gets all character.
        /// 
        /// 
        /// **Returns:**
        /// The character.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.IGetAllCharacters_Characters> Characters { get; }

        public virtual global::System.Boolean Equals(GetAllCharactersResult? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Characters, other.Characters));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetAllCharactersResult)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                foreach (var Characters_elm in Characters)
                {
                    hash ^= 397 * Characters_elm.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetAllCharacters_Characters_Human : global::System.IEquatable<GetAllCharacters_Characters_Human>, IGetAllCharacters_Characters_Human
    {
        public GetAllCharacters_Characters_Human(global::System.Int32 id, global::System.String name, global::System.Double height, global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode> appearsIn)
        {
            Id = id;
            Name = name;
            Height = height;
            AppearsIn = appearsIn;
        }

        /// <summary>
        /// The unique identifier for the character.
        /// </summary>
        public global::System.Int32 Id { get; }

        /// <summary>
        /// The name of the character.
        /// </summary>
        public global::System.String Name { get; }

        /// <summary>
        /// The height of the character.
        /// </summary>
        public global::System.Double Height { get; }

        /// <summary>
        /// The episodes the character appears in.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode> AppearsIn { get; }

        public virtual global::System.Boolean Equals(GetAllCharacters_Characters_Human? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id == other.Id) && Name.Equals(other.Name) && Height == other.Height && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(AppearsIn, other.AppearsIn);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetAllCharacters_Characters_Human)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                hash ^= 397 * Name.GetHashCode();
                hash ^= 397 * Height.GetHashCode();
                foreach (var AppearsIn_elm in AppearsIn)
                {
                    hash ^= 397 * AppearsIn_elm.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetAllCharacters_Characters_Droid : global::System.IEquatable<GetAllCharacters_Characters_Droid>, IGetAllCharacters_Characters_Droid
    {
        public GetAllCharacters_Characters_Droid(global::System.Int32 id, global::System.String name, global::System.Double height, global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode> appearsIn)
        {
            Id = id;
            Name = name;
            Height = height;
            AppearsIn = appearsIn;
        }

        /// <summary>
        /// The unique identifier for the character.
        /// </summary>
        public global::System.Int32 Id { get; }

        /// <summary>
        /// The name of the character.
        /// </summary>
        public global::System.String Name { get; }

        /// <summary>
        /// The height of the character.
        /// </summary>
        public global::System.Double Height { get; }

        /// <summary>
        /// The episodes the character appears in.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode> AppearsIn { get; }

        public virtual global::System.Boolean Equals(GetAllCharacters_Characters_Droid? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id == other.Id) && Name.Equals(other.Name) && Height == other.Height && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(AppearsIn, other.AppearsIn);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetAllCharacters_Characters_Droid)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                hash ^= 397 * Name.GetHashCode();
                hash ^= 397 * Height.GetHashCode();
                foreach (var AppearsIn_elm in AppearsIn)
                {
                    hash ^= 397 * AppearsIn_elm.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// The queries related to reviews.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetAllCharactersResult
    {
        /// <summary>
        /// Gets all character.
        /// 
        /// 
        /// **Returns:**
        /// The character.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.IGetAllCharacters_Characters> Characters { get; }
    }

    /// <summary>
    /// A character in the Star Wars universe.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetAllCharacters_Characters : IC
    {
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetAllCharacters_Characters_Human : IGetAllCharacters_Characters
    {
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetAllCharacters_Characters_Droid : IGetAllCharacters_Characters
    {
    }

    /// <summary>
    /// The queries related to reviews.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersWithCursorPagingResult : global::System.IEquatable<GetCharactersWithCursorPagingResult>, IGetCharactersWithCursorPagingResult
    {
        public GetCharactersWithCursorPagingResult(global::StarWarsGeneratedClient.IGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting? charactersWithCursorPagingFilteringAndSorting)
        {
            CharactersWithCursorPagingFilteringAndSorting = charactersWithCursorPagingFilteringAndSorting;
        }

        /// <summary>
        /// Gets all character.
        /// 
        /// 
        /// **Returns:**
        /// The character.
        /// </summary>
        public global::StarWarsGeneratedClient.IGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting? CharactersWithCursorPagingFilteringAndSorting { get; }

        public virtual global::System.Boolean Equals(GetCharactersWithCursorPagingResult? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((CharactersWithCursorPagingFilteringAndSorting is null && other.CharactersWithCursorPagingFilteringAndSorting is null) || CharactersWithCursorPagingFilteringAndSorting != null && CharactersWithCursorPagingFilteringAndSorting.Equals(other.CharactersWithCursorPagingFilteringAndSorting)));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetCharactersWithCursorPagingResult)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (CharactersWithCursorPagingFilteringAndSorting != null)
                {
                    hash ^= 397 * CharactersWithCursorPagingFilteringAndSorting.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// A connection to a list of items.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_CharactersWithCursorPagingFilteringAndSortingConnection : global::System.IEquatable<GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_CharactersWithCursorPagingFilteringAndSortingConnection>, IGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_CharactersWithCursorPagingFilteringAndSortingConnection
    {
        public GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_CharactersWithCursorPagingFilteringAndSortingConnection(global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.IGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes?>? nodes, global::System.Int32 totalCount, global::StarWarsGeneratedClient.IGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_PageInfo pageInfo)
        {
            Nodes = nodes;
            TotalCount = totalCount;
            PageInfo = pageInfo;
        }

        /// <summary>
        /// A flattened list of the nodes.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.IGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes?>? Nodes { get; }

        public global::System.Int32 TotalCount { get; }

        /// <summary>
        /// Information to aid in pagination.
        /// </summary>
        public global::StarWarsGeneratedClient.IGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_PageInfo PageInfo { get; }

        public virtual global::System.Boolean Equals(GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_CharactersWithCursorPagingFilteringAndSortingConnection? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Nodes, other.Nodes)) && TotalCount == other.TotalCount && PageInfo.Equals(other.PageInfo);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_CharactersWithCursorPagingFilteringAndSortingConnection)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (Nodes != null)
                {
                    foreach (var Nodes_elm in Nodes)
                    {
                        if (Nodes_elm != null)
                        {
                            hash ^= 397 * Nodes_elm.GetHashCode();
                        }
                    }
                }

                hash ^= 397 * TotalCount.GetHashCode();
                hash ^= 397 * PageInfo.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_Human : global::System.IEquatable<GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_Human>, IGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_Human
    {
        public GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_Human(global::System.Int32 id, global::System.String name, global::System.Double height, global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode> appearsIn)
        {
            Id = id;
            Name = name;
            Height = height;
            AppearsIn = appearsIn;
        }

        /// <summary>
        /// The unique identifier for the character.
        /// </summary>
        public global::System.Int32 Id { get; }

        /// <summary>
        /// The name of the character.
        /// </summary>
        public global::System.String Name { get; }

        /// <summary>
        /// The height of the character.
        /// </summary>
        public global::System.Double Height { get; }

        /// <summary>
        /// The episodes the character appears in.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode> AppearsIn { get; }

        public virtual global::System.Boolean Equals(GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_Human? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id == other.Id) && Name.Equals(other.Name) && Height == other.Height && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(AppearsIn, other.AppearsIn);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_Human)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                hash ^= 397 * Name.GetHashCode();
                hash ^= 397 * Height.GetHashCode();
                foreach (var AppearsIn_elm in AppearsIn)
                {
                    hash ^= 397 * AppearsIn_elm.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_Droid : global::System.IEquatable<GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_Droid>, IGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_Droid
    {
        public GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_Droid(global::System.Int32 id, global::System.String name, global::System.Double height, global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode> appearsIn)
        {
            Id = id;
            Name = name;
            Height = height;
            AppearsIn = appearsIn;
        }

        /// <summary>
        /// The unique identifier for the character.
        /// </summary>
        public global::System.Int32 Id { get; }

        /// <summary>
        /// The name of the character.
        /// </summary>
        public global::System.String Name { get; }

        /// <summary>
        /// The height of the character.
        /// </summary>
        public global::System.Double Height { get; }

        /// <summary>
        /// The episodes the character appears in.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode> AppearsIn { get; }

        public virtual global::System.Boolean Equals(GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_Droid? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id == other.Id) && Name.Equals(other.Name) && Height == other.Height && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(AppearsIn, other.AppearsIn);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_Droid)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                hash ^= 397 * Name.GetHashCode();
                hash ^= 397 * Height.GetHashCode();
                foreach (var AppearsIn_elm in AppearsIn)
                {
                    hash ^= 397 * AppearsIn_elm.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// Information about pagination in a connection.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_PageInfo_PageInfo : global::System.IEquatable<GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_PageInfo_PageInfo>, IGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_PageInfo_PageInfo
    {
        public GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_PageInfo_PageInfo(global::System.String? endCursor, global::System.String? startCursor, global::System.Boolean hasNextPage, global::System.Boolean hasPreviousPage)
        {
            EndCursor = endCursor;
            StartCursor = startCursor;
            HasNextPage = hasNextPage;
            HasPreviousPage = hasPreviousPage;
        }

        /// <summary>
        /// When paginating forwards, the cursor to continue.
        /// </summary>
        public global::System.String? EndCursor { get; }

        /// <summary>
        /// When paginating backwards, the cursor to continue.
        /// </summary>
        public global::System.String? StartCursor { get; }

        /// <summary>
        /// Indicates whether more edges exist following the set defined by the clients arguments.
        /// </summary>
        public global::System.Boolean HasNextPage { get; }

        /// <summary>
        /// Indicates whether more edges exist prior the set defined by the clients arguments.
        /// </summary>
        public global::System.Boolean HasPreviousPage { get; }

        public virtual global::System.Boolean Equals(GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_PageInfo_PageInfo? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((EndCursor is null && other.EndCursor is null) || EndCursor != null && EndCursor.Equals(other.EndCursor))) && ((StartCursor is null && other.StartCursor is null) || StartCursor != null && StartCursor.Equals(other.StartCursor)) && HasNextPage == other.HasNextPage && HasPreviousPage == other.HasPreviousPage;
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_PageInfo_PageInfo)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (EndCursor != null)
                {
                    hash ^= 397 * EndCursor.GetHashCode();
                }

                if (StartCursor != null)
                {
                    hash ^= 397 * StartCursor.GetHashCode();
                }

                hash ^= 397 * HasNextPage.GetHashCode();
                hash ^= 397 * HasPreviousPage.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// The queries related to reviews.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetCharactersWithCursorPagingResult
    {
        /// <summary>
        /// Gets all character.
        /// 
        /// 
        /// **Returns:**
        /// The character.
        /// </summary>
        public global::StarWarsGeneratedClient.IGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting? CharactersWithCursorPagingFilteringAndSorting { get; }
    }

    /// <summary>
    /// A connection to a list of items.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting
    {
        /// <summary>
        /// A flattened list of the nodes.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.IGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes?>? Nodes { get; }

        public global::System.Int32 TotalCount { get; }

        /// <summary>
        /// Information to aid in pagination.
        /// </summary>
        public global::StarWarsGeneratedClient.IGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_PageInfo PageInfo { get; }
    }

    /// <summary>
    /// A connection to a list of items.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_CharactersWithCursorPagingFilteringAndSortingConnection : IGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting
    {
    }

    /// <summary>
    /// A character in the Star Wars universe.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes : IC
    {
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_Human : IGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes
    {
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_Droid : IGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes
    {
    }

    /// <summary>
    /// Information about pagination in a connection.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_PageInfo
    {
        /// <summary>
        /// When paginating forwards, the cursor to continue.
        /// </summary>
        public global::System.String? EndCursor { get; }

        /// <summary>
        /// When paginating backwards, the cursor to continue.
        /// </summary>
        public global::System.String? StartCursor { get; }

        /// <summary>
        /// Indicates whether more edges exist following the set defined by the clients arguments.
        /// </summary>
        public global::System.Boolean HasNextPage { get; }

        /// <summary>
        /// Indicates whether more edges exist prior the set defined by the clients arguments.
        /// </summary>
        public global::System.Boolean HasPreviousPage { get; }
    }

    /// <summary>
    /// Information about pagination in a connection.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_PageInfo_PageInfo : IGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_PageInfo
    {
    }

    /// <summary>
    /// The queries related to reviews.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersWithPagingResult : global::System.IEquatable<GetCharactersWithPagingResult>, IGetCharactersWithPagingResult
    {
        public GetCharactersWithPagingResult(global::StarWarsGeneratedClient.IGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting? charactersWithPagingFilteringAndSorting)
        {
            CharactersWithPagingFilteringAndSorting = charactersWithPagingFilteringAndSorting;
        }

        /// <summary>
        /// Gets all character.
        /// 
        /// 
        /// **Returns:**
        /// The character.
        /// </summary>
        public global::StarWarsGeneratedClient.IGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting? CharactersWithPagingFilteringAndSorting { get; }

        public virtual global::System.Boolean Equals(GetCharactersWithPagingResult? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((CharactersWithPagingFilteringAndSorting is null && other.CharactersWithPagingFilteringAndSorting is null) || CharactersWithPagingFilteringAndSorting != null && CharactersWithPagingFilteringAndSorting.Equals(other.CharactersWithPagingFilteringAndSorting)));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetCharactersWithPagingResult)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (CharactersWithPagingFilteringAndSorting != null)
                {
                    hash ^= 397 * CharactersWithPagingFilteringAndSorting.GetHashCode();
                }

                return hash;
            }
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_CharacterCollectionSegment : global::System.IEquatable<GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_CharacterCollectionSegment>, IGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_CharacterCollectionSegment
    {
        public GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_CharacterCollectionSegment(global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.IGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items?>? items, global::System.Int32 totalCount, global::StarWarsGeneratedClient.IGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_PageInfo pageInfo)
        {
            Items = items;
            TotalCount = totalCount;
            PageInfo = pageInfo;
        }

        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.IGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items?>? Items { get; }

        public global::System.Int32 TotalCount { get; }

        /// <summary>
        /// Information to aid in pagination.
        /// </summary>
        public global::StarWarsGeneratedClient.IGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_PageInfo PageInfo { get; }

        public virtual global::System.Boolean Equals(GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_CharacterCollectionSegment? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Items, other.Items)) && TotalCount == other.TotalCount && PageInfo.Equals(other.PageInfo);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_CharacterCollectionSegment)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (Items != null)
                {
                    foreach (var Items_elm in Items)
                    {
                        if (Items_elm != null)
                        {
                            hash ^= 397 * Items_elm.GetHashCode();
                        }
                    }
                }

                hash ^= 397 * TotalCount.GetHashCode();
                hash ^= 397 * PageInfo.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_Human : global::System.IEquatable<GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_Human>, IGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_Human
    {
        public GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_Human(global::System.Int32 id, global::System.String name, global::System.Double height, global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode> appearsIn)
        {
            Id = id;
            Name = name;
            Height = height;
            AppearsIn = appearsIn;
        }

        /// <summary>
        /// The unique identifier for the character.
        /// </summary>
        public global::System.Int32 Id { get; }

        /// <summary>
        /// The name of the character.
        /// </summary>
        public global::System.String Name { get; }

        /// <summary>
        /// The height of the character.
        /// </summary>
        public global::System.Double Height { get; }

        /// <summary>
        /// The episodes the character appears in.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode> AppearsIn { get; }

        public virtual global::System.Boolean Equals(GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_Human? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id == other.Id) && Name.Equals(other.Name) && Height == other.Height && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(AppearsIn, other.AppearsIn);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_Human)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                hash ^= 397 * Name.GetHashCode();
                hash ^= 397 * Height.GetHashCode();
                foreach (var AppearsIn_elm in AppearsIn)
                {
                    hash ^= 397 * AppearsIn_elm.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_Droid : global::System.IEquatable<GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_Droid>, IGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_Droid
    {
        public GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_Droid(global::System.Int32 id, global::System.String name, global::System.Double height, global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode> appearsIn)
        {
            Id = id;
            Name = name;
            Height = height;
            AppearsIn = appearsIn;
        }

        /// <summary>
        /// The unique identifier for the character.
        /// </summary>
        public global::System.Int32 Id { get; }

        /// <summary>
        /// The name of the character.
        /// </summary>
        public global::System.String Name { get; }

        /// <summary>
        /// The height of the character.
        /// </summary>
        public global::System.Double Height { get; }

        /// <summary>
        /// The episodes the character appears in.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode> AppearsIn { get; }

        public virtual global::System.Boolean Equals(GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_Droid? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id == other.Id) && Name.Equals(other.Name) && Height == other.Height && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(AppearsIn, other.AppearsIn);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_Droid)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                hash ^= 397 * Name.GetHashCode();
                hash ^= 397 * Height.GetHashCode();
                foreach (var AppearsIn_elm in AppearsIn)
                {
                    hash ^= 397 * AppearsIn_elm.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// Information about the offset pagination.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_PageInfo_CollectionSegmentInfo : global::System.IEquatable<GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_PageInfo_CollectionSegmentInfo>, IGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_PageInfo_CollectionSegmentInfo
    {
        public GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_PageInfo_CollectionSegmentInfo(global::System.Boolean hasNextPage, global::System.Boolean hasPreviousPage)
        {
            HasNextPage = hasNextPage;
            HasPreviousPage = hasPreviousPage;
        }

        /// <summary>
        /// Indicates whether more items exist following the set defined by the clients arguments.
        /// </summary>
        public global::System.Boolean HasNextPage { get; }

        /// <summary>
        /// Indicates whether more items exist prior the set defined by the clients arguments.
        /// </summary>
        public global::System.Boolean HasPreviousPage { get; }

        public virtual global::System.Boolean Equals(GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_PageInfo_CollectionSegmentInfo? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (HasNextPage == other.HasNextPage) && HasPreviousPage == other.HasPreviousPage;
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_PageInfo_CollectionSegmentInfo)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * HasNextPage.GetHashCode();
                hash ^= 397 * HasPreviousPage.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// The queries related to reviews.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetCharactersWithPagingResult
    {
        /// <summary>
        /// Gets all character.
        /// 
        /// 
        /// **Returns:**
        /// The character.
        /// </summary>
        public global::StarWarsGeneratedClient.IGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting? CharactersWithPagingFilteringAndSorting { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting
    {
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.IGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items?>? Items { get; }

        public global::System.Int32 TotalCount { get; }

        /// <summary>
        /// Information to aid in pagination.
        /// </summary>
        public global::StarWarsGeneratedClient.IGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_PageInfo PageInfo { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_CharacterCollectionSegment : IGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting
    {
    }

    /// <summary>
    /// A character in the Star Wars universe.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items : IC
    {
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_Human : IGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items
    {
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_Droid : IGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items
    {
    }

    /// <summary>
    /// Information about the offset pagination.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_PageInfo
    {
        /// <summary>
        /// Indicates whether more items exist following the set defined by the clients arguments.
        /// </summary>
        public global::System.Boolean HasNextPage { get; }

        /// <summary>
        /// Indicates whether more items exist prior the set defined by the clients arguments.
        /// </summary>
        public global::System.Boolean HasPreviousPage { get; }
    }

    /// <summary>
    /// Information about the offset pagination.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_PageInfo_CollectionSegmentInfo : IGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_PageInfo
    {
    }

    /// <summary>
    /// The queries related to reviews.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetAllHumansAndDroidsResult : global::System.IEquatable<GetAllHumansAndDroidsResult>, IGetAllHumansAndDroidsResult
    {
        public GetAllHumansAndDroidsResult(global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.IGetAllHumansAndDroids_Characters> characters)
        {
            Characters = characters;
        }

        /// <summary>
        /// Gets all character.
        /// 
        /// 
        /// **Returns:**
        /// The character.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.IGetAllHumansAndDroids_Characters> Characters { get; }

        public virtual global::System.Boolean Equals(GetAllHumansAndDroidsResult? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Characters, other.Characters));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetAllHumansAndDroidsResult)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                foreach (var Characters_elm in Characters)
                {
                    hash ^= 397 * Characters_elm.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetAllHumansAndDroids_Characters_Human : global::System.IEquatable<GetAllHumansAndDroids_Characters_Human>, IGetAllHumansAndDroids_Characters_Human
    {
        public GetAllHumansAndDroids_Characters_Human(global::System.Int32 id, global::System.String name, global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode> appearsIn)
        {
            Id = id;
            Name = name;
            AppearsIn = appearsIn;
        }

        /// <summary>
        /// The unique identifier for the character.
        /// </summary>
        public global::System.Int32 Id { get; }

        /// <summary>
        /// The name of the character.
        /// </summary>
        public global::System.String Name { get; }

        /// <summary>
        /// The episodes the character appears in.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode> AppearsIn { get; }

        public virtual global::System.Boolean Equals(GetAllHumansAndDroids_Characters_Human? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id == other.Id) && Name.Equals(other.Name) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(AppearsIn, other.AppearsIn);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetAllHumansAndDroids_Characters_Human)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                hash ^= 397 * Name.GetHashCode();
                foreach (var AppearsIn_elm in AppearsIn)
                {
                    hash ^= 397 * AppearsIn_elm.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetAllHumansAndDroids_Characters_Droid : global::System.IEquatable<GetAllHumansAndDroids_Characters_Droid>, IGetAllHumansAndDroids_Characters_Droid
    {
        public GetAllHumansAndDroids_Characters_Droid(global::System.Int32 id, global::System.String name, global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode> appearsIn, global::System.String primaryFunction)
        {
            Id = id;
            Name = name;
            AppearsIn = appearsIn;
            PrimaryFunction = primaryFunction;
        }

        /// <summary>
        /// The unique identifier for the character.
        /// </summary>
        public global::System.Int32 Id { get; }

        /// <summary>
        /// The name of the character.
        /// </summary>
        public global::System.String Name { get; }

        /// <summary>
        /// The episodes the character appears in.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode> AppearsIn { get; }

        /// <summary>
        /// The droid's primary function.
        /// </summary>
        public global::System.String PrimaryFunction { get; }

        public virtual global::System.Boolean Equals(GetAllHumansAndDroids_Characters_Droid? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id == other.Id) && Name.Equals(other.Name) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(AppearsIn, other.AppearsIn) && PrimaryFunction.Equals(other.PrimaryFunction);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetAllHumansAndDroids_Characters_Droid)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                hash ^= 397 * Name.GetHashCode();
                foreach (var AppearsIn_elm in AppearsIn)
                {
                    hash ^= 397 * AppearsIn_elm.GetHashCode();
                }

                hash ^= 397 * PrimaryFunction.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// The queries related to reviews.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetAllHumansAndDroidsResult
    {
        /// <summary>
        /// Gets all character.
        /// 
        /// 
        /// **Returns:**
        /// The character.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.IGetAllHumansAndDroids_Characters> Characters { get; }
    }

    /// <summary>
    /// A character in the Star Wars universe.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetAllHumansAndDroids_Characters
    {
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IH
    {
        /// <summary>
        /// The unique identifier for the character.
        /// </summary>
        public global::System.Int32 Id { get; }

        /// <summary>
        /// The name of the character.
        /// </summary>
        public global::System.String Name { get; }

        /// <summary>
        /// The episodes the character appears in.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode> AppearsIn { get; }
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetAllHumansAndDroids_Characters_Human : IGetAllHumansAndDroids_Characters, IH
    {
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface ID
    {
        /// <summary>
        /// The unique identifier for the character.
        /// </summary>
        public global::System.Int32 Id { get; }

        /// <summary>
        /// The name of the character.
        /// </summary>
        public global::System.String Name { get; }

        /// <summary>
        /// The episodes the character appears in.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode> AppearsIn { get; }

        /// <summary>
        /// The droid's primary function.
        /// </summary>
        public global::System.String PrimaryFunction { get; }
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetAllHumansAndDroids_Characters_Droid : IGetAllHumansAndDroids_Characters, ID
    {
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class CreateReviewInputInputValueFormatter : global::StrawberryShake.Serialization.IInputObjectFormatter
    {
        private global::StrawberryShake.Serialization.IInputValueFormatter _episodeFormatter = default !;
        private global::StrawberryShake.Serialization.IInputValueFormatter _intFormatter = default !;
        private global::StrawberryShake.Serialization.IInputValueFormatter _stringFormatter = default !;
        public global::System.String TypeName => "CreateReviewInput";
        public void Initialize(global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _episodeFormatter = serializerResolver.GetInputValueFormatter("Episode");
            _intFormatter = serializerResolver.GetInputValueFormatter("Int");
            _stringFormatter = serializerResolver.GetInputValueFormatter("String");
        }

        public global::System.Object? Format(global::System.Object? runtimeValue)
        {
            if (runtimeValue is null)
            {
                return null;
            }

            var input = runtimeValue as global::StarWarsGeneratedClient.CreateReviewInput;
            var inputInfo = runtimeValue as global::StarWarsGeneratedClient.State.ICreateReviewInputInfo;
            if (input is null || inputInfo is null)
            {
                throw new global::System.ArgumentException(nameof(runtimeValue));
            }

            var fields = new global::System.Collections.Generic.List<global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>>();
            if (inputInfo.IsEpisodeSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("episode", FormatEpisode(input.Episode)));
            }

            if (inputInfo.IsStarsSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("stars", FormatStars(input.Stars)));
            }

            if (inputInfo.IsCommentarySet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("commentary", FormatCommentary(input.Commentary)));
            }

            return fields;
        }

        private global::System.Object? FormatEpisode(global::StarWarsGeneratedClient.Episode input)
        {
            return _episodeFormatter.Format(input);
        }

        private global::System.Object? FormatStars(global::System.Int32 input)
        {
            return _intFormatter.Format(input);
        }

        private global::System.Object? FormatCommentary(global::System.String input)
        {
            if (input is null)
            {
                throw new global::System.ArgumentNullException(nameof(input));
            }

            return _stringFormatter.Format(input);
        }
    }

    ///<summary>This input represents the data needed to create a review.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class CreateReviewInput : global::StarWarsGeneratedClient.State.ICreateReviewInputInfo, global::System.IEquatable<CreateReviewInput>
    {
        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CreateReviewInput)obj);
        }

        public virtual global::System.Boolean Equals(CreateReviewInput? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Episode.Equals(other.Episode)) && Stars == other.Stars && Commentary.Equals(other.Commentary);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Episode.GetHashCode();
                hash ^= 397 * Stars.GetHashCode();
                hash ^= 397 * Commentary.GetHashCode();
                return hash;
            }
        }

        private global::StarWarsGeneratedClient.Episode _value_episode;
        private global::System.Boolean _set_episode;
        private global::System.Int32 _value_stars;
        private global::System.Boolean _set_stars;
        private global::System.String _value_commentary = default !;
        private global::System.Boolean _set_commentary;
        ///<summary>The review for which to create the review.</summary>
        public global::StarWarsGeneratedClient.Episode Episode
        {
            get => _value_episode;
            set
            {
                _set_episode = true;
                _value_episode = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.ICreateReviewInputInfo.IsEpisodeSet => _set_episode;
        ///<summary>The number of stars given for this review.</summary>
        public global::System.Int32 Stars
        {
            get => _value_stars;
            set
            {
                _set_stars = true;
                _value_stars = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.ICreateReviewInputInfo.IsStarsSet => _set_stars;
        ///<summary>An explanation for the rating.</summary>
        public global::System.String Commentary
        {
            get => _value_commentary;
            set
            {
                _set_commentary = true;
                _value_commentary = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.ICreateReviewInputInfo.IsCommentarySet => _set_commentary;
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class ICharacterFilterInputInputValueFormatter : global::StrawberryShake.Serialization.IInputObjectFormatter
    {
        private global::StrawberryShake.Serialization.IInputValueFormatter _iCharacterFilterInputFormatter = default !;
        private global::StrawberryShake.Serialization.IInputValueFormatter _comparableInt32OperationFilterInputFormatter = default !;
        private global::StrawberryShake.Serialization.IInputValueFormatter _stringOperationFilterInputFormatter = default !;
        private global::StrawberryShake.Serialization.IInputValueFormatter _listComparableInt32OperationFilterInputFormatter = default !;
        private global::StrawberryShake.Serialization.IInputValueFormatter _listEpisodeOperationFilterInputFormatter = default !;
        private global::StrawberryShake.Serialization.IInputValueFormatter _comparableDoubleOperationFilterInputFormatter = default !;
        public global::System.String TypeName => "ICharacterFilterInput";
        public void Initialize(global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _iCharacterFilterInputFormatter = serializerResolver.GetInputValueFormatter("ICharacterFilterInput");
            _comparableInt32OperationFilterInputFormatter = serializerResolver.GetInputValueFormatter("ComparableInt32OperationFilterInput");
            _stringOperationFilterInputFormatter = serializerResolver.GetInputValueFormatter("StringOperationFilterInput");
            _listComparableInt32OperationFilterInputFormatter = serializerResolver.GetInputValueFormatter("ListComparableInt32OperationFilterInput");
            _listEpisodeOperationFilterInputFormatter = serializerResolver.GetInputValueFormatter("ListEpisodeOperationFilterInput");
            _comparableDoubleOperationFilterInputFormatter = serializerResolver.GetInputValueFormatter("ComparableDoubleOperationFilterInput");
        }

        public global::System.Object? Format(global::System.Object? runtimeValue)
        {
            if (runtimeValue is null)
            {
                return null;
            }

            var input = runtimeValue as global::StarWarsGeneratedClient.ICharacterFilterInput;
            var inputInfo = runtimeValue as global::StarWarsGeneratedClient.State.IICharacterFilterInputInfo;
            if (input is null || inputInfo is null)
            {
                throw new global::System.ArgumentException(nameof(runtimeValue));
            }

            var fields = new global::System.Collections.Generic.List<global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>>();
            if (inputInfo.IsAndSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("and", FormatAnd(input.And)));
            }

            if (inputInfo.IsOrSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("or", FormatOr(input.Or)));
            }

            if (inputInfo.IsIdSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("id", FormatId(input.Id)));
            }

            if (inputInfo.IsNameSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("name", FormatName(input.Name)));
            }

            if (inputInfo.IsFriendsSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("friends", FormatFriends(input.Friends)));
            }

            if (inputInfo.IsAppearsInSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("appearsIn", FormatAppearsIn(input.AppearsIn)));
            }

            if (inputInfo.IsHeightSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("height", FormatHeight(input.Height)));
            }

            return fields;
        }

        private global::System.Object? FormatAnd(global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.ICharacterFilterInput>? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                var input_list = new global::System.Collections.Generic.List<global::System.Object?>();
                foreach (var input_elm in input)
                {
                    if (input_elm is null)
                    {
                        throw new global::System.ArgumentNullException(nameof(input_elm));
                    }

                    input_list.Add(_iCharacterFilterInputFormatter.Format(input_elm));
                }

                return input_list;
            }
        }

        private global::System.Object? FormatOr(global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.ICharacterFilterInput>? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                var input_list = new global::System.Collections.Generic.List<global::System.Object?>();
                foreach (var input_elm in input)
                {
                    if (input_elm is null)
                    {
                        throw new global::System.ArgumentNullException(nameof(input_elm));
                    }

                    input_list.Add(_iCharacterFilterInputFormatter.Format(input_elm));
                }

                return input_list;
            }
        }

        private global::System.Object? FormatId(global::StarWarsGeneratedClient.ComparableInt32OperationFilterInput? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _comparableInt32OperationFilterInputFormatter.Format(input);
            }
        }

        private global::System.Object? FormatName(global::StarWarsGeneratedClient.StringOperationFilterInput? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _stringOperationFilterInputFormatter.Format(input);
            }
        }

        private global::System.Object? FormatFriends(global::StarWarsGeneratedClient.ListComparableInt32OperationFilterInput? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _listComparableInt32OperationFilterInputFormatter.Format(input);
            }
        }

        private global::System.Object? FormatAppearsIn(global::StarWarsGeneratedClient.ListEpisodeOperationFilterInput? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _listEpisodeOperationFilterInputFormatter.Format(input);
            }
        }

        private global::System.Object? FormatHeight(global::StarWarsGeneratedClient.ComparableDoubleOperationFilterInput? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _comparableDoubleOperationFilterInputFormatter.Format(input);
            }
        }
    }

    ///<summary>A character in the Star Wars universe.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class ICharacterFilterInput : global::StarWarsGeneratedClient.State.IICharacterFilterInputInfo, global::System.IEquatable<ICharacterFilterInput>
    {
        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((ICharacterFilterInput)obj);
        }

        public virtual global::System.Boolean Equals(ICharacterFilterInput? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(And, other.And)) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Or, other.Or) && ((Id is null && other.Id is null) || Id != null && Id.Equals(other.Id)) && ((Name is null && other.Name is null) || Name != null && Name.Equals(other.Name)) && ((Friends is null && other.Friends is null) || Friends != null && Friends.Equals(other.Friends)) && ((AppearsIn is null && other.AppearsIn is null) || AppearsIn != null && AppearsIn.Equals(other.AppearsIn)) && ((Height is null && other.Height is null) || Height != null && Height.Equals(other.Height));
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (And != null)
                {
                    foreach (var And_elm in And)
                    {
                        hash ^= 397 * And_elm.GetHashCode();
                    }
                }

                if (Or != null)
                {
                    foreach (var Or_elm in Or)
                    {
                        hash ^= 397 * Or_elm.GetHashCode();
                    }
                }

                if (Id != null)
                {
                    hash ^= 397 * Id.GetHashCode();
                }

                if (Name != null)
                {
                    hash ^= 397 * Name.GetHashCode();
                }

                if (Friends != null)
                {
                    hash ^= 397 * Friends.GetHashCode();
                }

                if (AppearsIn != null)
                {
                    hash ^= 397 * AppearsIn.GetHashCode();
                }

                if (Height != null)
                {
                    hash ^= 397 * Height.GetHashCode();
                }

                return hash;
            }
        }

        private global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.ICharacterFilterInput>? _value_and;
        private global::System.Boolean _set_and;
        private global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.ICharacterFilterInput>? _value_or;
        private global::System.Boolean _set_or;
        private global::StarWarsGeneratedClient.ComparableInt32OperationFilterInput? _value_id;
        private global::System.Boolean _set_id;
        private global::StarWarsGeneratedClient.StringOperationFilterInput? _value_name;
        private global::System.Boolean _set_name;
        private global::StarWarsGeneratedClient.ListComparableInt32OperationFilterInput? _value_friends;
        private global::System.Boolean _set_friends;
        private global::StarWarsGeneratedClient.ListEpisodeOperationFilterInput? _value_appearsIn;
        private global::System.Boolean _set_appearsIn;
        private global::StarWarsGeneratedClient.ComparableDoubleOperationFilterInput? _value_height;
        private global::System.Boolean _set_height;
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.ICharacterFilterInput>? And
        {
            get => _value_and;
            set
            {
                _set_and = true;
                _value_and = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IICharacterFilterInputInfo.IsAndSet => _set_and;
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.ICharacterFilterInput>? Or
        {
            get => _value_or;
            set
            {
                _set_or = true;
                _value_or = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IICharacterFilterInputInfo.IsOrSet => _set_or;
        ///<summary>The unique identifier for the character.</summary>
        public global::StarWarsGeneratedClient.ComparableInt32OperationFilterInput? Id
        {
            get => _value_id;
            set
            {
                _set_id = true;
                _value_id = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IICharacterFilterInputInfo.IsIdSet => _set_id;
        ///<summary>The name of the character.</summary>
        public global::StarWarsGeneratedClient.StringOperationFilterInput? Name
        {
            get => _value_name;
            set
            {
                _set_name = true;
                _value_name = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IICharacterFilterInputInfo.IsNameSet => _set_name;
        ///<summary>The ids of the character's friends.</summary>
        public global::StarWarsGeneratedClient.ListComparableInt32OperationFilterInput? Friends
        {
            get => _value_friends;
            set
            {
                _set_friends = true;
                _value_friends = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IICharacterFilterInputInfo.IsFriendsSet => _set_friends;
        ///<summary>The episodes the character appears in.</summary>
        public global::StarWarsGeneratedClient.ListEpisodeOperationFilterInput? AppearsIn
        {
            get => _value_appearsIn;
            set
            {
                _set_appearsIn = true;
                _value_appearsIn = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IICharacterFilterInputInfo.IsAppearsInSet => _set_appearsIn;
        ///<summary>The height of the character.</summary>
        public global::StarWarsGeneratedClient.ComparableDoubleOperationFilterInput? Height
        {
            get => _value_height;
            set
            {
                _set_height = true;
                _value_height = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IICharacterFilterInputInfo.IsHeightSet => _set_height;
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class ComparableInt32OperationFilterInputInputValueFormatter : global::StrawberryShake.Serialization.IInputObjectFormatter
    {
        private global::StrawberryShake.Serialization.IInputValueFormatter _intFormatter = default !;
        public global::System.String TypeName => "ComparableInt32OperationFilterInput";
        public void Initialize(global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _intFormatter = serializerResolver.GetInputValueFormatter("Int");
        }

        public global::System.Object? Format(global::System.Object? runtimeValue)
        {
            if (runtimeValue is null)
            {
                return null;
            }

            var input = runtimeValue as global::StarWarsGeneratedClient.ComparableInt32OperationFilterInput;
            var inputInfo = runtimeValue as global::StarWarsGeneratedClient.State.IComparableInt32OperationFilterInputInfo;
            if (input is null || inputInfo is null)
            {
                throw new global::System.ArgumentException(nameof(runtimeValue));
            }

            var fields = new global::System.Collections.Generic.List<global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>>();
            if (inputInfo.IsEqSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("eq", FormatEq(input.Eq)));
            }

            if (inputInfo.IsNeqSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("neq", FormatNeq(input.Neq)));
            }

            if (inputInfo.IsInSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("in", FormatIn(input.In)));
            }

            if (inputInfo.IsNinSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("nin", FormatNin(input.Nin)));
            }

            if (inputInfo.IsGtSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("gt", FormatGt(input.Gt)));
            }

            if (inputInfo.IsNgtSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("ngt", FormatNgt(input.Ngt)));
            }

            if (inputInfo.IsGteSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("gte", FormatGte(input.Gte)));
            }

            if (inputInfo.IsNgteSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("ngte", FormatNgte(input.Ngte)));
            }

            if (inputInfo.IsLtSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("lt", FormatLt(input.Lt)));
            }

            if (inputInfo.IsNltSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("nlt", FormatNlt(input.Nlt)));
            }

            if (inputInfo.IsLteSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("lte", FormatLte(input.Lte)));
            }

            if (inputInfo.IsNlteSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("nlte", FormatNlte(input.Nlte)));
            }

            return fields;
        }

        private global::System.Object? FormatEq(global::System.Int32? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _intFormatter.Format(input);
            }
        }

        private global::System.Object? FormatNeq(global::System.Int32? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _intFormatter.Format(input);
            }
        }

        private global::System.Object? FormatIn(global::System.Collections.Generic.IReadOnlyList<global::System.Int32>? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                var input_list = new global::System.Collections.Generic.List<global::System.Object?>();
                foreach (var input_elm in input)
                {
                    input_list.Add(_intFormatter.Format(input_elm));
                }

                return input_list;
            }
        }

        private global::System.Object? FormatNin(global::System.Collections.Generic.IReadOnlyList<global::System.Int32>? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                var input_list = new global::System.Collections.Generic.List<global::System.Object?>();
                foreach (var input_elm in input)
                {
                    input_list.Add(_intFormatter.Format(input_elm));
                }

                return input_list;
            }
        }

        private global::System.Object? FormatGt(global::System.Int32? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _intFormatter.Format(input);
            }
        }

        private global::System.Object? FormatNgt(global::System.Int32? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _intFormatter.Format(input);
            }
        }

        private global::System.Object? FormatGte(global::System.Int32? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _intFormatter.Format(input);
            }
        }

        private global::System.Object? FormatNgte(global::System.Int32? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _intFormatter.Format(input);
            }
        }

        private global::System.Object? FormatLt(global::System.Int32? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _intFormatter.Format(input);
            }
        }

        private global::System.Object? FormatNlt(global::System.Int32? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _intFormatter.Format(input);
            }
        }

        private global::System.Object? FormatLte(global::System.Int32? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _intFormatter.Format(input);
            }
        }

        private global::System.Object? FormatNlte(global::System.Int32? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _intFormatter.Format(input);
            }
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class ComparableInt32OperationFilterInput : global::StarWarsGeneratedClient.State.IComparableInt32OperationFilterInputInfo, global::System.IEquatable<ComparableInt32OperationFilterInput>
    {
        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((ComparableInt32OperationFilterInput)obj);
        }

        public virtual global::System.Boolean Equals(ComparableInt32OperationFilterInput? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Eq == other.Eq) && Neq == other.Neq && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(In, other.In) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Nin, other.Nin) && Gt == other.Gt && Ngt == other.Ngt && Gte == other.Gte && Ngte == other.Ngte && Lt == other.Lt && Nlt == other.Nlt && Lte == other.Lte && Nlte == other.Nlte;
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (Eq != null)
                {
                    hash ^= 397 * Eq.GetHashCode();
                }

                if (Neq != null)
                {
                    hash ^= 397 * Neq.GetHashCode();
                }

                if (In != null)
                {
                    foreach (var In_elm in In)
                    {
                        hash ^= 397 * In_elm.GetHashCode();
                    }
                }

                if (Nin != null)
                {
                    foreach (var Nin_elm in Nin)
                    {
                        hash ^= 397 * Nin_elm.GetHashCode();
                    }
                }

                if (Gt != null)
                {
                    hash ^= 397 * Gt.GetHashCode();
                }

                if (Ngt != null)
                {
                    hash ^= 397 * Ngt.GetHashCode();
                }

                if (Gte != null)
                {
                    hash ^= 397 * Gte.GetHashCode();
                }

                if (Ngte != null)
                {
                    hash ^= 397 * Ngte.GetHashCode();
                }

                if (Lt != null)
                {
                    hash ^= 397 * Lt.GetHashCode();
                }

                if (Nlt != null)
                {
                    hash ^= 397 * Nlt.GetHashCode();
                }

                if (Lte != null)
                {
                    hash ^= 397 * Lte.GetHashCode();
                }

                if (Nlte != null)
                {
                    hash ^= 397 * Nlte.GetHashCode();
                }

                return hash;
            }
        }

        private global::System.Int32? _value_eq;
        private global::System.Boolean _set_eq;
        private global::System.Int32? _value_neq;
        private global::System.Boolean _set_neq;
        private global::System.Collections.Generic.IReadOnlyList<global::System.Int32>? _value_in;
        private global::System.Boolean _set_in;
        private global::System.Collections.Generic.IReadOnlyList<global::System.Int32>? _value_nin;
        private global::System.Boolean _set_nin;
        private global::System.Int32? _value_gt;
        private global::System.Boolean _set_gt;
        private global::System.Int32? _value_ngt;
        private global::System.Boolean _set_ngt;
        private global::System.Int32? _value_gte;
        private global::System.Boolean _set_gte;
        private global::System.Int32? _value_ngte;
        private global::System.Boolean _set_ngte;
        private global::System.Int32? _value_lt;
        private global::System.Boolean _set_lt;
        private global::System.Int32? _value_nlt;
        private global::System.Boolean _set_nlt;
        private global::System.Int32? _value_lte;
        private global::System.Boolean _set_lte;
        private global::System.Int32? _value_nlte;
        private global::System.Boolean _set_nlte;
        public global::System.Int32? Eq
        {
            get => _value_eq;
            set
            {
                _set_eq = true;
                _value_eq = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IComparableInt32OperationFilterInputInfo.IsEqSet => _set_eq;
        public global::System.Int32? Neq
        {
            get => _value_neq;
            set
            {
                _set_neq = true;
                _value_neq = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IComparableInt32OperationFilterInputInfo.IsNeqSet => _set_neq;
        public global::System.Collections.Generic.IReadOnlyList<global::System.Int32>? In
        {
            get => _value_in;
            set
            {
                _set_in = true;
                _value_in = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IComparableInt32OperationFilterInputInfo.IsInSet => _set_in;
        public global::System.Collections.Generic.IReadOnlyList<global::System.Int32>? Nin
        {
            get => _value_nin;
            set
            {
                _set_nin = true;
                _value_nin = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IComparableInt32OperationFilterInputInfo.IsNinSet => _set_nin;
        public global::System.Int32? Gt
        {
            get => _value_gt;
            set
            {
                _set_gt = true;
                _value_gt = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IComparableInt32OperationFilterInputInfo.IsGtSet => _set_gt;
        public global::System.Int32? Ngt
        {
            get => _value_ngt;
            set
            {
                _set_ngt = true;
                _value_ngt = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IComparableInt32OperationFilterInputInfo.IsNgtSet => _set_ngt;
        public global::System.Int32? Gte
        {
            get => _value_gte;
            set
            {
                _set_gte = true;
                _value_gte = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IComparableInt32OperationFilterInputInfo.IsGteSet => _set_gte;
        public global::System.Int32? Ngte
        {
            get => _value_ngte;
            set
            {
                _set_ngte = true;
                _value_ngte = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IComparableInt32OperationFilterInputInfo.IsNgteSet => _set_ngte;
        public global::System.Int32? Lt
        {
            get => _value_lt;
            set
            {
                _set_lt = true;
                _value_lt = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IComparableInt32OperationFilterInputInfo.IsLtSet => _set_lt;
        public global::System.Int32? Nlt
        {
            get => _value_nlt;
            set
            {
                _set_nlt = true;
                _value_nlt = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IComparableInt32OperationFilterInputInfo.IsNltSet => _set_nlt;
        public global::System.Int32? Lte
        {
            get => _value_lte;
            set
            {
                _set_lte = true;
                _value_lte = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IComparableInt32OperationFilterInputInfo.IsLteSet => _set_lte;
        public global::System.Int32? Nlte
        {
            get => _value_nlte;
            set
            {
                _set_nlte = true;
                _value_nlte = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IComparableInt32OperationFilterInputInfo.IsNlteSet => _set_nlte;
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class StringOperationFilterInputInputValueFormatter : global::StrawberryShake.Serialization.IInputObjectFormatter
    {
        private global::StrawberryShake.Serialization.IInputValueFormatter _stringOperationFilterInputFormatter = default !;
        private global::StrawberryShake.Serialization.IInputValueFormatter _stringFormatter = default !;
        public global::System.String TypeName => "StringOperationFilterInput";
        public void Initialize(global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _stringOperationFilterInputFormatter = serializerResolver.GetInputValueFormatter("StringOperationFilterInput");
            _stringFormatter = serializerResolver.GetInputValueFormatter("String");
        }

        public global::System.Object? Format(global::System.Object? runtimeValue)
        {
            if (runtimeValue is null)
            {
                return null;
            }

            var input = runtimeValue as global::StarWarsGeneratedClient.StringOperationFilterInput;
            var inputInfo = runtimeValue as global::StarWarsGeneratedClient.State.IStringOperationFilterInputInfo;
            if (input is null || inputInfo is null)
            {
                throw new global::System.ArgumentException(nameof(runtimeValue));
            }

            var fields = new global::System.Collections.Generic.List<global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>>();
            if (inputInfo.IsAndSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("and", FormatAnd(input.And)));
            }

            if (inputInfo.IsOrSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("or", FormatOr(input.Or)));
            }

            if (inputInfo.IsEqSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("eq", FormatEq(input.Eq)));
            }

            if (inputInfo.IsNeqSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("neq", FormatNeq(input.Neq)));
            }

            if (inputInfo.IsContainsSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("contains", FormatContains(input.Contains)));
            }

            if (inputInfo.IsNcontainsSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("ncontains", FormatNcontains(input.Ncontains)));
            }

            if (inputInfo.IsInSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("in", FormatIn(input.In)));
            }

            if (inputInfo.IsNinSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("nin", FormatNin(input.Nin)));
            }

            if (inputInfo.IsStartsWithSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("startsWith", FormatStartsWith(input.StartsWith)));
            }

            if (inputInfo.IsNstartsWithSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("nstartsWith", FormatNstartsWith(input.NstartsWith)));
            }

            if (inputInfo.IsEndsWithSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("endsWith", FormatEndsWith(input.EndsWith)));
            }

            if (inputInfo.IsNendsWithSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("nendsWith", FormatNendsWith(input.NendsWith)));
            }

            if (inputInfo.IsContainsIgnoreCaseSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("containsIgnoreCase", FormatContainsIgnoreCase(input.ContainsIgnoreCase)));
            }

            if (inputInfo.IsEqualsIgnoreCaseSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("equalsIgnoreCase", FormatEqualsIgnoreCase(input.EqualsIgnoreCase)));
            }

            return fields;
        }

        private global::System.Object? FormatAnd(global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.StringOperationFilterInput>? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                var input_list = new global::System.Collections.Generic.List<global::System.Object?>();
                foreach (var input_elm in input)
                {
                    if (input_elm is null)
                    {
                        throw new global::System.ArgumentNullException(nameof(input_elm));
                    }

                    input_list.Add(_stringOperationFilterInputFormatter.Format(input_elm));
                }

                return input_list;
            }
        }

        private global::System.Object? FormatOr(global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.StringOperationFilterInput>? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                var input_list = new global::System.Collections.Generic.List<global::System.Object?>();
                foreach (var input_elm in input)
                {
                    if (input_elm is null)
                    {
                        throw new global::System.ArgumentNullException(nameof(input_elm));
                    }

                    input_list.Add(_stringOperationFilterInputFormatter.Format(input_elm));
                }

                return input_list;
            }
        }

        private global::System.Object? FormatEq(global::System.String? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _stringFormatter.Format(input);
            }
        }

        private global::System.Object? FormatNeq(global::System.String? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _stringFormatter.Format(input);
            }
        }

        private global::System.Object? FormatContains(global::System.String? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _stringFormatter.Format(input);
            }
        }

        private global::System.Object? FormatNcontains(global::System.String? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _stringFormatter.Format(input);
            }
        }

        private global::System.Object? FormatIn(global::System.Collections.Generic.IReadOnlyList<global::System.String?>? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                var input_list = new global::System.Collections.Generic.List<global::System.Object?>();
                foreach (var input_elm in input)
                {
                    if (input_elm is null)
                    {
                        input_list.Add(input_elm);
                    }
                    else
                    {
                        input_list.Add(_stringFormatter.Format(input_elm));
                    }
                }

                return input_list;
            }
        }

        private global::System.Object? FormatNin(global::System.Collections.Generic.IReadOnlyList<global::System.String?>? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                var input_list = new global::System.Collections.Generic.List<global::System.Object?>();
                foreach (var input_elm in input)
                {
                    if (input_elm is null)
                    {
                        input_list.Add(input_elm);
                    }
                    else
                    {
                        input_list.Add(_stringFormatter.Format(input_elm));
                    }
                }

                return input_list;
            }
        }

        private global::System.Object? FormatStartsWith(global::System.String? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _stringFormatter.Format(input);
            }
        }

        private global::System.Object? FormatNstartsWith(global::System.String? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _stringFormatter.Format(input);
            }
        }

        private global::System.Object? FormatEndsWith(global::System.String? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _stringFormatter.Format(input);
            }
        }

        private global::System.Object? FormatNendsWith(global::System.String? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _stringFormatter.Format(input);
            }
        }

        private global::System.Object? FormatContainsIgnoreCase(global::System.String? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _stringFormatter.Format(input);
            }
        }

        private global::System.Object? FormatEqualsIgnoreCase(global::System.String? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _stringFormatter.Format(input);
            }
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class StringOperationFilterInput : global::StarWarsGeneratedClient.State.IStringOperationFilterInputInfo, global::System.IEquatable<StringOperationFilterInput>
    {
        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((StringOperationFilterInput)obj);
        }

        public virtual global::System.Boolean Equals(StringOperationFilterInput? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(And, other.And)) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Or, other.Or) && ((Eq is null && other.Eq is null) || Eq != null && Eq.Equals(other.Eq)) && ((Neq is null && other.Neq is null) || Neq != null && Neq.Equals(other.Neq)) && ((Contains is null && other.Contains is null) || Contains != null && Contains.Equals(other.Contains)) && ((Ncontains is null && other.Ncontains is null) || Ncontains != null && Ncontains.Equals(other.Ncontains)) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(In, other.In) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Nin, other.Nin) && ((StartsWith is null && other.StartsWith is null) || StartsWith != null && StartsWith.Equals(other.StartsWith)) && ((NstartsWith is null && other.NstartsWith is null) || NstartsWith != null && NstartsWith.Equals(other.NstartsWith)) && ((EndsWith is null && other.EndsWith is null) || EndsWith != null && EndsWith.Equals(other.EndsWith)) && ((NendsWith is null && other.NendsWith is null) || NendsWith != null && NendsWith.Equals(other.NendsWith)) && ((ContainsIgnoreCase is null && other.ContainsIgnoreCase is null) || ContainsIgnoreCase != null && ContainsIgnoreCase.Equals(other.ContainsIgnoreCase)) && ((EqualsIgnoreCase is null && other.EqualsIgnoreCase is null) || EqualsIgnoreCase != null && EqualsIgnoreCase.Equals(other.EqualsIgnoreCase));
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (And != null)
                {
                    foreach (var And_elm in And)
                    {
                        hash ^= 397 * And_elm.GetHashCode();
                    }
                }

                if (Or != null)
                {
                    foreach (var Or_elm in Or)
                    {
                        hash ^= 397 * Or_elm.GetHashCode();
                    }
                }

                if (Eq != null)
                {
                    hash ^= 397 * Eq.GetHashCode();
                }

                if (Neq != null)
                {
                    hash ^= 397 * Neq.GetHashCode();
                }

                if (Contains != null)
                {
                    hash ^= 397 * Contains.GetHashCode();
                }

                if (Ncontains != null)
                {
                    hash ^= 397 * Ncontains.GetHashCode();
                }

                if (In != null)
                {
                    foreach (var In_elm in In)
                    {
                        if (In_elm != null)
                        {
                            hash ^= 397 * In_elm.GetHashCode();
                        }
                    }
                }

                if (Nin != null)
                {
                    foreach (var Nin_elm in Nin)
                    {
                        if (Nin_elm != null)
                        {
                            hash ^= 397 * Nin_elm.GetHashCode();
                        }
                    }
                }

                if (StartsWith != null)
                {
                    hash ^= 397 * StartsWith.GetHashCode();
                }

                if (NstartsWith != null)
                {
                    hash ^= 397 * NstartsWith.GetHashCode();
                }

                if (EndsWith != null)
                {
                    hash ^= 397 * EndsWith.GetHashCode();
                }

                if (NendsWith != null)
                {
                    hash ^= 397 * NendsWith.GetHashCode();
                }

                if (ContainsIgnoreCase != null)
                {
                    hash ^= 397 * ContainsIgnoreCase.GetHashCode();
                }

                if (EqualsIgnoreCase != null)
                {
                    hash ^= 397 * EqualsIgnoreCase.GetHashCode();
                }

                return hash;
            }
        }

        private global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.StringOperationFilterInput>? _value_and;
        private global::System.Boolean _set_and;
        private global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.StringOperationFilterInput>? _value_or;
        private global::System.Boolean _set_or;
        private global::System.String? _value_eq;
        private global::System.Boolean _set_eq;
        private global::System.String? _value_neq;
        private global::System.Boolean _set_neq;
        private global::System.String? _value_contains;
        private global::System.Boolean _set_contains;
        private global::System.String? _value_ncontains;
        private global::System.Boolean _set_ncontains;
        private global::System.Collections.Generic.IReadOnlyList<global::System.String?>? _value_in;
        private global::System.Boolean _set_in;
        private global::System.Collections.Generic.IReadOnlyList<global::System.String?>? _value_nin;
        private global::System.Boolean _set_nin;
        private global::System.String? _value_startsWith;
        private global::System.Boolean _set_startsWith;
        private global::System.String? _value_nstartsWith;
        private global::System.Boolean _set_nstartsWith;
        private global::System.String? _value_endsWith;
        private global::System.Boolean _set_endsWith;
        private global::System.String? _value_nendsWith;
        private global::System.Boolean _set_nendsWith;
        private global::System.String? _value_containsIgnoreCase;
        private global::System.Boolean _set_containsIgnoreCase;
        private global::System.String? _value_equalsIgnoreCase;
        private global::System.Boolean _set_equalsIgnoreCase;
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.StringOperationFilterInput>? And
        {
            get => _value_and;
            set
            {
                _set_and = true;
                _value_and = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IStringOperationFilterInputInfo.IsAndSet => _set_and;
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.StringOperationFilterInput>? Or
        {
            get => _value_or;
            set
            {
                _set_or = true;
                _value_or = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IStringOperationFilterInputInfo.IsOrSet => _set_or;
        public global::System.String? Eq
        {
            get => _value_eq;
            set
            {
                _set_eq = true;
                _value_eq = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IStringOperationFilterInputInfo.IsEqSet => _set_eq;
        public global::System.String? Neq
        {
            get => _value_neq;
            set
            {
                _set_neq = true;
                _value_neq = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IStringOperationFilterInputInfo.IsNeqSet => _set_neq;
        public global::System.String? Contains
        {
            get => _value_contains;
            set
            {
                _set_contains = true;
                _value_contains = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IStringOperationFilterInputInfo.IsContainsSet => _set_contains;
        public global::System.String? Ncontains
        {
            get => _value_ncontains;
            set
            {
                _set_ncontains = true;
                _value_ncontains = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IStringOperationFilterInputInfo.IsNcontainsSet => _set_ncontains;
        public global::System.Collections.Generic.IReadOnlyList<global::System.String?>? In
        {
            get => _value_in;
            set
            {
                _set_in = true;
                _value_in = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IStringOperationFilterInputInfo.IsInSet => _set_in;
        public global::System.Collections.Generic.IReadOnlyList<global::System.String?>? Nin
        {
            get => _value_nin;
            set
            {
                _set_nin = true;
                _value_nin = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IStringOperationFilterInputInfo.IsNinSet => _set_nin;
        public global::System.String? StartsWith
        {
            get => _value_startsWith;
            set
            {
                _set_startsWith = true;
                _value_startsWith = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IStringOperationFilterInputInfo.IsStartsWithSet => _set_startsWith;
        public global::System.String? NstartsWith
        {
            get => _value_nstartsWith;
            set
            {
                _set_nstartsWith = true;
                _value_nstartsWith = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IStringOperationFilterInputInfo.IsNstartsWithSet => _set_nstartsWith;
        public global::System.String? EndsWith
        {
            get => _value_endsWith;
            set
            {
                _set_endsWith = true;
                _value_endsWith = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IStringOperationFilterInputInfo.IsEndsWithSet => _set_endsWith;
        public global::System.String? NendsWith
        {
            get => _value_nendsWith;
            set
            {
                _set_nendsWith = true;
                _value_nendsWith = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IStringOperationFilterInputInfo.IsNendsWithSet => _set_nendsWith;
        ///<summary>string.Contains with InvariantCultureIgnoreCase</summary>
        public global::System.String? ContainsIgnoreCase
        {
            get => _value_containsIgnoreCase;
            set
            {
                _set_containsIgnoreCase = true;
                _value_containsIgnoreCase = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IStringOperationFilterInputInfo.IsContainsIgnoreCaseSet => _set_containsIgnoreCase;
        ///<summary>string.Equals with InvariantCultureIgnoreCase</summary>
        public global::System.String? EqualsIgnoreCase
        {
            get => _value_equalsIgnoreCase;
            set
            {
                _set_equalsIgnoreCase = true;
                _value_equalsIgnoreCase = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IStringOperationFilterInputInfo.IsEqualsIgnoreCaseSet => _set_equalsIgnoreCase;
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class ListComparableInt32OperationFilterInputInputValueFormatter : global::StrawberryShake.Serialization.IInputObjectFormatter
    {
        private global::StrawberryShake.Serialization.IInputValueFormatter _comparableInt32OperationFilterInputFormatter = default !;
        private global::StrawberryShake.Serialization.IInputValueFormatter _booleanFormatter = default !;
        public global::System.String TypeName => "ListComparableInt32OperationFilterInput";
        public void Initialize(global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _comparableInt32OperationFilterInputFormatter = serializerResolver.GetInputValueFormatter("ComparableInt32OperationFilterInput");
            _booleanFormatter = serializerResolver.GetInputValueFormatter("Boolean");
        }

        public global::System.Object? Format(global::System.Object? runtimeValue)
        {
            if (runtimeValue is null)
            {
                return null;
            }

            var input = runtimeValue as global::StarWarsGeneratedClient.ListComparableInt32OperationFilterInput;
            var inputInfo = runtimeValue as global::StarWarsGeneratedClient.State.IListComparableInt32OperationFilterInputInfo;
            if (input is null || inputInfo is null)
            {
                throw new global::System.ArgumentException(nameof(runtimeValue));
            }

            var fields = new global::System.Collections.Generic.List<global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>>();
            if (inputInfo.IsAllSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("all", FormatAll(input.All)));
            }

            if (inputInfo.IsNoneSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("none", FormatNone(input.None)));
            }

            if (inputInfo.IsSomeSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("some", FormatSome(input.Some)));
            }

            if (inputInfo.IsAnySet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("any", FormatAny(input.Any)));
            }

            return fields;
        }

        private global::System.Object? FormatAll(global::StarWarsGeneratedClient.ComparableInt32OperationFilterInput? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _comparableInt32OperationFilterInputFormatter.Format(input);
            }
        }

        private global::System.Object? FormatNone(global::StarWarsGeneratedClient.ComparableInt32OperationFilterInput? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _comparableInt32OperationFilterInputFormatter.Format(input);
            }
        }

        private global::System.Object? FormatSome(global::StarWarsGeneratedClient.ComparableInt32OperationFilterInput? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _comparableInt32OperationFilterInputFormatter.Format(input);
            }
        }

        private global::System.Object? FormatAny(global::System.Boolean? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _booleanFormatter.Format(input);
            }
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class ListComparableInt32OperationFilterInput : global::StarWarsGeneratedClient.State.IListComparableInt32OperationFilterInputInfo, global::System.IEquatable<ListComparableInt32OperationFilterInput>
    {
        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((ListComparableInt32OperationFilterInput)obj);
        }

        public virtual global::System.Boolean Equals(ListComparableInt32OperationFilterInput? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((All is null && other.All is null) || All != null && All.Equals(other.All))) && ((None is null && other.None is null) || None != null && None.Equals(other.None)) && ((Some is null && other.Some is null) || Some != null && Some.Equals(other.Some)) && Any == other.Any;
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (All != null)
                {
                    hash ^= 397 * All.GetHashCode();
                }

                if (None != null)
                {
                    hash ^= 397 * None.GetHashCode();
                }

                if (Some != null)
                {
                    hash ^= 397 * Some.GetHashCode();
                }

                if (Any != null)
                {
                    hash ^= 397 * Any.GetHashCode();
                }

                return hash;
            }
        }

        private global::StarWarsGeneratedClient.ComparableInt32OperationFilterInput? _value_all;
        private global::System.Boolean _set_all;
        private global::StarWarsGeneratedClient.ComparableInt32OperationFilterInput? _value_none;
        private global::System.Boolean _set_none;
        private global::StarWarsGeneratedClient.ComparableInt32OperationFilterInput? _value_some;
        private global::System.Boolean _set_some;
        private global::System.Boolean? _value_any;
        private global::System.Boolean _set_any;
        public global::StarWarsGeneratedClient.ComparableInt32OperationFilterInput? All
        {
            get => _value_all;
            set
            {
                _set_all = true;
                _value_all = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IListComparableInt32OperationFilterInputInfo.IsAllSet => _set_all;
        public global::StarWarsGeneratedClient.ComparableInt32OperationFilterInput? None
        {
            get => _value_none;
            set
            {
                _set_none = true;
                _value_none = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IListComparableInt32OperationFilterInputInfo.IsNoneSet => _set_none;
        public global::StarWarsGeneratedClient.ComparableInt32OperationFilterInput? Some
        {
            get => _value_some;
            set
            {
                _set_some = true;
                _value_some = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IListComparableInt32OperationFilterInputInfo.IsSomeSet => _set_some;
        public global::System.Boolean? Any
        {
            get => _value_any;
            set
            {
                _set_any = true;
                _value_any = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IListComparableInt32OperationFilterInputInfo.IsAnySet => _set_any;
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class ListEpisodeOperationFilterInputInputValueFormatter : global::StrawberryShake.Serialization.IInputObjectFormatter
    {
        private global::StrawberryShake.Serialization.IInputValueFormatter _episodeOperationFilterInputFormatter = default !;
        private global::StrawberryShake.Serialization.IInputValueFormatter _booleanFormatter = default !;
        public global::System.String TypeName => "ListEpisodeOperationFilterInput";
        public void Initialize(global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _episodeOperationFilterInputFormatter = serializerResolver.GetInputValueFormatter("EpisodeOperationFilterInput");
            _booleanFormatter = serializerResolver.GetInputValueFormatter("Boolean");
        }

        public global::System.Object? Format(global::System.Object? runtimeValue)
        {
            if (runtimeValue is null)
            {
                return null;
            }

            var input = runtimeValue as global::StarWarsGeneratedClient.ListEpisodeOperationFilterInput;
            var inputInfo = runtimeValue as global::StarWarsGeneratedClient.State.IListEpisodeOperationFilterInputInfo;
            if (input is null || inputInfo is null)
            {
                throw new global::System.ArgumentException(nameof(runtimeValue));
            }

            var fields = new global::System.Collections.Generic.List<global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>>();
            if (inputInfo.IsAllSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("all", FormatAll(input.All)));
            }

            if (inputInfo.IsNoneSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("none", FormatNone(input.None)));
            }

            if (inputInfo.IsSomeSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("some", FormatSome(input.Some)));
            }

            if (inputInfo.IsAnySet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("any", FormatAny(input.Any)));
            }

            return fields;
        }

        private global::System.Object? FormatAll(global::StarWarsGeneratedClient.EpisodeOperationFilterInput? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _episodeOperationFilterInputFormatter.Format(input);
            }
        }

        private global::System.Object? FormatNone(global::StarWarsGeneratedClient.EpisodeOperationFilterInput? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _episodeOperationFilterInputFormatter.Format(input);
            }
        }

        private global::System.Object? FormatSome(global::StarWarsGeneratedClient.EpisodeOperationFilterInput? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _episodeOperationFilterInputFormatter.Format(input);
            }
        }

        private global::System.Object? FormatAny(global::System.Boolean? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _booleanFormatter.Format(input);
            }
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class ListEpisodeOperationFilterInput : global::StarWarsGeneratedClient.State.IListEpisodeOperationFilterInputInfo, global::System.IEquatable<ListEpisodeOperationFilterInput>
    {
        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((ListEpisodeOperationFilterInput)obj);
        }

        public virtual global::System.Boolean Equals(ListEpisodeOperationFilterInput? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((All is null && other.All is null) || All != null && All.Equals(other.All))) && ((None is null && other.None is null) || None != null && None.Equals(other.None)) && ((Some is null && other.Some is null) || Some != null && Some.Equals(other.Some)) && Any == other.Any;
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (All != null)
                {
                    hash ^= 397 * All.GetHashCode();
                }

                if (None != null)
                {
                    hash ^= 397 * None.GetHashCode();
                }

                if (Some != null)
                {
                    hash ^= 397 * Some.GetHashCode();
                }

                if (Any != null)
                {
                    hash ^= 397 * Any.GetHashCode();
                }

                return hash;
            }
        }

        private global::StarWarsGeneratedClient.EpisodeOperationFilterInput? _value_all;
        private global::System.Boolean _set_all;
        private global::StarWarsGeneratedClient.EpisodeOperationFilterInput? _value_none;
        private global::System.Boolean _set_none;
        private global::StarWarsGeneratedClient.EpisodeOperationFilterInput? _value_some;
        private global::System.Boolean _set_some;
        private global::System.Boolean? _value_any;
        private global::System.Boolean _set_any;
        public global::StarWarsGeneratedClient.EpisodeOperationFilterInput? All
        {
            get => _value_all;
            set
            {
                _set_all = true;
                _value_all = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IListEpisodeOperationFilterInputInfo.IsAllSet => _set_all;
        public global::StarWarsGeneratedClient.EpisodeOperationFilterInput? None
        {
            get => _value_none;
            set
            {
                _set_none = true;
                _value_none = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IListEpisodeOperationFilterInputInfo.IsNoneSet => _set_none;
        public global::StarWarsGeneratedClient.EpisodeOperationFilterInput? Some
        {
            get => _value_some;
            set
            {
                _set_some = true;
                _value_some = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IListEpisodeOperationFilterInputInfo.IsSomeSet => _set_some;
        public global::System.Boolean? Any
        {
            get => _value_any;
            set
            {
                _set_any = true;
                _value_any = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IListEpisodeOperationFilterInputInfo.IsAnySet => _set_any;
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class EpisodeOperationFilterInputInputValueFormatter : global::StrawberryShake.Serialization.IInputObjectFormatter
    {
        private global::StrawberryShake.Serialization.IInputValueFormatter _episodeFormatter = default !;
        public global::System.String TypeName => "EpisodeOperationFilterInput";
        public void Initialize(global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _episodeFormatter = serializerResolver.GetInputValueFormatter("Episode");
        }

        public global::System.Object? Format(global::System.Object? runtimeValue)
        {
            if (runtimeValue is null)
            {
                return null;
            }

            var input = runtimeValue as global::StarWarsGeneratedClient.EpisodeOperationFilterInput;
            var inputInfo = runtimeValue as global::StarWarsGeneratedClient.State.IEpisodeOperationFilterInputInfo;
            if (input is null || inputInfo is null)
            {
                throw new global::System.ArgumentException(nameof(runtimeValue));
            }

            var fields = new global::System.Collections.Generic.List<global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>>();
            if (inputInfo.IsEqSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("eq", FormatEq(input.Eq)));
            }

            if (inputInfo.IsNeqSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("neq", FormatNeq(input.Neq)));
            }

            if (inputInfo.IsInSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("in", FormatIn(input.In)));
            }

            if (inputInfo.IsNinSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("nin", FormatNin(input.Nin)));
            }

            return fields;
        }

        private global::System.Object? FormatEq(global::StarWarsGeneratedClient.Episode? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _episodeFormatter.Format(input);
            }
        }

        private global::System.Object? FormatNeq(global::StarWarsGeneratedClient.Episode? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _episodeFormatter.Format(input);
            }
        }

        private global::System.Object? FormatIn(global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode>? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                var input_list = new global::System.Collections.Generic.List<global::System.Object?>();
                foreach (var input_elm in input)
                {
                    input_list.Add(_episodeFormatter.Format(input_elm));
                }

                return input_list;
            }
        }

        private global::System.Object? FormatNin(global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode>? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                var input_list = new global::System.Collections.Generic.List<global::System.Object?>();
                foreach (var input_elm in input)
                {
                    input_list.Add(_episodeFormatter.Format(input_elm));
                }

                return input_list;
            }
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class EpisodeOperationFilterInput : global::StarWarsGeneratedClient.State.IEpisodeOperationFilterInputInfo, global::System.IEquatable<EpisodeOperationFilterInput>
    {
        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((EpisodeOperationFilterInput)obj);
        }

        public virtual global::System.Boolean Equals(EpisodeOperationFilterInput? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((Eq is null && other.Eq is null) || Eq != null && Eq.Equals(other.Eq))) && ((Neq is null && other.Neq is null) || Neq != null && Neq.Equals(other.Neq)) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(In, other.In) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Nin, other.Nin);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (Eq != null)
                {
                    hash ^= 397 * Eq.GetHashCode();
                }

                if (Neq != null)
                {
                    hash ^= 397 * Neq.GetHashCode();
                }

                if (In != null)
                {
                    foreach (var In_elm in In)
                    {
                        hash ^= 397 * In_elm.GetHashCode();
                    }
                }

                if (Nin != null)
                {
                    foreach (var Nin_elm in Nin)
                    {
                        hash ^= 397 * Nin_elm.GetHashCode();
                    }
                }

                return hash;
            }
        }

        private global::StarWarsGeneratedClient.Episode? _value_eq;
        private global::System.Boolean _set_eq;
        private global::StarWarsGeneratedClient.Episode? _value_neq;
        private global::System.Boolean _set_neq;
        private global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode>? _value_in;
        private global::System.Boolean _set_in;
        private global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode>? _value_nin;
        private global::System.Boolean _set_nin;
        public global::StarWarsGeneratedClient.Episode? Eq
        {
            get => _value_eq;
            set
            {
                _set_eq = true;
                _value_eq = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IEpisodeOperationFilterInputInfo.IsEqSet => _set_eq;
        public global::StarWarsGeneratedClient.Episode? Neq
        {
            get => _value_neq;
            set
            {
                _set_neq = true;
                _value_neq = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IEpisodeOperationFilterInputInfo.IsNeqSet => _set_neq;
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode>? In
        {
            get => _value_in;
            set
            {
                _set_in = true;
                _value_in = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IEpisodeOperationFilterInputInfo.IsInSet => _set_in;
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode>? Nin
        {
            get => _value_nin;
            set
            {
                _set_nin = true;
                _value_nin = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IEpisodeOperationFilterInputInfo.IsNinSet => _set_nin;
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class ComparableDoubleOperationFilterInputInputValueFormatter : global::StrawberryShake.Serialization.IInputObjectFormatter
    {
        private global::StrawberryShake.Serialization.IInputValueFormatter _floatFormatter = default !;
        public global::System.String TypeName => "ComparableDoubleOperationFilterInput";
        public void Initialize(global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _floatFormatter = serializerResolver.GetInputValueFormatter("Float");
        }

        public global::System.Object? Format(global::System.Object? runtimeValue)
        {
            if (runtimeValue is null)
            {
                return null;
            }

            var input = runtimeValue as global::StarWarsGeneratedClient.ComparableDoubleOperationFilterInput;
            var inputInfo = runtimeValue as global::StarWarsGeneratedClient.State.IComparableDoubleOperationFilterInputInfo;
            if (input is null || inputInfo is null)
            {
                throw new global::System.ArgumentException(nameof(runtimeValue));
            }

            var fields = new global::System.Collections.Generic.List<global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>>();
            if (inputInfo.IsEqSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("eq", FormatEq(input.Eq)));
            }

            if (inputInfo.IsNeqSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("neq", FormatNeq(input.Neq)));
            }

            if (inputInfo.IsInSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("in", FormatIn(input.In)));
            }

            if (inputInfo.IsNinSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("nin", FormatNin(input.Nin)));
            }

            if (inputInfo.IsGtSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("gt", FormatGt(input.Gt)));
            }

            if (inputInfo.IsNgtSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("ngt", FormatNgt(input.Ngt)));
            }

            if (inputInfo.IsGteSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("gte", FormatGte(input.Gte)));
            }

            if (inputInfo.IsNgteSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("ngte", FormatNgte(input.Ngte)));
            }

            if (inputInfo.IsLtSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("lt", FormatLt(input.Lt)));
            }

            if (inputInfo.IsNltSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("nlt", FormatNlt(input.Nlt)));
            }

            if (inputInfo.IsLteSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("lte", FormatLte(input.Lte)));
            }

            if (inputInfo.IsNlteSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("nlte", FormatNlte(input.Nlte)));
            }

            return fields;
        }

        private global::System.Object? FormatEq(global::System.Double? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _floatFormatter.Format(input);
            }
        }

        private global::System.Object? FormatNeq(global::System.Double? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _floatFormatter.Format(input);
            }
        }

        private global::System.Object? FormatIn(global::System.Collections.Generic.IReadOnlyList<global::System.Double>? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                var input_list = new global::System.Collections.Generic.List<global::System.Object?>();
                foreach (var input_elm in input)
                {
                    input_list.Add(_floatFormatter.Format(input_elm));
                }

                return input_list;
            }
        }

        private global::System.Object? FormatNin(global::System.Collections.Generic.IReadOnlyList<global::System.Double>? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                var input_list = new global::System.Collections.Generic.List<global::System.Object?>();
                foreach (var input_elm in input)
                {
                    input_list.Add(_floatFormatter.Format(input_elm));
                }

                return input_list;
            }
        }

        private global::System.Object? FormatGt(global::System.Double? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _floatFormatter.Format(input);
            }
        }

        private global::System.Object? FormatNgt(global::System.Double? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _floatFormatter.Format(input);
            }
        }

        private global::System.Object? FormatGte(global::System.Double? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _floatFormatter.Format(input);
            }
        }

        private global::System.Object? FormatNgte(global::System.Double? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _floatFormatter.Format(input);
            }
        }

        private global::System.Object? FormatLt(global::System.Double? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _floatFormatter.Format(input);
            }
        }

        private global::System.Object? FormatNlt(global::System.Double? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _floatFormatter.Format(input);
            }
        }

        private global::System.Object? FormatLte(global::System.Double? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _floatFormatter.Format(input);
            }
        }

        private global::System.Object? FormatNlte(global::System.Double? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _floatFormatter.Format(input);
            }
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class ComparableDoubleOperationFilterInput : global::StarWarsGeneratedClient.State.IComparableDoubleOperationFilterInputInfo, global::System.IEquatable<ComparableDoubleOperationFilterInput>
    {
        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((ComparableDoubleOperationFilterInput)obj);
        }

        public virtual global::System.Boolean Equals(ComparableDoubleOperationFilterInput? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Eq == other.Eq) && Neq == other.Neq && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(In, other.In) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Nin, other.Nin) && Gt == other.Gt && Ngt == other.Ngt && Gte == other.Gte && Ngte == other.Ngte && Lt == other.Lt && Nlt == other.Nlt && Lte == other.Lte && Nlte == other.Nlte;
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (Eq != null)
                {
                    hash ^= 397 * Eq.GetHashCode();
                }

                if (Neq != null)
                {
                    hash ^= 397 * Neq.GetHashCode();
                }

                if (In != null)
                {
                    foreach (var In_elm in In)
                    {
                        hash ^= 397 * In_elm.GetHashCode();
                    }
                }

                if (Nin != null)
                {
                    foreach (var Nin_elm in Nin)
                    {
                        hash ^= 397 * Nin_elm.GetHashCode();
                    }
                }

                if (Gt != null)
                {
                    hash ^= 397 * Gt.GetHashCode();
                }

                if (Ngt != null)
                {
                    hash ^= 397 * Ngt.GetHashCode();
                }

                if (Gte != null)
                {
                    hash ^= 397 * Gte.GetHashCode();
                }

                if (Ngte != null)
                {
                    hash ^= 397 * Ngte.GetHashCode();
                }

                if (Lt != null)
                {
                    hash ^= 397 * Lt.GetHashCode();
                }

                if (Nlt != null)
                {
                    hash ^= 397 * Nlt.GetHashCode();
                }

                if (Lte != null)
                {
                    hash ^= 397 * Lte.GetHashCode();
                }

                if (Nlte != null)
                {
                    hash ^= 397 * Nlte.GetHashCode();
                }

                return hash;
            }
        }

        private global::System.Double? _value_eq;
        private global::System.Boolean _set_eq;
        private global::System.Double? _value_neq;
        private global::System.Boolean _set_neq;
        private global::System.Collections.Generic.IReadOnlyList<global::System.Double>? _value_in;
        private global::System.Boolean _set_in;
        private global::System.Collections.Generic.IReadOnlyList<global::System.Double>? _value_nin;
        private global::System.Boolean _set_nin;
        private global::System.Double? _value_gt;
        private global::System.Boolean _set_gt;
        private global::System.Double? _value_ngt;
        private global::System.Boolean _set_ngt;
        private global::System.Double? _value_gte;
        private global::System.Boolean _set_gte;
        private global::System.Double? _value_ngte;
        private global::System.Boolean _set_ngte;
        private global::System.Double? _value_lt;
        private global::System.Boolean _set_lt;
        private global::System.Double? _value_nlt;
        private global::System.Boolean _set_nlt;
        private global::System.Double? _value_lte;
        private global::System.Boolean _set_lte;
        private global::System.Double? _value_nlte;
        private global::System.Boolean _set_nlte;
        public global::System.Double? Eq
        {
            get => _value_eq;
            set
            {
                _set_eq = true;
                _value_eq = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IComparableDoubleOperationFilterInputInfo.IsEqSet => _set_eq;
        public global::System.Double? Neq
        {
            get => _value_neq;
            set
            {
                _set_neq = true;
                _value_neq = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IComparableDoubleOperationFilterInputInfo.IsNeqSet => _set_neq;
        public global::System.Collections.Generic.IReadOnlyList<global::System.Double>? In
        {
            get => _value_in;
            set
            {
                _set_in = true;
                _value_in = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IComparableDoubleOperationFilterInputInfo.IsInSet => _set_in;
        public global::System.Collections.Generic.IReadOnlyList<global::System.Double>? Nin
        {
            get => _value_nin;
            set
            {
                _set_nin = true;
                _value_nin = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IComparableDoubleOperationFilterInputInfo.IsNinSet => _set_nin;
        public global::System.Double? Gt
        {
            get => _value_gt;
            set
            {
                _set_gt = true;
                _value_gt = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IComparableDoubleOperationFilterInputInfo.IsGtSet => _set_gt;
        public global::System.Double? Ngt
        {
            get => _value_ngt;
            set
            {
                _set_ngt = true;
                _value_ngt = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IComparableDoubleOperationFilterInputInfo.IsNgtSet => _set_ngt;
        public global::System.Double? Gte
        {
            get => _value_gte;
            set
            {
                _set_gte = true;
                _value_gte = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IComparableDoubleOperationFilterInputInfo.IsGteSet => _set_gte;
        public global::System.Double? Ngte
        {
            get => _value_ngte;
            set
            {
                _set_ngte = true;
                _value_ngte = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IComparableDoubleOperationFilterInputInfo.IsNgteSet => _set_ngte;
        public global::System.Double? Lt
        {
            get => _value_lt;
            set
            {
                _set_lt = true;
                _value_lt = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IComparableDoubleOperationFilterInputInfo.IsLtSet => _set_lt;
        public global::System.Double? Nlt
        {
            get => _value_nlt;
            set
            {
                _set_nlt = true;
                _value_nlt = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IComparableDoubleOperationFilterInputInfo.IsNltSet => _set_nlt;
        public global::System.Double? Lte
        {
            get => _value_lte;
            set
            {
                _set_lte = true;
                _value_lte = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IComparableDoubleOperationFilterInputInfo.IsLteSet => _set_lte;
        public global::System.Double? Nlte
        {
            get => _value_nlte;
            set
            {
                _set_nlte = true;
                _value_nlte = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IComparableDoubleOperationFilterInputInfo.IsNlteSet => _set_nlte;
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class ICharacterSortInputInputValueFormatter : global::StrawberryShake.Serialization.IInputObjectFormatter
    {
        private global::StrawberryShake.Serialization.IInputValueFormatter _sortEnumTypeFormatter = default !;
        public global::System.String TypeName => "ICharacterSortInput";
        public void Initialize(global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _sortEnumTypeFormatter = serializerResolver.GetInputValueFormatter("SortEnumType");
        }

        public global::System.Object? Format(global::System.Object? runtimeValue)
        {
            if (runtimeValue is null)
            {
                return null;
            }

            var input = runtimeValue as global::StarWarsGeneratedClient.ICharacterSortInput;
            var inputInfo = runtimeValue as global::StarWarsGeneratedClient.State.IICharacterSortInputInfo;
            if (input is null || inputInfo is null)
            {
                throw new global::System.ArgumentException(nameof(runtimeValue));
            }

            var fields = new global::System.Collections.Generic.List<global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>>();
            if (inputInfo.IsIdSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("id", FormatId(input.Id)));
            }

            if (inputInfo.IsNameSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("name", FormatName(input.Name)));
            }

            if (inputInfo.IsHeightSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("height", FormatHeight(input.Height)));
            }

            return fields;
        }

        private global::System.Object? FormatId(global::StarWarsGeneratedClient.SortEnumType? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _sortEnumTypeFormatter.Format(input);
            }
        }

        private global::System.Object? FormatName(global::StarWarsGeneratedClient.SortEnumType? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _sortEnumTypeFormatter.Format(input);
            }
        }

        private global::System.Object? FormatHeight(global::StarWarsGeneratedClient.SortEnumType? input)
        {
            if (input is null)
            {
                return input;
            }
            else
            {
                return _sortEnumTypeFormatter.Format(input);
            }
        }
    }

    ///<summary>A character in the Star Wars universe.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class ICharacterSortInput : global::StarWarsGeneratedClient.State.IICharacterSortInputInfo, global::System.IEquatable<ICharacterSortInput>
    {
        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((ICharacterSortInput)obj);
        }

        public virtual global::System.Boolean Equals(ICharacterSortInput? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((Id is null && other.Id is null) || Id != null && Id.Equals(other.Id))) && ((Name is null && other.Name is null) || Name != null && Name.Equals(other.Name)) && ((Height is null && other.Height is null) || Height != null && Height.Equals(other.Height));
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (Id != null)
                {
                    hash ^= 397 * Id.GetHashCode();
                }

                if (Name != null)
                {
                    hash ^= 397 * Name.GetHashCode();
                }

                if (Height != null)
                {
                    hash ^= 397 * Height.GetHashCode();
                }

                return hash;
            }
        }

        private global::StarWarsGeneratedClient.SortEnumType? _value_id;
        private global::System.Boolean _set_id;
        private global::StarWarsGeneratedClient.SortEnumType? _value_name;
        private global::System.Boolean _set_name;
        private global::StarWarsGeneratedClient.SortEnumType? _value_height;
        private global::System.Boolean _set_height;
        ///<summary>The unique identifier for the character.</summary>
        public global::StarWarsGeneratedClient.SortEnumType? Id
        {
            get => _value_id;
            set
            {
                _set_id = true;
                _value_id = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IICharacterSortInputInfo.IsIdSet => _set_id;
        ///<summary>The name of the character.</summary>
        public global::StarWarsGeneratedClient.SortEnumType? Name
        {
            get => _value_name;
            set
            {
                _set_name = true;
                _value_name = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IICharacterSortInputInfo.IsNameSet => _set_name;
        ///<summary>The height of the character.</summary>
        public global::StarWarsGeneratedClient.SortEnumType? Height
        {
            get => _value_height;
            set
            {
                _set_height = true;
                _value_height = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.IICharacterSortInputInfo.IsHeightSet => _set_height;
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public enum Episode
    {
        /// <summary>
        /// Star Wars Episode IV: A New Hope
        /// </summary>
        NewHope,
        /// <summary>
        /// Star Wars Episode V: Empire Strikes Back
        /// </summary>
        Empire,
        /// <summary>
        /// Star Wars Episode VI: Return of the Jedi
        /// </summary>
        Jedi
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class EpisodeSerializer : global::StrawberryShake.Serialization.IInputValueFormatter, global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, Episode>
    {
        public global::System.String TypeName => "Episode";
        public Episode Parse(global::System.String serializedValue)
        {
            return serializedValue switch
            {
                "NEW_HOPE" => Episode.NewHope,
                "EMPIRE" => Episode.Empire,
                "JEDI" => Episode.Jedi,
                _ => throw new global::StrawberryShake.GraphQLClientException()};
        }

        public global::System.Object Format(global::System.Object? runtimeValue)
        {
            return runtimeValue switch
            {
                Episode.NewHope => "NEW_HOPE",
                Episode.Empire => "EMPIRE",
                Episode.Jedi => "JEDI",
                _ => throw new global::StrawberryShake.GraphQLClientException()};
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public enum SortEnumType
    {
        Asc,
        Desc
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class SortEnumTypeSerializer : global::StrawberryShake.Serialization.IInputValueFormatter, global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, SortEnumType>
    {
        public global::System.String TypeName => "SortEnumType";
        public SortEnumType Parse(global::System.String serializedValue)
        {
            return serializedValue switch
            {
                "ASC" => SortEnumType.Asc,
                "DESC" => SortEnumType.Desc,
                _ => throw new global::StrawberryShake.GraphQLClientException()};
        }

        public global::System.Object Format(global::System.Object? runtimeValue)
        {
            return runtimeValue switch
            {
                SortEnumType.Asc => "ASC",
                SortEnumType.Desc => "DESC",
                _ => throw new global::StrawberryShake.GraphQLClientException()};
        }
    }

    /// <summary>
    /// Represents the operation service of the GetHero GraphQL operation
    /// <code>
    /// query GetHero($episode: Episode!) {
    ///   hero(episode: $episode) {
    ///     __typename
    ///     id
    ///     name
    ///     friends {
    ///       __typename
    ///       edges {
    ///         __typename
    ///         node {
    ///           __typename
    ///           ... characterWithIdAndName
    ///           ... on Human {
    ///             id
    ///           }
    ///           ... on Droid {
    ///             id
    ///           }
    ///         }
    ///       }
    ///     }
    ///     ... on Human {
    ///       id
    ///     }
    ///     ... on Droid {
    ///       id
    ///     }
    ///   }
    /// }
    /// 
    /// fragment characterWithIdAndName on Character {
    ///   id
    ///   name
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetHeroQueryDocument : global::StrawberryShake.IDocument
    {
        private GetHeroQueryDocument()
        {
        }

        public static GetHeroQueryDocument Instance { get; } = new GetHeroQueryDocument();
        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Query;
        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]{0x71, 0x75, 0x65, 0x72, 0x79, 0x20, 0x47, 0x65, 0x74, 0x48, 0x65, 0x72, 0x6f, 0x28, 0x24, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x3a, 0x20, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x21, 0x29, 0x20, 0x7b, 0x20, 0x68, 0x65, 0x72, 0x6f, 0x28, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x3a, 0x20, 0x24, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x29, 0x20, 0x7b, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x69, 0x64, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x20, 0x7b, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x65, 0x64, 0x67, 0x65, 0x73, 0x20, 0x7b, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x6e, 0x6f, 0x64, 0x65, 0x20, 0x7b, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x20, 0x7b, 0x20, 0x69, 0x64, 0x20, 0x7d, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x7b, 0x20, 0x69, 0x64, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x20, 0x7b, 0x20, 0x69, 0x64, 0x20, 0x7d, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x7b, 0x20, 0x69, 0x64, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x20, 0x6f, 0x6e, 0x20, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x20, 0x7b, 0x20, 0x69, 0x64, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x7d};
        public global::StrawberryShake.DocumentHash Hash { get; } = new global::StrawberryShake.DocumentHash("md5Hash", "7a0400901bd22bc9b39dd5b95ee12713");
        public override global::System.String ToString()
        {
#if NETSTANDARD2_0
        return global::System.Text.Encoding.UTF8.GetString(Body.ToArray());
#else
            return global::System.Text.Encoding.UTF8.GetString(Body);
#endif
        }
    }

    /// <summary>
    /// Represents the operation service of the GetHero GraphQL operation
    /// <code>
    /// query GetHero($episode: Episode!) {
    ///   hero(episode: $episode) {
    ///     __typename
    ///     id
    ///     name
    ///     friends {
    ///       __typename
    ///       edges {
    ///         __typename
    ///         node {
    ///           __typename
    ///           ... characterWithIdAndName
    ///           ... on Human {
    ///             id
    ///           }
    ///           ... on Droid {
    ///             id
    ///           }
    ///         }
    ///       }
    ///     }
    ///     ... on Human {
    ///       id
    ///     }
    ///     ... on Droid {
    ///       id
    ///     }
    ///   }
    /// }
    /// 
    /// fragment characterWithIdAndName on Character {
    ///   id
    ///   name
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetHeroQuery : global::StarWarsGeneratedClient.IGetHeroQuery
    {
        private readonly global::StrawberryShake.IOperationExecutor<IGetHeroResult> _operationExecutor;
        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _episodeFormatter;
        public GetHeroQuery(global::StrawberryShake.IOperationExecutor<IGetHeroResult> operationExecutor, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));
            _episodeFormatter = serializerResolver.GetInputValueFormatter("Episode");
        }

        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(IGetHeroResult);
        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetHeroResult>> ExecuteAsync(global::StarWarsGeneratedClient.Episode episode, global::System.Threading.CancellationToken cancellationToken = default)
        {
            var request = CreateRequest(episode);
            return await _operationExecutor.ExecuteAsync(request, cancellationToken).ConfigureAwait(false);
        }

        public global::System.IObservable<global::StrawberryShake.IOperationResult<IGetHeroResult>> Watch(global::StarWarsGeneratedClient.Episode episode, global::StrawberryShake.ExecutionStrategy? strategy = null)
        {
            var request = CreateRequest(episode);
            return _operationExecutor.Watch(request, strategy);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::StarWarsGeneratedClient.Episode episode)
        {
            var variables = new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>();
            variables.Add("episode", FormatEpisode(episode));
            return CreateRequest(variables);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return new global::StrawberryShake.OperationRequest(id: GetHeroQueryDocument.Instance.Hash.Value, name: "GetHero", document: GetHeroQueryDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default, variables: variables);
        }

        private global::System.Object? FormatEpisode(global::StarWarsGeneratedClient.Episode value)
        {
            return _episodeFormatter.Format(value);
        }

        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return CreateRequest(variables!);
        }
    }

    /// <summary>
    /// Represents the operation service of the GetHero GraphQL operation
    /// <code>
    /// query GetHero($episode: Episode!) {
    ///   hero(episode: $episode) {
    ///     __typename
    ///     id
    ///     name
    ///     friends {
    ///       __typename
    ///       edges {
    ///         __typename
    ///         node {
    ///           __typename
    ///           ... characterWithIdAndName
    ///           ... on Human {
    ///             id
    ///           }
    ///           ... on Droid {
    ///             id
    ///           }
    ///         }
    ///       }
    ///     }
    ///     ... on Human {
    ///       id
    ///     }
    ///     ... on Droid {
    ///       id
    ///     }
    ///   }
    /// }
    /// 
    /// fragment characterWithIdAndName on Character {
    ///   id
    ///   name
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetHeroQuery : global::StrawberryShake.IOperationRequestFactory
    {
        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetHeroResult>> ExecuteAsync(global::StarWarsGeneratedClient.Episode episode, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.IObservable<global::StrawberryShake.IOperationResult<IGetHeroResult>> Watch(global::StarWarsGeneratedClient.Episode episode, global::StrawberryShake.ExecutionStrategy? strategy = null);
    }

    /// <summary>
    /// Represents the operation service of the CreateReview GraphQL operation
    /// <code>
    /// mutation CreateReview($review: CreateReviewInput!) {
    ///   createReview(input: $review) {
    ///     __typename
    ///     review {
    ///       __typename
    ///       commentary
    ///       stars
    ///       ... on Review {
    ///         id
    ///       }
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class CreateReviewMutationDocument : global::StrawberryShake.IDocument
    {
        private CreateReviewMutationDocument()
        {
        }

        public static CreateReviewMutationDocument Instance { get; } = new CreateReviewMutationDocument();
        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Mutation;
        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]{0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x28, 0x24, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x3a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x21, 0x29, 0x20, 0x7b, 0x20, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x28, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x3a, 0x20, 0x24, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x29, 0x20, 0x7b, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x20, 0x7b, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x20, 0x73, 0x74, 0x61, 0x72, 0x73, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x20, 0x7b, 0x20, 0x69, 0x64, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x7d};
        public global::StrawberryShake.DocumentHash Hash { get; } = new global::StrawberryShake.DocumentHash("md5Hash", "5b6a783649dc31c687682aa24df735d0");
        public override global::System.String ToString()
        {
#if NETSTANDARD2_0
        return global::System.Text.Encoding.UTF8.GetString(Body.ToArray());
#else
            return global::System.Text.Encoding.UTF8.GetString(Body);
#endif
        }
    }

    /// <summary>
    /// Represents the operation service of the CreateReview GraphQL operation
    /// <code>
    /// mutation CreateReview($review: CreateReviewInput!) {
    ///   createReview(input: $review) {
    ///     __typename
    ///     review {
    ///       __typename
    ///       commentary
    ///       stars
    ///       ... on Review {
    ///         id
    ///       }
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class CreateReviewMutation : global::StarWarsGeneratedClient.ICreateReviewMutation
    {
        private readonly global::StrawberryShake.IOperationExecutor<ICreateReviewResult> _operationExecutor;
        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _createReviewInputFormatter;
        public CreateReviewMutation(global::StrawberryShake.IOperationExecutor<ICreateReviewResult> operationExecutor, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));
            _createReviewInputFormatter = serializerResolver.GetInputValueFormatter("CreateReviewInput");
        }

        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(ICreateReviewResult);
        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<ICreateReviewResult>> ExecuteAsync(global::StarWarsGeneratedClient.CreateReviewInput review, global::System.Threading.CancellationToken cancellationToken = default)
        {
            var request = CreateRequest(review);
            return await _operationExecutor.ExecuteAsync(request, cancellationToken).ConfigureAwait(false);
        }

        public global::System.IObservable<global::StrawberryShake.IOperationResult<ICreateReviewResult>> Watch(global::StarWarsGeneratedClient.CreateReviewInput review, global::StrawberryShake.ExecutionStrategy? strategy = null)
        {
            var request = CreateRequest(review);
            return _operationExecutor.Watch(request, strategy);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::StarWarsGeneratedClient.CreateReviewInput review)
        {
            var variables = new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>();
            variables.Add("review", FormatReview(review));
            return CreateRequest(variables);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return new global::StrawberryShake.OperationRequest(id: CreateReviewMutationDocument.Instance.Hash.Value, name: "CreateReview", document: CreateReviewMutationDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default, variables: variables);
        }

        private global::System.Object? FormatReview(global::StarWarsGeneratedClient.CreateReviewInput value)
        {
            if (value is null)
            {
                throw new global::System.ArgumentNullException(nameof(value));
            }

            return _createReviewInputFormatter.Format(value);
        }

        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return CreateRequest(variables!);
        }
    }

    /// <summary>
    /// Represents the operation service of the CreateReview GraphQL operation
    /// <code>
    /// mutation CreateReview($review: CreateReviewInput!) {
    ///   createReview(input: $review) {
    ///     __typename
    ///     review {
    ///       __typename
    ///       commentary
    ///       stars
    ///       ... on Review {
    ///         id
    ///       }
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface ICreateReviewMutation : global::StrawberryShake.IOperationRequestFactory
    {
        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<ICreateReviewResult>> ExecuteAsync(global::StarWarsGeneratedClient.CreateReviewInput review, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.IObservable<global::StrawberryShake.IOperationResult<ICreateReviewResult>> Watch(global::StarWarsGeneratedClient.CreateReviewInput review, global::StrawberryShake.ExecutionStrategy? strategy = null);
    }

    /// <summary>
    /// Represents the operation service of the GetCharactersByIds GraphQL operation
    /// <code>
    /// query GetCharactersByIds($ids: [Int!]!) {
    ///   charactersByIds(ids: $ids) {
    ///     __typename
    ///     ... c
    ///     ... on Human {
    ///       id
    ///     }
    ///     ... on Droid {
    ///       id
    ///     }
    ///   }
    /// }
    /// 
    /// fragment c on Character {
    ///   id
    ///   name
    ///   height
    ///   appearsIn
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersByIdsQueryDocument : global::StrawberryShake.IDocument
    {
        private GetCharactersByIdsQueryDocument()
        {
        }

        public static GetCharactersByIdsQueryDocument Instance { get; } = new GetCharactersByIdsQueryDocument();
        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Query;
        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]{0x71, 0x75, 0x65, 0x72, 0x79, 0x20, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x42, 0x79, 0x49, 0x64, 0x73, 0x28, 0x24, 0x69, 0x64, 0x73, 0x3a, 0x20, 0x5b, 0x49, 0x6e, 0x74, 0x21, 0x5d, 0x21, 0x29, 0x20, 0x7b, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x42, 0x79, 0x49, 0x64, 0x73, 0x28, 0x69, 0x64, 0x73, 0x3a, 0x20, 0x24, 0x69, 0x64, 0x73, 0x29, 0x20, 0x7b, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x63, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x20, 0x7b, 0x20, 0x69, 0x64, 0x20, 0x7d, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x7b, 0x20, 0x69, 0x64, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x63, 0x20, 0x6f, 0x6e, 0x20, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x20, 0x7b, 0x20, 0x69, 0x64, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x20, 0x61, 0x70, 0x70, 0x65, 0x61, 0x72, 0x73, 0x49, 0x6e, 0x20, 0x7d};
        public global::StrawberryShake.DocumentHash Hash { get; } = new global::StrawberryShake.DocumentHash("md5Hash", "cb5b558116f458467c7b46507f4fdaa1");
        public override global::System.String ToString()
        {
#if NETSTANDARD2_0
        return global::System.Text.Encoding.UTF8.GetString(Body.ToArray());
#else
            return global::System.Text.Encoding.UTF8.GetString(Body);
#endif
        }
    }

    /// <summary>
    /// Represents the operation service of the GetCharactersByIds GraphQL operation
    /// <code>
    /// query GetCharactersByIds($ids: [Int!]!) {
    ///   charactersByIds(ids: $ids) {
    ///     __typename
    ///     ... c
    ///     ... on Human {
    ///       id
    ///     }
    ///     ... on Droid {
    ///       id
    ///     }
    ///   }
    /// }
    /// 
    /// fragment c on Character {
    ///   id
    ///   name
    ///   height
    ///   appearsIn
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersByIdsQuery : global::StarWarsGeneratedClient.IGetCharactersByIdsQuery
    {
        private readonly global::StrawberryShake.IOperationExecutor<IGetCharactersByIdsResult> _operationExecutor;
        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _intFormatter;
        public GetCharactersByIdsQuery(global::StrawberryShake.IOperationExecutor<IGetCharactersByIdsResult> operationExecutor, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));
            _intFormatter = serializerResolver.GetInputValueFormatter("Int");
        }

        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(IGetCharactersByIdsResult);
        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetCharactersByIdsResult>> ExecuteAsync(global::System.Collections.Generic.IReadOnlyList<global::System.Int32> ids, global::System.Threading.CancellationToken cancellationToken = default)
        {
            var request = CreateRequest(ids);
            return await _operationExecutor.ExecuteAsync(request, cancellationToken).ConfigureAwait(false);
        }

        public global::System.IObservable<global::StrawberryShake.IOperationResult<IGetCharactersByIdsResult>> Watch(global::System.Collections.Generic.IReadOnlyList<global::System.Int32> ids, global::StrawberryShake.ExecutionStrategy? strategy = null)
        {
            var request = CreateRequest(ids);
            return _operationExecutor.Watch(request, strategy);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyList<global::System.Int32> ids)
        {
            var variables = new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>();
            variables.Add("ids", FormatIds(ids));
            return CreateRequest(variables);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return new global::StrawberryShake.OperationRequest(id: GetCharactersByIdsQueryDocument.Instance.Hash.Value, name: "GetCharactersByIds", document: GetCharactersByIdsQueryDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default, variables: variables);
        }

        private global::System.Object? FormatIds(global::System.Collections.Generic.IReadOnlyList<global::System.Int32> value)
        {
            var value_list = new global::System.Collections.Generic.List<global::System.Object?>();
            foreach (var value_elm in value)
            {
                value_list.Add(_intFormatter.Format(value_elm));
            }

            return value_list;
        }

        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return CreateRequest(variables!);
        }
    }

    /// <summary>
    /// Represents the operation service of the GetCharactersByIds GraphQL operation
    /// <code>
    /// query GetCharactersByIds($ids: [Int!]!) {
    ///   charactersByIds(ids: $ids) {
    ///     __typename
    ///     ... c
    ///     ... on Human {
    ///       id
    ///     }
    ///     ... on Droid {
    ///       id
    ///     }
    ///   }
    /// }
    /// 
    /// fragment c on Character {
    ///   id
    ///   name
    ///   height
    ///   appearsIn
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetCharactersByIdsQuery : global::StrawberryShake.IOperationRequestFactory
    {
        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetCharactersByIdsResult>> ExecuteAsync(global::System.Collections.Generic.IReadOnlyList<global::System.Int32> ids, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.IObservable<global::StrawberryShake.IOperationResult<IGetCharactersByIdsResult>> Watch(global::System.Collections.Generic.IReadOnlyList<global::System.Int32> ids, global::StrawberryShake.ExecutionStrategy? strategy = null);
    }

    /// <summary>
    /// Represents the operation service of the GetAllCharacters GraphQL operation
    /// <code>
    /// query GetAllCharacters {
    ///   characters {
    ///     __typename
    ///     ... c
    ///     ... on Human {
    ///       id
    ///     }
    ///     ... on Droid {
    ///       id
    ///     }
    ///   }
    /// }
    /// 
    /// fragment c on Character {
    ///   id
    ///   name
    ///   height
    ///   appearsIn
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetAllCharactersQueryDocument : global::StrawberryShake.IDocument
    {
        private GetAllCharactersQueryDocument()
        {
        }

        public static GetAllCharactersQueryDocument Instance { get; } = new GetAllCharactersQueryDocument();
        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Query;
        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]{0x71, 0x75, 0x65, 0x72, 0x79, 0x20, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x20, 0x7b, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x20, 0x7b, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x63, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x20, 0x7b, 0x20, 0x69, 0x64, 0x20, 0x7d, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x7b, 0x20, 0x69, 0x64, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x63, 0x20, 0x6f, 0x6e, 0x20, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x20, 0x7b, 0x20, 0x69, 0x64, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x20, 0x61, 0x70, 0x70, 0x65, 0x61, 0x72, 0x73, 0x49, 0x6e, 0x20, 0x7d};
        public global::StrawberryShake.DocumentHash Hash { get; } = new global::StrawberryShake.DocumentHash("md5Hash", "1caf7d14bb8b33684e21049529607545");
        public override global::System.String ToString()
        {
#if NETSTANDARD2_0
        return global::System.Text.Encoding.UTF8.GetString(Body.ToArray());
#else
            return global::System.Text.Encoding.UTF8.GetString(Body);
#endif
        }
    }

    /// <summary>
    /// Represents the operation service of the GetAllCharacters GraphQL operation
    /// <code>
    /// query GetAllCharacters {
    ///   characters {
    ///     __typename
    ///     ... c
    ///     ... on Human {
    ///       id
    ///     }
    ///     ... on Droid {
    ///       id
    ///     }
    ///   }
    /// }
    /// 
    /// fragment c on Character {
    ///   id
    ///   name
    ///   height
    ///   appearsIn
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetAllCharactersQuery : global::StarWarsGeneratedClient.IGetAllCharactersQuery
    {
        private readonly global::StrawberryShake.IOperationExecutor<IGetAllCharactersResult> _operationExecutor;
        public GetAllCharactersQuery(global::StrawberryShake.IOperationExecutor<IGetAllCharactersResult> operationExecutor)
        {
            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));
        }

        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(IGetAllCharactersResult);
        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetAllCharactersResult>> ExecuteAsync(global::System.Threading.CancellationToken cancellationToken = default)
        {
            var request = CreateRequest();
            return await _operationExecutor.ExecuteAsync(request, cancellationToken).ConfigureAwait(false);
        }

        public global::System.IObservable<global::StrawberryShake.IOperationResult<IGetAllCharactersResult>> Watch(global::StrawberryShake.ExecutionStrategy? strategy = null)
        {
            var request = CreateRequest();
            return _operationExecutor.Watch(request, strategy);
        }

        private global::StrawberryShake.OperationRequest CreateRequest()
        {
            return CreateRequest(null);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return new global::StrawberryShake.OperationRequest(id: GetAllCharactersQueryDocument.Instance.Hash.Value, name: "GetAllCharacters", document: GetAllCharactersQueryDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default);
        }

        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return CreateRequest();
        }
    }

    /// <summary>
    /// Represents the operation service of the GetAllCharacters GraphQL operation
    /// <code>
    /// query GetAllCharacters {
    ///   characters {
    ///     __typename
    ///     ... c
    ///     ... on Human {
    ///       id
    ///     }
    ///     ... on Droid {
    ///       id
    ///     }
    ///   }
    /// }
    /// 
    /// fragment c on Character {
    ///   id
    ///   name
    ///   height
    ///   appearsIn
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetAllCharactersQuery : global::StrawberryShake.IOperationRequestFactory
    {
        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetAllCharactersResult>> ExecuteAsync(global::System.Threading.CancellationToken cancellationToken = default);
        global::System.IObservable<global::StrawberryShake.IOperationResult<IGetAllCharactersResult>> Watch(global::StrawberryShake.ExecutionStrategy? strategy = null);
    }

    /// <summary>
    /// Represents the operation service of the GetCharactersWithCursorPaging GraphQL operation
    /// <code>
    /// query GetCharactersWithCursorPaging($first: Int, $last: Int, $before: String, $after: String) {
    ///   charactersWithCursorPagingFilteringAndSorting(first: $first, last: $last, before: $before, after: $after) {
    ///     __typename
    ///     nodes {
    ///       __typename
    ///       ... c
    ///       ... on Human {
    ///         id
    ///       }
    ///       ... on Droid {
    ///         id
    ///       }
    ///     }
    ///     totalCount
    ///     pageInfo {
    ///       __typename
    ///       endCursor
    ///       startCursor
    ///       hasNextPage
    ///       hasPreviousPage
    ///     }
    ///   }
    /// }
    /// 
    /// fragment c on Character {
    ///   id
    ///   name
    ///   height
    ///   appearsIn
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersWithCursorPagingQueryDocument : global::StrawberryShake.IDocument
    {
        private GetCharactersWithCursorPagingQueryDocument()
        {
        }

        public static GetCharactersWithCursorPagingQueryDocument Instance { get; } = new GetCharactersWithCursorPagingQueryDocument();
        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Query;
        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]{0x71, 0x75, 0x65, 0x72, 0x79, 0x20, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x57, 0x69, 0x74, 0x68, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x28, 0x24, 0x66, 0x69, 0x72, 0x73, 0x74, 0x3a, 0x20, 0x49, 0x6e, 0x74, 0x2c, 0x20, 0x24, 0x6c, 0x61, 0x73, 0x74, 0x3a, 0x20, 0x49, 0x6e, 0x74, 0x2c, 0x20, 0x24, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x3a, 0x20, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x2c, 0x20, 0x24, 0x61, 0x66, 0x74, 0x65, 0x72, 0x3a, 0x20, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x29, 0x20, 0x7b, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x57, 0x69, 0x74, 0x68, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x64, 0x53, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x28, 0x66, 0x69, 0x72, 0x73, 0x74, 0x3a, 0x20, 0x24, 0x66, 0x69, 0x72, 0x73, 0x74, 0x2c, 0x20, 0x6c, 0x61, 0x73, 0x74, 0x3a, 0x20, 0x24, 0x6c, 0x61, 0x73, 0x74, 0x2c, 0x20, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x3a, 0x20, 0x24, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x2c, 0x20, 0x61, 0x66, 0x74, 0x65, 0x72, 0x3a, 0x20, 0x24, 0x61, 0x66, 0x74, 0x65, 0x72, 0x29, 0x20, 0x7b, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x20, 0x7b, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x63, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x20, 0x7b, 0x20, 0x69, 0x64, 0x20, 0x7d, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x7b, 0x20, 0x69, 0x64, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x20, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x20, 0x7b, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x65, 0x6e, 0x64, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x20, 0x68, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x20, 0x68, 0x61, 0x73, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x50, 0x61, 0x67, 0x65, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x63, 0x20, 0x6f, 0x6e, 0x20, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x20, 0x7b, 0x20, 0x69, 0x64, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x20, 0x61, 0x70, 0x70, 0x65, 0x61, 0x72, 0x73, 0x49, 0x6e, 0x20, 0x7d};
        public global::StrawberryShake.DocumentHash Hash { get; } = new global::StrawberryShake.DocumentHash("md5Hash", "d4e5252b56e9684462952449cedc40cf");
        public override global::System.String ToString()
        {
#if NETSTANDARD2_0
        return global::System.Text.Encoding.UTF8.GetString(Body.ToArray());
#else
            return global::System.Text.Encoding.UTF8.GetString(Body);
#endif
        }
    }

    /// <summary>
    /// Represents the operation service of the GetCharactersWithCursorPaging GraphQL operation
    /// <code>
    /// query GetCharactersWithCursorPaging($first: Int, $last: Int, $before: String, $after: String) {
    ///   charactersWithCursorPagingFilteringAndSorting(first: $first, last: $last, before: $before, after: $after) {
    ///     __typename
    ///     nodes {
    ///       __typename
    ///       ... c
    ///       ... on Human {
    ///         id
    ///       }
    ///       ... on Droid {
    ///         id
    ///       }
    ///     }
    ///     totalCount
    ///     pageInfo {
    ///       __typename
    ///       endCursor
    ///       startCursor
    ///       hasNextPage
    ///       hasPreviousPage
    ///     }
    ///   }
    /// }
    /// 
    /// fragment c on Character {
    ///   id
    ///   name
    ///   height
    ///   appearsIn
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersWithCursorPagingQuery : global::StarWarsGeneratedClient.IGetCharactersWithCursorPagingQuery
    {
        private readonly global::StrawberryShake.IOperationExecutor<IGetCharactersWithCursorPagingResult> _operationExecutor;
        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _intFormatter;
        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _stringFormatter;
        public GetCharactersWithCursorPagingQuery(global::StrawberryShake.IOperationExecutor<IGetCharactersWithCursorPagingResult> operationExecutor, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));
            _intFormatter = serializerResolver.GetInputValueFormatter("Int");
            _stringFormatter = serializerResolver.GetInputValueFormatter("String");
        }

        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(IGetCharactersWithCursorPagingResult);
        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetCharactersWithCursorPagingResult>> ExecuteAsync(global::System.Int32? first, global::System.Int32? last, global::System.String? before, global::System.String? after, global::System.Threading.CancellationToken cancellationToken = default)
        {
            var request = CreateRequest(first, last, before, after);
            return await _operationExecutor.ExecuteAsync(request, cancellationToken).ConfigureAwait(false);
        }

        public global::System.IObservable<global::StrawberryShake.IOperationResult<IGetCharactersWithCursorPagingResult>> Watch(global::System.Int32? first, global::System.Int32? last, global::System.String? before, global::System.String? after, global::StrawberryShake.ExecutionStrategy? strategy = null)
        {
            var request = CreateRequest(first, last, before, after);
            return _operationExecutor.Watch(request, strategy);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Int32? first, global::System.Int32? last, global::System.String? before, global::System.String? after)
        {
            var variables = new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>();
            variables.Add("first", FormatFirst(first));
            variables.Add("last", FormatLast(last));
            variables.Add("before", FormatBefore(before));
            variables.Add("after", FormatAfter(after));
            return CreateRequest(variables);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return new global::StrawberryShake.OperationRequest(id: GetCharactersWithCursorPagingQueryDocument.Instance.Hash.Value, name: "GetCharactersWithCursorPaging", document: GetCharactersWithCursorPagingQueryDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default, variables: variables);
        }

        private global::System.Object? FormatFirst(global::System.Int32? value)
        {
            if (value is null)
            {
                return value;
            }
            else
            {
                return _intFormatter.Format(value);
            }
        }

        private global::System.Object? FormatLast(global::System.Int32? value)
        {
            if (value is null)
            {
                return value;
            }
            else
            {
                return _intFormatter.Format(value);
            }
        }

        private global::System.Object? FormatBefore(global::System.String? value)
        {
            if (value is null)
            {
                return value;
            }
            else
            {
                return _stringFormatter.Format(value);
            }
        }

        private global::System.Object? FormatAfter(global::System.String? value)
        {
            if (value is null)
            {
                return value;
            }
            else
            {
                return _stringFormatter.Format(value);
            }
        }

        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return CreateRequest(variables!);
        }
    }

    /// <summary>
    /// Represents the operation service of the GetCharactersWithCursorPaging GraphQL operation
    /// <code>
    /// query GetCharactersWithCursorPaging($first: Int, $last: Int, $before: String, $after: String) {
    ///   charactersWithCursorPagingFilteringAndSorting(first: $first, last: $last, before: $before, after: $after) {
    ///     __typename
    ///     nodes {
    ///       __typename
    ///       ... c
    ///       ... on Human {
    ///         id
    ///       }
    ///       ... on Droid {
    ///         id
    ///       }
    ///     }
    ///     totalCount
    ///     pageInfo {
    ///       __typename
    ///       endCursor
    ///       startCursor
    ///       hasNextPage
    ///       hasPreviousPage
    ///     }
    ///   }
    /// }
    /// 
    /// fragment c on Character {
    ///   id
    ///   name
    ///   height
    ///   appearsIn
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetCharactersWithCursorPagingQuery : global::StrawberryShake.IOperationRequestFactory
    {
        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetCharactersWithCursorPagingResult>> ExecuteAsync(global::System.Int32? first, global::System.Int32? last, global::System.String? before, global::System.String? after, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.IObservable<global::StrawberryShake.IOperationResult<IGetCharactersWithCursorPagingResult>> Watch(global::System.Int32? first, global::System.Int32? last, global::System.String? before, global::System.String? after, global::StrawberryShake.ExecutionStrategy? strategy = null);
    }

    /// <summary>
    /// Represents the operation service of the GetCharactersWithPaging GraphQL operation
    /// <code>
    /// query GetCharactersWithPaging($take: Int!, $skip: Int, $where: ICharacterFilterInput, $order: [ICharacterSortInput!]) {
    ///   charactersWithPagingFilteringAndSorting(take: $take, skip: $skip, where: $where, order: $order) {
    ///     __typename
    ///     items {
    ///       __typename
    ///       ... c
    ///       ... on Human {
    ///         id
    ///       }
    ///       ... on Droid {
    ///         id
    ///       }
    ///     }
    ///     totalCount
    ///     pageInfo {
    ///       __typename
    ///       hasNextPage
    ///       hasPreviousPage
    ///     }
    ///   }
    /// }
    /// 
    /// fragment c on Character {
    ///   id
    ///   name
    ///   height
    ///   appearsIn
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersWithPagingQueryDocument : global::StrawberryShake.IDocument
    {
        private GetCharactersWithPagingQueryDocument()
        {
        }

        public static GetCharactersWithPagingQueryDocument Instance { get; } = new GetCharactersWithPagingQueryDocument();
        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Query;
        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]{0x71, 0x75, 0x65, 0x72, 0x79, 0x20, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x57, 0x69, 0x74, 0x68, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x28, 0x24, 0x74, 0x61, 0x6b, 0x65, 0x3a, 0x20, 0x49, 0x6e, 0x74, 0x21, 0x2c, 0x20, 0x24, 0x73, 0x6b, 0x69, 0x70, 0x3a, 0x20, 0x49, 0x6e, 0x74, 0x2c, 0x20, 0x24, 0x77, 0x68, 0x65, 0x72, 0x65, 0x3a, 0x20, 0x49, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2c, 0x20, 0x24, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x3a, 0x20, 0x5b, 0x49, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x21, 0x5d, 0x29, 0x20, 0x7b, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x57, 0x69, 0x74, 0x68, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x64, 0x53, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x28, 0x74, 0x61, 0x6b, 0x65, 0x3a, 0x20, 0x24, 0x74, 0x61, 0x6b, 0x65, 0x2c, 0x20, 0x73, 0x6b, 0x69, 0x70, 0x3a, 0x20, 0x24, 0x73, 0x6b, 0x69, 0x70, 0x2c, 0x20, 0x77, 0x68, 0x65, 0x72, 0x65, 0x3a, 0x20, 0x24, 0x77, 0x68, 0x65, 0x72, 0x65, 0x2c, 0x20, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x3a, 0x20, 0x24, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x29, 0x20, 0x7b, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x20, 0x7b, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x63, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x20, 0x7b, 0x20, 0x69, 0x64, 0x20, 0x7d, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x7b, 0x20, 0x69, 0x64, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x20, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x20, 0x7b, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x68, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x20, 0x68, 0x61, 0x73, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x50, 0x61, 0x67, 0x65, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x63, 0x20, 0x6f, 0x6e, 0x20, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x20, 0x7b, 0x20, 0x69, 0x64, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x20, 0x61, 0x70, 0x70, 0x65, 0x61, 0x72, 0x73, 0x49, 0x6e, 0x20, 0x7d};
        public global::StrawberryShake.DocumentHash Hash { get; } = new global::StrawberryShake.DocumentHash("md5Hash", "be37bbfff502e87490046ebbf5ba0e7e");
        public override global::System.String ToString()
        {
#if NETSTANDARD2_0
        return global::System.Text.Encoding.UTF8.GetString(Body.ToArray());
#else
            return global::System.Text.Encoding.UTF8.GetString(Body);
#endif
        }
    }

    /// <summary>
    /// Represents the operation service of the GetCharactersWithPaging GraphQL operation
    /// <code>
    /// query GetCharactersWithPaging($take: Int!, $skip: Int, $where: ICharacterFilterInput, $order: [ICharacterSortInput!]) {
    ///   charactersWithPagingFilteringAndSorting(take: $take, skip: $skip, where: $where, order: $order) {
    ///     __typename
    ///     items {
    ///       __typename
    ///       ... c
    ///       ... on Human {
    ///         id
    ///       }
    ///       ... on Droid {
    ///         id
    ///       }
    ///     }
    ///     totalCount
    ///     pageInfo {
    ///       __typename
    ///       hasNextPage
    ///       hasPreviousPage
    ///     }
    ///   }
    /// }
    /// 
    /// fragment c on Character {
    ///   id
    ///   name
    ///   height
    ///   appearsIn
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersWithPagingQuery : global::StarWarsGeneratedClient.IGetCharactersWithPagingQuery
    {
        private readonly global::StrawberryShake.IOperationExecutor<IGetCharactersWithPagingResult> _operationExecutor;
        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _intFormatter;
        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _iCharacterFilterInputFormatter;
        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _iCharacterSortInputFormatter;
        public GetCharactersWithPagingQuery(global::StrawberryShake.IOperationExecutor<IGetCharactersWithPagingResult> operationExecutor, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));
            _intFormatter = serializerResolver.GetInputValueFormatter("Int");
            _iCharacterFilterInputFormatter = serializerResolver.GetInputValueFormatter("ICharacterFilterInput");
            _iCharacterSortInputFormatter = serializerResolver.GetInputValueFormatter("ICharacterSortInput");
        }

        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(IGetCharactersWithPagingResult);
        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetCharactersWithPagingResult>> ExecuteAsync(global::System.Int32 take, global::System.Int32? skip, global::StarWarsGeneratedClient.ICharacterFilterInput? @where, global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.ICharacterSortInput>? order, global::System.Threading.CancellationToken cancellationToken = default)
        {
            var request = CreateRequest(take, skip, @where, order);
            return await _operationExecutor.ExecuteAsync(request, cancellationToken).ConfigureAwait(false);
        }

        public global::System.IObservable<global::StrawberryShake.IOperationResult<IGetCharactersWithPagingResult>> Watch(global::System.Int32 take, global::System.Int32? skip, global::StarWarsGeneratedClient.ICharacterFilterInput? @where, global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.ICharacterSortInput>? order, global::StrawberryShake.ExecutionStrategy? strategy = null)
        {
            var request = CreateRequest(take, skip, @where, order);
            return _operationExecutor.Watch(request, strategy);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Int32 take, global::System.Int32? skip, global::StarWarsGeneratedClient.ICharacterFilterInput? @where, global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.ICharacterSortInput>? order)
        {
            var variables = new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>();
            variables.Add("take", FormatTake(take));
            variables.Add("skip", FormatSkip(skip));
            variables.Add("where", FormatWhere(@where));
            variables.Add("order", FormatOrder(order));
            return CreateRequest(variables);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return new global::StrawberryShake.OperationRequest(id: GetCharactersWithPagingQueryDocument.Instance.Hash.Value, name: "GetCharactersWithPaging", document: GetCharactersWithPagingQueryDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default, variables: variables);
        }

        private global::System.Object? FormatTake(global::System.Int32 value)
        {
            return _intFormatter.Format(value);
        }

        private global::System.Object? FormatSkip(global::System.Int32? value)
        {
            if (value is null)
            {
                return value;
            }
            else
            {
                return _intFormatter.Format(value);
            }
        }

        private global::System.Object? FormatWhere(global::StarWarsGeneratedClient.ICharacterFilterInput? value)
        {
            if (value is null)
            {
                return value;
            }
            else
            {
                return _iCharacterFilterInputFormatter.Format(value);
            }
        }

        private global::System.Object? FormatOrder(global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.ICharacterSortInput>? value)
        {
            if (value is null)
            {
                return value;
            }
            else
            {
                var value_list = new global::System.Collections.Generic.List<global::System.Object?>();
                foreach (var value_elm in value)
                {
                    if (value_elm is null)
                    {
                        throw new global::System.ArgumentNullException(nameof(value_elm));
                    }

                    value_list.Add(_iCharacterSortInputFormatter.Format(value_elm));
                }

                return value_list;
            }
        }

        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return CreateRequest(variables!);
        }
    }

    /// <summary>
    /// Represents the operation service of the GetCharactersWithPaging GraphQL operation
    /// <code>
    /// query GetCharactersWithPaging($take: Int!, $skip: Int, $where: ICharacterFilterInput, $order: [ICharacterSortInput!]) {
    ///   charactersWithPagingFilteringAndSorting(take: $take, skip: $skip, where: $where, order: $order) {
    ///     __typename
    ///     items {
    ///       __typename
    ///       ... c
    ///       ... on Human {
    ///         id
    ///       }
    ///       ... on Droid {
    ///         id
    ///       }
    ///     }
    ///     totalCount
    ///     pageInfo {
    ///       __typename
    ///       hasNextPage
    ///       hasPreviousPage
    ///     }
    ///   }
    /// }
    /// 
    /// fragment c on Character {
    ///   id
    ///   name
    ///   height
    ///   appearsIn
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetCharactersWithPagingQuery : global::StrawberryShake.IOperationRequestFactory
    {
        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetCharactersWithPagingResult>> ExecuteAsync(global::System.Int32 take, global::System.Int32? skip, global::StarWarsGeneratedClient.ICharacterFilterInput? @where, global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.ICharacterSortInput>? order, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.IObservable<global::StrawberryShake.IOperationResult<IGetCharactersWithPagingResult>> Watch(global::System.Int32 take, global::System.Int32? skip, global::StarWarsGeneratedClient.ICharacterFilterInput? @where, global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.ICharacterSortInput>? order, global::StrawberryShake.ExecutionStrategy? strategy = null);
    }

    /// <summary>
    /// Represents the operation service of the GetAllHumansAndDroids GraphQL operation
    /// <code>
    /// query GetAllHumansAndDroids {
    ///   characters {
    ///     __typename
    ///     ... d
    ///     ... h
    ///     ... on Human {
    ///       id
    ///     }
    ///     ... on Droid {
    ///       id
    ///     }
    ///   }
    /// }
    /// 
    /// fragment d on Droid {
    ///   id
    ///   name
    ///   appearsIn
    ///   primaryFunction
    /// }
    /// 
    /// fragment h on Human {
    ///   id
    ///   name
    ///   appearsIn
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetAllHumansAndDroidsQueryDocument : global::StrawberryShake.IDocument
    {
        private GetAllHumansAndDroidsQueryDocument()
        {
        }

        public static GetAllHumansAndDroidsQueryDocument Instance { get; } = new GetAllHumansAndDroidsQueryDocument();
        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Query;
        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]{0x71, 0x75, 0x65, 0x72, 0x79, 0x20, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x73, 0x41, 0x6e, 0x64, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x73, 0x20, 0x7b, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x20, 0x7b, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x64, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x68, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x20, 0x7b, 0x20, 0x69, 0x64, 0x20, 0x7d, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x7b, 0x20, 0x69, 0x64, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x64, 0x20, 0x6f, 0x6e, 0x20, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x7b, 0x20, 0x69, 0x64, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x61, 0x70, 0x70, 0x65, 0x61, 0x72, 0x73, 0x49, 0x6e, 0x20, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x7d, 0x20, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x68, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x20, 0x7b, 0x20, 0x69, 0x64, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x61, 0x70, 0x70, 0x65, 0x61, 0x72, 0x73, 0x49, 0x6e, 0x20, 0x7d};
        public global::StrawberryShake.DocumentHash Hash { get; } = new global::StrawberryShake.DocumentHash("md5Hash", "9a72ebcc2fd3f150afbcafa695b67784");
        public override global::System.String ToString()
        {
#if NETSTANDARD2_0
        return global::System.Text.Encoding.UTF8.GetString(Body.ToArray());
#else
            return global::System.Text.Encoding.UTF8.GetString(Body);
#endif
        }
    }

    /// <summary>
    /// Represents the operation service of the GetAllHumansAndDroids GraphQL operation
    /// <code>
    /// query GetAllHumansAndDroids {
    ///   characters {
    ///     __typename
    ///     ... d
    ///     ... h
    ///     ... on Human {
    ///       id
    ///     }
    ///     ... on Droid {
    ///       id
    ///     }
    ///   }
    /// }
    /// 
    /// fragment d on Droid {
    ///   id
    ///   name
    ///   appearsIn
    ///   primaryFunction
    /// }
    /// 
    /// fragment h on Human {
    ///   id
    ///   name
    ///   appearsIn
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetAllHumansAndDroidsQuery : global::StarWarsGeneratedClient.IGetAllHumansAndDroidsQuery
    {
        private readonly global::StrawberryShake.IOperationExecutor<IGetAllHumansAndDroidsResult> _operationExecutor;
        public GetAllHumansAndDroidsQuery(global::StrawberryShake.IOperationExecutor<IGetAllHumansAndDroidsResult> operationExecutor)
        {
            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));
        }

        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(IGetAllHumansAndDroidsResult);
        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetAllHumansAndDroidsResult>> ExecuteAsync(global::System.Threading.CancellationToken cancellationToken = default)
        {
            var request = CreateRequest();
            return await _operationExecutor.ExecuteAsync(request, cancellationToken).ConfigureAwait(false);
        }

        public global::System.IObservable<global::StrawberryShake.IOperationResult<IGetAllHumansAndDroidsResult>> Watch(global::StrawberryShake.ExecutionStrategy? strategy = null)
        {
            var request = CreateRequest();
            return _operationExecutor.Watch(request, strategy);
        }

        private global::StrawberryShake.OperationRequest CreateRequest()
        {
            return CreateRequest(null);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return new global::StrawberryShake.OperationRequest(id: GetAllHumansAndDroidsQueryDocument.Instance.Hash.Value, name: "GetAllHumansAndDroids", document: GetAllHumansAndDroidsQueryDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default);
        }

        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return CreateRequest();
        }
    }

    /// <summary>
    /// Represents the operation service of the GetAllHumansAndDroids GraphQL operation
    /// <code>
    /// query GetAllHumansAndDroids {
    ///   characters {
    ///     __typename
    ///     ... d
    ///     ... h
    ///     ... on Human {
    ///       id
    ///     }
    ///     ... on Droid {
    ///       id
    ///     }
    ///   }
    /// }
    /// 
    /// fragment d on Droid {
    ///   id
    ///   name
    ///   appearsIn
    ///   primaryFunction
    /// }
    /// 
    /// fragment h on Human {
    ///   id
    ///   name
    ///   appearsIn
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetAllHumansAndDroidsQuery : global::StrawberryShake.IOperationRequestFactory
    {
        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetAllHumansAndDroidsResult>> ExecuteAsync(global::System.Threading.CancellationToken cancellationToken = default);
        global::System.IObservable<global::StrawberryShake.IOperationResult<IGetAllHumansAndDroidsResult>> Watch(global::StrawberryShake.ExecutionStrategy? strategy = null);
    }

    /// <summary>
    /// Represents the StarWarsGeneratedClient GraphQL client
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class StarWarsGeneratedClient : global::StarWarsGeneratedClient.IStarWarsGeneratedClient
    {
        private readonly global::StarWarsGeneratedClient.IGetHeroQuery _getHero;
        private readonly global::StarWarsGeneratedClient.ICreateReviewMutation _createReview;
        private readonly global::StarWarsGeneratedClient.IGetCharactersByIdsQuery _getCharactersByIds;
        private readonly global::StarWarsGeneratedClient.IGetAllCharactersQuery _getAllCharacters;
        private readonly global::StarWarsGeneratedClient.IGetCharactersWithCursorPagingQuery _getCharactersWithCursorPaging;
        private readonly global::StarWarsGeneratedClient.IGetCharactersWithPagingQuery _getCharactersWithPaging;
        private readonly global::StarWarsGeneratedClient.IGetAllHumansAndDroidsQuery _getAllHumansAndDroids;
        public StarWarsGeneratedClient(global::StarWarsGeneratedClient.IGetHeroQuery getHero, global::StarWarsGeneratedClient.ICreateReviewMutation createReview, global::StarWarsGeneratedClient.IGetCharactersByIdsQuery getCharactersByIds, global::StarWarsGeneratedClient.IGetAllCharactersQuery getAllCharacters, global::StarWarsGeneratedClient.IGetCharactersWithCursorPagingQuery getCharactersWithCursorPaging, global::StarWarsGeneratedClient.IGetCharactersWithPagingQuery getCharactersWithPaging, global::StarWarsGeneratedClient.IGetAllHumansAndDroidsQuery getAllHumansAndDroids)
        {
            _getHero = getHero ?? throw new global::System.ArgumentNullException(nameof(getHero));
            _createReview = createReview ?? throw new global::System.ArgumentNullException(nameof(createReview));
            _getCharactersByIds = getCharactersByIds ?? throw new global::System.ArgumentNullException(nameof(getCharactersByIds));
            _getAllCharacters = getAllCharacters ?? throw new global::System.ArgumentNullException(nameof(getAllCharacters));
            _getCharactersWithCursorPaging = getCharactersWithCursorPaging ?? throw new global::System.ArgumentNullException(nameof(getCharactersWithCursorPaging));
            _getCharactersWithPaging = getCharactersWithPaging ?? throw new global::System.ArgumentNullException(nameof(getCharactersWithPaging));
            _getAllHumansAndDroids = getAllHumansAndDroids ?? throw new global::System.ArgumentNullException(nameof(getAllHumansAndDroids));
        }

        public static global::System.String ClientName => "StarWarsGeneratedClient";
        public global::StarWarsGeneratedClient.IGetHeroQuery GetHero => _getHero;
        public global::StarWarsGeneratedClient.ICreateReviewMutation CreateReview => _createReview;
        public global::StarWarsGeneratedClient.IGetCharactersByIdsQuery GetCharactersByIds => _getCharactersByIds;
        public global::StarWarsGeneratedClient.IGetAllCharactersQuery GetAllCharacters => _getAllCharacters;
        public global::StarWarsGeneratedClient.IGetCharactersWithCursorPagingQuery GetCharactersWithCursorPaging => _getCharactersWithCursorPaging;
        public global::StarWarsGeneratedClient.IGetCharactersWithPagingQuery GetCharactersWithPaging => _getCharactersWithPaging;
        public global::StarWarsGeneratedClient.IGetAllHumansAndDroidsQuery GetAllHumansAndDroids => _getAllHumansAndDroids;
    }

    /// <summary>
    /// Represents the StarWarsGeneratedClient GraphQL client
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IStarWarsGeneratedClient
    {
        global::StarWarsGeneratedClient.IGetHeroQuery GetHero { get; }

        global::StarWarsGeneratedClient.ICreateReviewMutation CreateReview { get; }

        global::StarWarsGeneratedClient.IGetCharactersByIdsQuery GetCharactersByIds { get; }

        global::StarWarsGeneratedClient.IGetAllCharactersQuery GetAllCharacters { get; }

        global::StarWarsGeneratedClient.IGetCharactersWithCursorPagingQuery GetCharactersWithCursorPaging { get; }

        global::StarWarsGeneratedClient.IGetCharactersWithPagingQuery GetCharactersWithPaging { get; }

        global::StarWarsGeneratedClient.IGetAllHumansAndDroidsQuery GetAllHumansAndDroids { get; }
    }
}

namespace StarWarsGeneratedClient.State
{
    ///<summary>This resolver class extends all object types implementing ICharacter.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class HumanEntity
    {
        public HumanEntity(global::System.Int32 id = default !, global::System.String name = default !, global::StarWarsGeneratedClient.State.FriendsConnectionData? friends = default !, global::System.Double height = default !, global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode> appearsIn = default !)
        {
            Id = id;
            Name = name;
            Friends = friends;
            Height = height;
            AppearsIn = appearsIn;
        }

        ///<summary>The unique identifier for the character.</summary>
        public global::System.Int32 Id { get; }

        ///<summary>The name of the character.</summary>
        public global::System.String Name { get; }

        public global::StarWarsGeneratedClient.State.FriendsConnectionData? Friends { get; }

        ///<summary>The height of the character.</summary>
        public global::System.Double Height { get; }

        ///<summary>The episodes the character appears in.</summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode> AppearsIn { get; }
    }

    ///<summary>This resolver class extends all object types implementing ICharacter.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class DroidEntity
    {
        public DroidEntity(global::System.Int32 id = default !, global::System.String name = default !, global::StarWarsGeneratedClient.State.FriendsConnectionData? friends = default !, global::System.Double height = default !, global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode> appearsIn = default !, global::System.String primaryFunction = default !)
        {
            Id = id;
            Name = name;
            Friends = friends;
            Height = height;
            AppearsIn = appearsIn;
            PrimaryFunction = primaryFunction;
        }

        ///<summary>The unique identifier for the character.</summary>
        public global::System.Int32 Id { get; }

        ///<summary>The name of the character.</summary>
        public global::System.String Name { get; }

        public global::StarWarsGeneratedClient.State.FriendsConnectionData? Friends { get; }

        ///<summary>The height of the character.</summary>
        public global::System.Double Height { get; }

        ///<summary>The episodes the character appears in.</summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode> AppearsIn { get; }

        ///<summary>The droid's primary function.</summary>
        public global::System.String PrimaryFunction { get; }
    }

    ///<summary>A review of a particular movie.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class ReviewEntity
    {
        public ReviewEntity(global::System.String commentary = default !, global::System.Int32 stars = default !)
        {
            Commentary = commentary;
            Stars = stars;
        }

        ///<summary>An explanation for the rating.</summary>
        public global::System.String Commentary { get; }

        ///<summary>The number of stars given for this review.</summary>
        public global::System.Int32 Stars { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetHeroResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.GetHeroResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, GetHero_Hero_Human> _getHero_Hero_HumanFromHumanEntityMapper;
        private readonly global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, GetHero_Hero_Droid> _getHero_Hero_DroidFromDroidEntityMapper;
        public GetHeroResultFactory(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, GetHero_Hero_Human> getHero_Hero_HumanFromHumanEntityMapper, global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, GetHero_Hero_Droid> getHero_Hero_DroidFromDroidEntityMapper)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _getHero_Hero_HumanFromHumanEntityMapper = getHero_Hero_HumanFromHumanEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getHero_Hero_HumanFromHumanEntityMapper));
            _getHero_Hero_DroidFromDroidEntityMapper = getHero_Hero_DroidFromDroidEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getHero_Hero_DroidFromDroidEntityMapper));
        }

        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::StarWarsGeneratedClient.IGetHeroResult);
        public GetHeroResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            if (dataInfo is GetHeroResultInfo info)
            {
                return new GetHeroResult(MapNonNullableIGetHero_Hero(info.Hero, snapshot));
            }

            throw new global::System.ArgumentException("GetHeroResultInfo expected.");
        }

        private global::StarWarsGeneratedClient.IGetHero_Hero MapNonNullableIGetHero_Hero(global::StrawberryShake.EntityId entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId.Name.Equals("Human", global::System.StringComparison.Ordinal))
            {
                return _getHero_Hero_HumanFromHumanEntityMapper.Map(snapshot.GetEntity<global::StarWarsGeneratedClient.State.HumanEntity>(entityId) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            if (entityId.Name.Equals("Droid", global::System.StringComparison.Ordinal))
            {
                return _getHero_Hero_DroidFromDroidEntityMapper.Map(snapshot.GetEntity<global::StarWarsGeneratedClient.State.DroidEntity>(entityId) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }

        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)
        {
            return Create(dataInfo, snapshot);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetHeroResultInfo : global::StrawberryShake.IOperationResultDataInfo
    {
        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;
        private readonly global::System.UInt64 _version;
        public GetHeroResultInfo(global::StrawberryShake.EntityId hero, global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds, global::System.UInt64 version)
        {
            Hero = hero;
            _entityIds = entityIds ?? throw new global::System.ArgumentNullException(nameof(entityIds));
            _version = version;
        }

        /// <summary>
        /// Retrieve a hero by a particular Star Wars episode.
        /// 
        /// 
        /// **Returns:**
        /// The hero character.
        /// </summary>
        public global::StrawberryShake.EntityId Hero { get; }

        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;
        public global::System.UInt64 Version => _version;
        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)
        {
            return new GetHeroResultInfo(Hero, _entityIds, version);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetHero_Hero_HumanFromHumanEntityMapper : global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, GetHero_Hero_Human>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, GetHero_Hero_Friends_Edges_Node_Human> _getHero_Hero_Friends_Edges_Node_HumanFromHumanEntityMapper;
        private readonly global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, GetHero_Hero_Friends_Edges_Node_Droid> _getHero_Hero_Friends_Edges_Node_DroidFromDroidEntityMapper;
        public GetHero_Hero_HumanFromHumanEntityMapper(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, GetHero_Hero_Friends_Edges_Node_Human> getHero_Hero_Friends_Edges_Node_HumanFromHumanEntityMapper, global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, GetHero_Hero_Friends_Edges_Node_Droid> getHero_Hero_Friends_Edges_Node_DroidFromDroidEntityMapper)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _getHero_Hero_Friends_Edges_Node_HumanFromHumanEntityMapper = getHero_Hero_Friends_Edges_Node_HumanFromHumanEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getHero_Hero_Friends_Edges_Node_HumanFromHumanEntityMapper));
            _getHero_Hero_Friends_Edges_Node_DroidFromDroidEntityMapper = getHero_Hero_Friends_Edges_Node_DroidFromDroidEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getHero_Hero_Friends_Edges_Node_DroidFromDroidEntityMapper));
        }

        public GetHero_Hero_Human Map(global::StarWarsGeneratedClient.State.HumanEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new GetHero_Hero_Human(entity.Id, entity.Name, MapIGetHero_Hero_Friends(entity.Friends, snapshot));
        }

        private global::StarWarsGeneratedClient.IGetHero_Hero_Friends? MapIGetHero_Hero_Friends(global::StarWarsGeneratedClient.State.FriendsConnectionData? data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (data is null)
            {
                return null;
            }

            IGetHero_Hero_Friends returnValue = default !;
            if (data?.__typename.Equals("FriendsConnection", global::System.StringComparison.Ordinal) ?? false)
            {
                returnValue = new GetHero_Hero_Friends_FriendsConnection(MapIGetHero_Hero_Friends_EdgesNonNullableArray(data.Edges, snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.IGetHero_Hero_Friends_Edges>? MapIGetHero_Hero_Friends_EdgesNonNullableArray(global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.State.FriendsEdgeData>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (list is null)
            {
                return null;
            }

            var friendsEdges = new global::System.Collections.Generic.List<global::StarWarsGeneratedClient.IGetHero_Hero_Friends_Edges>();
            foreach (global::StarWarsGeneratedClient.State.FriendsEdgeData child in list)
            {
                friendsEdges.Add(MapNonNullableIGetHero_Hero_Friends_Edges(child, snapshot));
            }

            return friendsEdges;
        }

        private global::StarWarsGeneratedClient.IGetHero_Hero_Friends_Edges MapNonNullableIGetHero_Hero_Friends_Edges(global::StarWarsGeneratedClient.State.FriendsEdgeData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetHero_Hero_Friends_Edges returnValue = default !;
            if (data.__typename.Equals("FriendsEdge", global::System.StringComparison.Ordinal))
            {
                returnValue = new GetHero_Hero_Friends_Edges_FriendsEdge(MapIGetHero_Hero_Friends_Edges_Node(data.Node, snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::StarWarsGeneratedClient.IGetHero_Hero_Friends_Edges_Node? MapIGetHero_Hero_Friends_Edges_Node(global::StrawberryShake.EntityId? entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId is null)
            {
                return null;
            }

            if (entityId.Value.Name.Equals("Human", global::System.StringComparison.Ordinal))
            {
                return _getHero_Hero_Friends_Edges_Node_HumanFromHumanEntityMapper.Map(snapshot.GetEntity<global::StarWarsGeneratedClient.State.HumanEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            if (entityId.Value.Name.Equals("Droid", global::System.StringComparison.Ordinal))
            {
                return _getHero_Hero_Friends_Edges_Node_DroidFromDroidEntityMapper.Map(snapshot.GetEntity<global::StarWarsGeneratedClient.State.DroidEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetHero_Hero_DroidFromDroidEntityMapper : global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, GetHero_Hero_Droid>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, GetHero_Hero_Friends_Edges_Node_Human> _getHero_Hero_Friends_Edges_Node_HumanFromHumanEntityMapper;
        private readonly global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, GetHero_Hero_Friends_Edges_Node_Droid> _getHero_Hero_Friends_Edges_Node_DroidFromDroidEntityMapper;
        public GetHero_Hero_DroidFromDroidEntityMapper(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, GetHero_Hero_Friends_Edges_Node_Human> getHero_Hero_Friends_Edges_Node_HumanFromHumanEntityMapper, global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, GetHero_Hero_Friends_Edges_Node_Droid> getHero_Hero_Friends_Edges_Node_DroidFromDroidEntityMapper)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _getHero_Hero_Friends_Edges_Node_HumanFromHumanEntityMapper = getHero_Hero_Friends_Edges_Node_HumanFromHumanEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getHero_Hero_Friends_Edges_Node_HumanFromHumanEntityMapper));
            _getHero_Hero_Friends_Edges_Node_DroidFromDroidEntityMapper = getHero_Hero_Friends_Edges_Node_DroidFromDroidEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getHero_Hero_Friends_Edges_Node_DroidFromDroidEntityMapper));
        }

        public GetHero_Hero_Droid Map(global::StarWarsGeneratedClient.State.DroidEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new GetHero_Hero_Droid(entity.Id, entity.Name, MapIGetHero_Hero_Friends(entity.Friends, snapshot));
        }

        private global::StarWarsGeneratedClient.IGetHero_Hero_Friends? MapIGetHero_Hero_Friends(global::StarWarsGeneratedClient.State.FriendsConnectionData? data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (data is null)
            {
                return null;
            }

            IGetHero_Hero_Friends returnValue = default !;
            if (data?.__typename.Equals("FriendsConnection", global::System.StringComparison.Ordinal) ?? false)
            {
                returnValue = new GetHero_Hero_Friends_FriendsConnection(MapIGetHero_Hero_Friends_EdgesNonNullableArray(data.Edges, snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.IGetHero_Hero_Friends_Edges>? MapIGetHero_Hero_Friends_EdgesNonNullableArray(global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.State.FriendsEdgeData>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (list is null)
            {
                return null;
            }

            var friendsEdges = new global::System.Collections.Generic.List<global::StarWarsGeneratedClient.IGetHero_Hero_Friends_Edges>();
            foreach (global::StarWarsGeneratedClient.State.FriendsEdgeData child in list)
            {
                friendsEdges.Add(MapNonNullableIGetHero_Hero_Friends_Edges(child, snapshot));
            }

            return friendsEdges;
        }

        private global::StarWarsGeneratedClient.IGetHero_Hero_Friends_Edges MapNonNullableIGetHero_Hero_Friends_Edges(global::StarWarsGeneratedClient.State.FriendsEdgeData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetHero_Hero_Friends_Edges returnValue = default !;
            if (data.__typename.Equals("FriendsEdge", global::System.StringComparison.Ordinal))
            {
                returnValue = new GetHero_Hero_Friends_Edges_FriendsEdge(MapIGetHero_Hero_Friends_Edges_Node(data.Node, snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::StarWarsGeneratedClient.IGetHero_Hero_Friends_Edges_Node? MapIGetHero_Hero_Friends_Edges_Node(global::StrawberryShake.EntityId? entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId is null)
            {
                return null;
            }

            if (entityId.Value.Name.Equals("Human", global::System.StringComparison.Ordinal))
            {
                return _getHero_Hero_Friends_Edges_Node_HumanFromHumanEntityMapper.Map(snapshot.GetEntity<global::StarWarsGeneratedClient.State.HumanEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            if (entityId.Value.Name.Equals("Droid", global::System.StringComparison.Ordinal))
            {
                return _getHero_Hero_Friends_Edges_Node_DroidFromDroidEntityMapper.Map(snapshot.GetEntity<global::StarWarsGeneratedClient.State.DroidEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetHero_Hero_Friends_Edges_Node_HumanFromHumanEntityMapper : global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, GetHero_Hero_Friends_Edges_Node_Human>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public GetHero_Hero_Friends_Edges_Node_HumanFromHumanEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public GetHero_Hero_Friends_Edges_Node_Human Map(global::StarWarsGeneratedClient.State.HumanEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new GetHero_Hero_Friends_Edges_Node_Human(entity.Id, entity.Name);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetHero_Hero_Friends_Edges_Node_DroidFromDroidEntityMapper : global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, GetHero_Hero_Friends_Edges_Node_Droid>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public GetHero_Hero_Friends_Edges_Node_DroidFromDroidEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public GetHero_Hero_Friends_Edges_Node_Droid Map(global::StarWarsGeneratedClient.State.DroidEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new GetHero_Hero_Friends_Edges_Node_Droid(entity.Id, entity.Name);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class CreateReviewResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.CreateReviewResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.ReviewEntity, CreateReview_CreateReview_Review_Review> _createReview_CreateReview_Review_ReviewFromReviewEntityMapper;
        public CreateReviewResultFactory(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.ReviewEntity, CreateReview_CreateReview_Review_Review> createReview_CreateReview_Review_ReviewFromReviewEntityMapper)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _createReview_CreateReview_Review_ReviewFromReviewEntityMapper = createReview_CreateReview_Review_ReviewFromReviewEntityMapper ?? throw new global::System.ArgumentNullException(nameof(createReview_CreateReview_Review_ReviewFromReviewEntityMapper));
        }

        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::StarWarsGeneratedClient.ICreateReviewResult);
        public CreateReviewResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            if (dataInfo is CreateReviewResultInfo info)
            {
                return new CreateReviewResult(MapNonNullableICreateReview_CreateReview(info.CreateReview, snapshot));
            }

            throw new global::System.ArgumentException("CreateReviewResultInfo expected.");
        }

        private global::StarWarsGeneratedClient.ICreateReview_CreateReview MapNonNullableICreateReview_CreateReview(global::StarWarsGeneratedClient.State.CreateReviewPayloadData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            ICreateReview_CreateReview returnValue = default !;
            if (data.__typename.Equals("CreateReviewPayload", global::System.StringComparison.Ordinal))
            {
                returnValue = new CreateReview_CreateReview_CreateReviewPayload(MapNonNullableICreateReview_CreateReview_Review(data.Review ?? throw new global::System.ArgumentNullException(), snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::StarWarsGeneratedClient.ICreateReview_CreateReview_Review MapNonNullableICreateReview_CreateReview_Review(global::StrawberryShake.EntityId entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId.Name.Equals("Review", global::System.StringComparison.Ordinal))
            {
                return _createReview_CreateReview_Review_ReviewFromReviewEntityMapper.Map(snapshot.GetEntity<global::StarWarsGeneratedClient.State.ReviewEntity>(entityId) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }

        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)
        {
            return Create(dataInfo, snapshot);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class CreateReviewResultInfo : global::StrawberryShake.IOperationResultDataInfo
    {
        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;
        private readonly global::System.UInt64 _version;
        public CreateReviewResultInfo(global::StarWarsGeneratedClient.State.CreateReviewPayloadData createReview, global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds, global::System.UInt64 version)
        {
            CreateReview = createReview;
            _entityIds = entityIds ?? throw new global::System.ArgumentNullException(nameof(entityIds));
            _version = version;
        }

        /// <summary>
        /// Creates a review for a given Star Wars episode.
        /// </summary>
        public global::StarWarsGeneratedClient.State.CreateReviewPayloadData CreateReview { get; }

        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;
        public global::System.UInt64 Version => _version;
        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)
        {
            return new CreateReviewResultInfo(CreateReview, _entityIds, version);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class CreateReview_CreateReview_Review_ReviewFromReviewEntityMapper : global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.ReviewEntity, CreateReview_CreateReview_Review_Review>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public CreateReview_CreateReview_Review_ReviewFromReviewEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public CreateReview_CreateReview_Review_Review Map(global::StarWarsGeneratedClient.State.ReviewEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new CreateReview_CreateReview_Review_Review(entity.Commentary, entity.Stars);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersByIdsResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.GetCharactersByIdsResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, GetCharactersByIds_CharactersByIds_Human> _getCharactersByIds_CharactersByIds_HumanFromHumanEntityMapper;
        private readonly global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, GetCharactersByIds_CharactersByIds_Droid> _getCharactersByIds_CharactersByIds_DroidFromDroidEntityMapper;
        public GetCharactersByIdsResultFactory(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, GetCharactersByIds_CharactersByIds_Human> getCharactersByIds_CharactersByIds_HumanFromHumanEntityMapper, global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, GetCharactersByIds_CharactersByIds_Droid> getCharactersByIds_CharactersByIds_DroidFromDroidEntityMapper)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _getCharactersByIds_CharactersByIds_HumanFromHumanEntityMapper = getCharactersByIds_CharactersByIds_HumanFromHumanEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getCharactersByIds_CharactersByIds_HumanFromHumanEntityMapper));
            _getCharactersByIds_CharactersByIds_DroidFromDroidEntityMapper = getCharactersByIds_CharactersByIds_DroidFromDroidEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getCharactersByIds_CharactersByIds_DroidFromDroidEntityMapper));
        }

        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::StarWarsGeneratedClient.IGetCharactersByIdsResult);
        public GetCharactersByIdsResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            if (dataInfo is GetCharactersByIdsResultInfo info)
            {
                return new GetCharactersByIdsResult(MapNonNullableIGetCharactersByIds_CharactersByIdsNonNullableArray(info.CharactersByIds, snapshot));
            }

            throw new global::System.ArgumentException("GetCharactersByIdsResultInfo expected.");
        }

        private global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.IGetCharactersByIds_CharactersByIds> MapNonNullableIGetCharactersByIds_CharactersByIdsNonNullableArray(global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (list is null)
            {
                throw new global::System.ArgumentNullException();
            }

            var characters = new global::System.Collections.Generic.List<global::StarWarsGeneratedClient.IGetCharactersByIds_CharactersByIds>();
            foreach (global::StrawberryShake.EntityId child in list)
            {
                characters.Add(MapNonNullableIGetCharactersByIds_CharactersByIds(child, snapshot));
            }

            return characters;
        }

        private global::StarWarsGeneratedClient.IGetCharactersByIds_CharactersByIds MapNonNullableIGetCharactersByIds_CharactersByIds(global::StrawberryShake.EntityId entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId.Name.Equals("Human", global::System.StringComparison.Ordinal))
            {
                return _getCharactersByIds_CharactersByIds_HumanFromHumanEntityMapper.Map(snapshot.GetEntity<global::StarWarsGeneratedClient.State.HumanEntity>(entityId) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            if (entityId.Name.Equals("Droid", global::System.StringComparison.Ordinal))
            {
                return _getCharactersByIds_CharactersByIds_DroidFromDroidEntityMapper.Map(snapshot.GetEntity<global::StarWarsGeneratedClient.State.DroidEntity>(entityId) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }

        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)
        {
            return Create(dataInfo, snapshot);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersByIdsResultInfo : global::StrawberryShake.IOperationResultDataInfo
    {
        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;
        private readonly global::System.UInt64 _version;
        public GetCharactersByIdsResultInfo(global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId> charactersByIds, global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds, global::System.UInt64 version)
        {
            CharactersByIds = charactersByIds;
            _entityIds = entityIds ?? throw new global::System.ArgumentNullException(nameof(entityIds));
            _version = version;
        }

        /// <summary>
        /// Gets characters by it`s id.
        /// 
        /// 
        /// **Returns:**
        /// The characters.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId> CharactersByIds { get; }

        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;
        public global::System.UInt64 Version => _version;
        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)
        {
            return new GetCharactersByIdsResultInfo(CharactersByIds, _entityIds, version);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersByIds_CharactersByIds_HumanFromHumanEntityMapper : global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, GetCharactersByIds_CharactersByIds_Human>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public GetCharactersByIds_CharactersByIds_HumanFromHumanEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public GetCharactersByIds_CharactersByIds_Human Map(global::StarWarsGeneratedClient.State.HumanEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new GetCharactersByIds_CharactersByIds_Human(entity.Id, entity.Name, entity.Height, entity.AppearsIn);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersByIds_CharactersByIds_DroidFromDroidEntityMapper : global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, GetCharactersByIds_CharactersByIds_Droid>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public GetCharactersByIds_CharactersByIds_DroidFromDroidEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public GetCharactersByIds_CharactersByIds_Droid Map(global::StarWarsGeneratedClient.State.DroidEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new GetCharactersByIds_CharactersByIds_Droid(entity.Id, entity.Name, entity.Height, entity.AppearsIn);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetAllCharactersResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.GetAllCharactersResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, GetAllCharacters_Characters_Human> _getAllCharacters_Characters_HumanFromHumanEntityMapper;
        private readonly global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, GetAllCharacters_Characters_Droid> _getAllCharacters_Characters_DroidFromDroidEntityMapper;
        public GetAllCharactersResultFactory(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, GetAllCharacters_Characters_Human> getAllCharacters_Characters_HumanFromHumanEntityMapper, global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, GetAllCharacters_Characters_Droid> getAllCharacters_Characters_DroidFromDroidEntityMapper)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _getAllCharacters_Characters_HumanFromHumanEntityMapper = getAllCharacters_Characters_HumanFromHumanEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getAllCharacters_Characters_HumanFromHumanEntityMapper));
            _getAllCharacters_Characters_DroidFromDroidEntityMapper = getAllCharacters_Characters_DroidFromDroidEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getAllCharacters_Characters_DroidFromDroidEntityMapper));
        }

        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::StarWarsGeneratedClient.IGetAllCharactersResult);
        public GetAllCharactersResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            if (dataInfo is GetAllCharactersResultInfo info)
            {
                return new GetAllCharactersResult(MapNonNullableIGetAllCharacters_CharactersNonNullableArray(info.Characters, snapshot));
            }

            throw new global::System.ArgumentException("GetAllCharactersResultInfo expected.");
        }

        private global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.IGetAllCharacters_Characters> MapNonNullableIGetAllCharacters_CharactersNonNullableArray(global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (list is null)
            {
                throw new global::System.ArgumentNullException();
            }

            var characters = new global::System.Collections.Generic.List<global::StarWarsGeneratedClient.IGetAllCharacters_Characters>();
            foreach (global::StrawberryShake.EntityId child in list)
            {
                characters.Add(MapNonNullableIGetAllCharacters_Characters(child, snapshot));
            }

            return characters;
        }

        private global::StarWarsGeneratedClient.IGetAllCharacters_Characters MapNonNullableIGetAllCharacters_Characters(global::StrawberryShake.EntityId entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId.Name.Equals("Human", global::System.StringComparison.Ordinal))
            {
                return _getAllCharacters_Characters_HumanFromHumanEntityMapper.Map(snapshot.GetEntity<global::StarWarsGeneratedClient.State.HumanEntity>(entityId) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            if (entityId.Name.Equals("Droid", global::System.StringComparison.Ordinal))
            {
                return _getAllCharacters_Characters_DroidFromDroidEntityMapper.Map(snapshot.GetEntity<global::StarWarsGeneratedClient.State.DroidEntity>(entityId) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }

        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)
        {
            return Create(dataInfo, snapshot);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetAllCharactersResultInfo : global::StrawberryShake.IOperationResultDataInfo
    {
        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;
        private readonly global::System.UInt64 _version;
        public GetAllCharactersResultInfo(global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId> characters, global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds, global::System.UInt64 version)
        {
            Characters = characters;
            _entityIds = entityIds ?? throw new global::System.ArgumentNullException(nameof(entityIds));
            _version = version;
        }

        /// <summary>
        /// Gets all character.
        /// 
        /// 
        /// **Returns:**
        /// The character.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId> Characters { get; }

        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;
        public global::System.UInt64 Version => _version;
        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)
        {
            return new GetAllCharactersResultInfo(Characters, _entityIds, version);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetAllCharacters_Characters_HumanFromHumanEntityMapper : global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, GetAllCharacters_Characters_Human>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public GetAllCharacters_Characters_HumanFromHumanEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public GetAllCharacters_Characters_Human Map(global::StarWarsGeneratedClient.State.HumanEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new GetAllCharacters_Characters_Human(entity.Id, entity.Name, entity.Height, entity.AppearsIn);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetAllCharacters_Characters_DroidFromDroidEntityMapper : global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, GetAllCharacters_Characters_Droid>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public GetAllCharacters_Characters_DroidFromDroidEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public GetAllCharacters_Characters_Droid Map(global::StarWarsGeneratedClient.State.DroidEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new GetAllCharacters_Characters_Droid(entity.Id, entity.Name, entity.Height, entity.AppearsIn);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersWithCursorPagingResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.GetCharactersWithCursorPagingResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_Human> _getCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_HumanFromHumanEntityMapper;
        private readonly global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_Droid> _getCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_DroidFromDroidEntityMapper;
        public GetCharactersWithCursorPagingResultFactory(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_Human> getCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_HumanFromHumanEntityMapper, global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_Droid> getCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_DroidFromDroidEntityMapper)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _getCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_HumanFromHumanEntityMapper = getCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_HumanFromHumanEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_HumanFromHumanEntityMapper));
            _getCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_DroidFromDroidEntityMapper = getCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_DroidFromDroidEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_DroidFromDroidEntityMapper));
        }

        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::StarWarsGeneratedClient.IGetCharactersWithCursorPagingResult);
        public GetCharactersWithCursorPagingResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            if (dataInfo is GetCharactersWithCursorPagingResultInfo info)
            {
                return new GetCharactersWithCursorPagingResult(MapIGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting(info.CharactersWithCursorPagingFilteringAndSorting, snapshot));
            }

            throw new global::System.ArgumentException("GetCharactersWithCursorPagingResultInfo expected.");
        }

        private global::StarWarsGeneratedClient.IGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting? MapIGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting(global::StarWarsGeneratedClient.State.CharactersWithCursorPagingFilteringAndSortingConnectionData? data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (data is null)
            {
                return null;
            }

            IGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting returnValue = default !;
            if (data?.__typename.Equals("CharactersWithCursorPagingFilteringAndSortingConnection", global::System.StringComparison.Ordinal) ?? false)
            {
                returnValue = new GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_CharactersWithCursorPagingFilteringAndSortingConnection(MapIGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_NodesArray(data.Nodes, snapshot), data.TotalCount ?? throw new global::System.ArgumentNullException(), MapNonNullableIGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_PageInfo(data.PageInfo ?? throw new global::System.ArgumentNullException(), snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.IGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes?>? MapIGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_NodesArray(global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId?>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (list is null)
            {
                return null;
            }

            var characters = new global::System.Collections.Generic.List<global::StarWarsGeneratedClient.IGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes?>();
            foreach (global::StrawberryShake.EntityId? child in list)
            {
                characters.Add(MapIGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes(child, snapshot));
            }

            return characters;
        }

        private global::StarWarsGeneratedClient.IGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes? MapIGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes(global::StrawberryShake.EntityId? entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId is null)
            {
                return null;
            }

            if (entityId.Value.Name.Equals("Human", global::System.StringComparison.Ordinal))
            {
                return _getCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_HumanFromHumanEntityMapper.Map(snapshot.GetEntity<global::StarWarsGeneratedClient.State.HumanEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            if (entityId.Value.Name.Equals("Droid", global::System.StringComparison.Ordinal))
            {
                return _getCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_DroidFromDroidEntityMapper.Map(snapshot.GetEntity<global::StarWarsGeneratedClient.State.DroidEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }

        private global::StarWarsGeneratedClient.IGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_PageInfo MapNonNullableIGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_PageInfo(global::StarWarsGeneratedClient.State.PageInfoData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_PageInfo returnValue = default !;
            if (data.__typename.Equals("PageInfo", global::System.StringComparison.Ordinal))
            {
                returnValue = new GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_PageInfo_PageInfo(data.EndCursor, data.StartCursor, data.HasNextPage ?? throw new global::System.ArgumentNullException(), data.HasPreviousPage ?? throw new global::System.ArgumentNullException());
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)
        {
            return Create(dataInfo, snapshot);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersWithCursorPagingResultInfo : global::StrawberryShake.IOperationResultDataInfo
    {
        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;
        private readonly global::System.UInt64 _version;
        public GetCharactersWithCursorPagingResultInfo(global::StarWarsGeneratedClient.State.CharactersWithCursorPagingFilteringAndSortingConnectionData? charactersWithCursorPagingFilteringAndSorting, global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds, global::System.UInt64 version)
        {
            CharactersWithCursorPagingFilteringAndSorting = charactersWithCursorPagingFilteringAndSorting;
            _entityIds = entityIds ?? throw new global::System.ArgumentNullException(nameof(entityIds));
            _version = version;
        }

        /// <summary>
        /// Gets all character.
        /// 
        /// 
        /// **Returns:**
        /// The character.
        /// </summary>
        public global::StarWarsGeneratedClient.State.CharactersWithCursorPagingFilteringAndSortingConnectionData? CharactersWithCursorPagingFilteringAndSorting { get; }

        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;
        public global::System.UInt64 Version => _version;
        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)
        {
            return new GetCharactersWithCursorPagingResultInfo(CharactersWithCursorPagingFilteringAndSorting, _entityIds, version);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_HumanFromHumanEntityMapper : global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_Human>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_HumanFromHumanEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_Human Map(global::StarWarsGeneratedClient.State.HumanEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_Human(entity.Id, entity.Name, entity.Height, entity.AppearsIn);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_DroidFromDroidEntityMapper : global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_Droid>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_DroidFromDroidEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_Droid Map(global::StarWarsGeneratedClient.State.DroidEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new GetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_Nodes_Droid(entity.Id, entity.Name, entity.Height, entity.AppearsIn);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersWithPagingResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.GetCharactersWithPagingResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_Human> _getCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_HumanFromHumanEntityMapper;
        private readonly global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_Droid> _getCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_DroidFromDroidEntityMapper;
        public GetCharactersWithPagingResultFactory(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_Human> getCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_HumanFromHumanEntityMapper, global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_Droid> getCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_DroidFromDroidEntityMapper)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _getCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_HumanFromHumanEntityMapper = getCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_HumanFromHumanEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_HumanFromHumanEntityMapper));
            _getCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_DroidFromDroidEntityMapper = getCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_DroidFromDroidEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_DroidFromDroidEntityMapper));
        }

        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::StarWarsGeneratedClient.IGetCharactersWithPagingResult);
        public GetCharactersWithPagingResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            if (dataInfo is GetCharactersWithPagingResultInfo info)
            {
                return new GetCharactersWithPagingResult(MapIGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting(info.CharactersWithPagingFilteringAndSorting, snapshot));
            }

            throw new global::System.ArgumentException("GetCharactersWithPagingResultInfo expected.");
        }

        private global::StarWarsGeneratedClient.IGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting? MapIGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting(global::StarWarsGeneratedClient.State.CharacterCollectionSegmentData? data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (data is null)
            {
                return null;
            }

            IGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting returnValue = default !;
            if (data?.__typename.Equals("CharacterCollectionSegment", global::System.StringComparison.Ordinal) ?? false)
            {
                returnValue = new GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_CharacterCollectionSegment(MapIGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_ItemsArray(data.Items, snapshot), data.TotalCount ?? throw new global::System.ArgumentNullException(), MapNonNullableIGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_PageInfo(data.PageInfo ?? throw new global::System.ArgumentNullException(), snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.IGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items?>? MapIGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_ItemsArray(global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId?>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (list is null)
            {
                return null;
            }

            var characters = new global::System.Collections.Generic.List<global::StarWarsGeneratedClient.IGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items?>();
            foreach (global::StrawberryShake.EntityId? child in list)
            {
                characters.Add(MapIGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items(child, snapshot));
            }

            return characters;
        }

        private global::StarWarsGeneratedClient.IGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items? MapIGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items(global::StrawberryShake.EntityId? entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId is null)
            {
                return null;
            }

            if (entityId.Value.Name.Equals("Human", global::System.StringComparison.Ordinal))
            {
                return _getCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_HumanFromHumanEntityMapper.Map(snapshot.GetEntity<global::StarWarsGeneratedClient.State.HumanEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            if (entityId.Value.Name.Equals("Droid", global::System.StringComparison.Ordinal))
            {
                return _getCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_DroidFromDroidEntityMapper.Map(snapshot.GetEntity<global::StarWarsGeneratedClient.State.DroidEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }

        private global::StarWarsGeneratedClient.IGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_PageInfo MapNonNullableIGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_PageInfo(global::StarWarsGeneratedClient.State.CollectionSegmentInfoData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_PageInfo returnValue = default !;
            if (data.__typename.Equals("CollectionSegmentInfo", global::System.StringComparison.Ordinal))
            {
                returnValue = new GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_PageInfo_CollectionSegmentInfo(data.HasNextPage ?? throw new global::System.ArgumentNullException(), data.HasPreviousPage ?? throw new global::System.ArgumentNullException());
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)
        {
            return Create(dataInfo, snapshot);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersWithPagingResultInfo : global::StrawberryShake.IOperationResultDataInfo
    {
        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;
        private readonly global::System.UInt64 _version;
        public GetCharactersWithPagingResultInfo(global::StarWarsGeneratedClient.State.CharacterCollectionSegmentData? charactersWithPagingFilteringAndSorting, global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds, global::System.UInt64 version)
        {
            CharactersWithPagingFilteringAndSorting = charactersWithPagingFilteringAndSorting;
            _entityIds = entityIds ?? throw new global::System.ArgumentNullException(nameof(entityIds));
            _version = version;
        }

        /// <summary>
        /// Gets all character.
        /// 
        /// 
        /// **Returns:**
        /// The character.
        /// </summary>
        public global::StarWarsGeneratedClient.State.CharacterCollectionSegmentData? CharactersWithPagingFilteringAndSorting { get; }

        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;
        public global::System.UInt64 Version => _version;
        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)
        {
            return new GetCharactersWithPagingResultInfo(CharactersWithPagingFilteringAndSorting, _entityIds, version);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_HumanFromHumanEntityMapper : global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_Human>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_HumanFromHumanEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_Human Map(global::StarWarsGeneratedClient.State.HumanEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_Human(entity.Id, entity.Name, entity.Height, entity.AppearsIn);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_DroidFromDroidEntityMapper : global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_Droid>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_DroidFromDroidEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_Droid Map(global::StarWarsGeneratedClient.State.DroidEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new GetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_Items_Droid(entity.Id, entity.Name, entity.Height, entity.AppearsIn);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetAllHumansAndDroidsResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.GetAllHumansAndDroidsResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, GetAllHumansAndDroids_Characters_Human> _getAllHumansAndDroids_Characters_HumanFromHumanEntityMapper;
        private readonly global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, GetAllHumansAndDroids_Characters_Droid> _getAllHumansAndDroids_Characters_DroidFromDroidEntityMapper;
        public GetAllHumansAndDroidsResultFactory(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, GetAllHumansAndDroids_Characters_Human> getAllHumansAndDroids_Characters_HumanFromHumanEntityMapper, global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, GetAllHumansAndDroids_Characters_Droid> getAllHumansAndDroids_Characters_DroidFromDroidEntityMapper)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _getAllHumansAndDroids_Characters_HumanFromHumanEntityMapper = getAllHumansAndDroids_Characters_HumanFromHumanEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getAllHumansAndDroids_Characters_HumanFromHumanEntityMapper));
            _getAllHumansAndDroids_Characters_DroidFromDroidEntityMapper = getAllHumansAndDroids_Characters_DroidFromDroidEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getAllHumansAndDroids_Characters_DroidFromDroidEntityMapper));
        }

        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::StarWarsGeneratedClient.IGetAllHumansAndDroidsResult);
        public GetAllHumansAndDroidsResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            if (dataInfo is GetAllHumansAndDroidsResultInfo info)
            {
                return new GetAllHumansAndDroidsResult(MapNonNullableIGetAllHumansAndDroids_CharactersNonNullableArray(info.Characters, snapshot));
            }

            throw new global::System.ArgumentException("GetAllHumansAndDroidsResultInfo expected.");
        }

        private global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.IGetAllHumansAndDroids_Characters> MapNonNullableIGetAllHumansAndDroids_CharactersNonNullableArray(global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (list is null)
            {
                throw new global::System.ArgumentNullException();
            }

            var characters = new global::System.Collections.Generic.List<global::StarWarsGeneratedClient.IGetAllHumansAndDroids_Characters>();
            foreach (global::StrawberryShake.EntityId child in list)
            {
                characters.Add(MapNonNullableIGetAllHumansAndDroids_Characters(child, snapshot));
            }

            return characters;
        }

        private global::StarWarsGeneratedClient.IGetAllHumansAndDroids_Characters MapNonNullableIGetAllHumansAndDroids_Characters(global::StrawberryShake.EntityId entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId.Name.Equals("Human", global::System.StringComparison.Ordinal))
            {
                return _getAllHumansAndDroids_Characters_HumanFromHumanEntityMapper.Map(snapshot.GetEntity<global::StarWarsGeneratedClient.State.HumanEntity>(entityId) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            if (entityId.Name.Equals("Droid", global::System.StringComparison.Ordinal))
            {
                return _getAllHumansAndDroids_Characters_DroidFromDroidEntityMapper.Map(snapshot.GetEntity<global::StarWarsGeneratedClient.State.DroidEntity>(entityId) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }

        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)
        {
            return Create(dataInfo, snapshot);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetAllHumansAndDroidsResultInfo : global::StrawberryShake.IOperationResultDataInfo
    {
        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;
        private readonly global::System.UInt64 _version;
        public GetAllHumansAndDroidsResultInfo(global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId> characters, global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds, global::System.UInt64 version)
        {
            Characters = characters;
            _entityIds = entityIds ?? throw new global::System.ArgumentNullException(nameof(entityIds));
            _version = version;
        }

        /// <summary>
        /// Gets all character.
        /// 
        /// 
        /// **Returns:**
        /// The character.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId> Characters { get; }

        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;
        public global::System.UInt64 Version => _version;
        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)
        {
            return new GetAllHumansAndDroidsResultInfo(Characters, _entityIds, version);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetAllHumansAndDroids_Characters_HumanFromHumanEntityMapper : global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, GetAllHumansAndDroids_Characters_Human>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public GetAllHumansAndDroids_Characters_HumanFromHumanEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public GetAllHumansAndDroids_Characters_Human Map(global::StarWarsGeneratedClient.State.HumanEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new GetAllHumansAndDroids_Characters_Human(entity.Id, entity.Name, entity.AppearsIn);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetAllHumansAndDroids_Characters_DroidFromDroidEntityMapper : global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, GetAllHumansAndDroids_Characters_Droid>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public GetAllHumansAndDroids_Characters_DroidFromDroidEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public GetAllHumansAndDroids_Characters_Droid Map(global::StarWarsGeneratedClient.State.DroidEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new GetAllHumansAndDroids_Characters_Droid(entity.Id, entity.Name, entity.AppearsIn, entity.PrimaryFunction);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    internal interface ICreateReviewInputInfo
    {
        global::System.Boolean IsEpisodeSet { get; }

        global::System.Boolean IsStarsSet { get; }

        global::System.Boolean IsCommentarySet { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    internal interface IICharacterFilterInputInfo
    {
        global::System.Boolean IsAndSet { get; }

        global::System.Boolean IsOrSet { get; }

        global::System.Boolean IsIdSet { get; }

        global::System.Boolean IsNameSet { get; }

        global::System.Boolean IsFriendsSet { get; }

        global::System.Boolean IsAppearsInSet { get; }

        global::System.Boolean IsHeightSet { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    internal interface IComparableInt32OperationFilterInputInfo
    {
        global::System.Boolean IsEqSet { get; }

        global::System.Boolean IsNeqSet { get; }

        global::System.Boolean IsInSet { get; }

        global::System.Boolean IsNinSet { get; }

        global::System.Boolean IsGtSet { get; }

        global::System.Boolean IsNgtSet { get; }

        global::System.Boolean IsGteSet { get; }

        global::System.Boolean IsNgteSet { get; }

        global::System.Boolean IsLtSet { get; }

        global::System.Boolean IsNltSet { get; }

        global::System.Boolean IsLteSet { get; }

        global::System.Boolean IsNlteSet { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    internal interface IStringOperationFilterInputInfo
    {
        global::System.Boolean IsAndSet { get; }

        global::System.Boolean IsOrSet { get; }

        global::System.Boolean IsEqSet { get; }

        global::System.Boolean IsNeqSet { get; }

        global::System.Boolean IsContainsSet { get; }

        global::System.Boolean IsNcontainsSet { get; }

        global::System.Boolean IsInSet { get; }

        global::System.Boolean IsNinSet { get; }

        global::System.Boolean IsStartsWithSet { get; }

        global::System.Boolean IsNstartsWithSet { get; }

        global::System.Boolean IsEndsWithSet { get; }

        global::System.Boolean IsNendsWithSet { get; }

        global::System.Boolean IsContainsIgnoreCaseSet { get; }

        global::System.Boolean IsEqualsIgnoreCaseSet { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    internal interface IListComparableInt32OperationFilterInputInfo
    {
        global::System.Boolean IsAllSet { get; }

        global::System.Boolean IsNoneSet { get; }

        global::System.Boolean IsSomeSet { get; }

        global::System.Boolean IsAnySet { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    internal interface IListEpisodeOperationFilterInputInfo
    {
        global::System.Boolean IsAllSet { get; }

        global::System.Boolean IsNoneSet { get; }

        global::System.Boolean IsSomeSet { get; }

        global::System.Boolean IsAnySet { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    internal interface IEpisodeOperationFilterInputInfo
    {
        global::System.Boolean IsEqSet { get; }

        global::System.Boolean IsNeqSet { get; }

        global::System.Boolean IsInSet { get; }

        global::System.Boolean IsNinSet { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    internal interface IComparableDoubleOperationFilterInputInfo
    {
        global::System.Boolean IsEqSet { get; }

        global::System.Boolean IsNeqSet { get; }

        global::System.Boolean IsInSet { get; }

        global::System.Boolean IsNinSet { get; }

        global::System.Boolean IsGtSet { get; }

        global::System.Boolean IsNgtSet { get; }

        global::System.Boolean IsGteSet { get; }

        global::System.Boolean IsNgteSet { get; }

        global::System.Boolean IsLtSet { get; }

        global::System.Boolean IsNltSet { get; }

        global::System.Boolean IsLteSet { get; }

        global::System.Boolean IsNlteSet { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    internal interface IICharacterSortInputInfo
    {
        global::System.Boolean IsIdSet { get; }

        global::System.Boolean IsNameSet { get; }

        global::System.Boolean IsHeightSet { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetHeroBuilder : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.IGetHeroResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityIdSerializer _idSerializer;
        private readonly global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.IGetHeroResult> _resultDataFactory;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::StarWarsGeneratedClient.Episode> _episodeParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Int32, global::System.Int32> _intParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;
        public GetHeroBuilder(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer idSerializer, global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.IGetHeroResult> resultDataFactory, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _idSerializer = idSerializer ?? throw new global::System.ArgumentNullException(nameof(idSerializer));
            _resultDataFactory = resultDataFactory ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));
            _episodeParser = serializerResolver.GetLeafValueParser<global::System.String, global::StarWarsGeneratedClient.Episode>("Episode") ?? throw new global::System.ArgumentException("No serializer for type `Episode` found.");
            _intParser = serializerResolver.GetLeafValueParser<global::System.Int32, global::System.Int32>("Int") ?? throw new global::System.ArgumentException("No serializer for type `Int` found.");
            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("String") ?? throw new global::System.ArgumentException("No serializer for type `String` found.");
        }

        public global::StrawberryShake.IOperationResult<IGetHeroResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)
        {
            (IGetHeroResult Result, GetHeroResultInfo Info)? data = null;
            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.IClientError>? errors = null;
            if (response.Exception is null)
            {
                try
                {
                    if (response.Body != null)
                    {
                        if (response.Body.RootElement.TryGetProperty("data", out global::System.Text.Json.JsonElement dataElement) && dataElement.ValueKind == global::System.Text.Json.JsonValueKind.Object)
                        {
                            data = BuildData(dataElement);
                        }

                        if (response.Body.RootElement.TryGetProperty("errors", out global::System.Text.Json.JsonElement errorsElement))
                        {
                            errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);
                        }
                    }
                }
                catch (global::System.Exception ex)
                {
                    errors = new global::StrawberryShake.IClientError[]{new global::StrawberryShake.ClientError(ex.Message, exception: ex, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>{{"body", response.Body?.RootElement.ToString()}})};
                }
            }
            else
            {
                errors = new global::StrawberryShake.IClientError[]{new global::StrawberryShake.ClientError(response.Exception.Message, exception: response.Exception, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>{{"body", response.Body?.RootElement.ToString()}})};
            }

            return new global::StrawberryShake.OperationResult<IGetHeroResult>(data?.Result, data?.Info, _resultDataFactory, errors);
        }

        private (IGetHeroResult, GetHeroResultInfo) BuildData(global::System.Text.Json.JsonElement obj)
        {
            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();
            global::StrawberryShake.IEntityStoreSnapshot snapshot = default !;
            global::StrawberryShake.EntityId heroId = default !;
            _entityStore.Update(session =>
            {
                heroId = UpdateNonNullableIGetHero_HeroEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "hero"), entityIds);
                snapshot = session.CurrentSnapshot;
            });
            var resultInfo = new GetHeroResultInfo(heroId, entityIds, snapshot.Version);
            return (_resultDataFactory.Create(resultInfo), resultInfo);
        }

        private global::StrawberryShake.EntityId UpdateNonNullableIGetHero_HeroEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);
            entityIds.Add(entityId);
            if (entityId.Name.Equals("Human", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::StarWarsGeneratedClient.State.HumanEntity? entity))
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.HumanEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), DeserializeIGetHero_Hero_Friends(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "friends"), entityIds), entity.Height, entity.AppearsIn));
                }
                else
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.HumanEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), DeserializeIGetHero_Hero_Friends(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "friends"), entityIds), default !, default !));
                }

                return entityId;
            }

            if (entityId.Name.Equals("Droid", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::StarWarsGeneratedClient.State.DroidEntity? entity))
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.DroidEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), DeserializeIGetHero_Hero_Friends(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "friends"), entityIds), entity.Height, entity.AppearsIn, entity.PrimaryFunction));
                }
                else
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.DroidEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), DeserializeIGetHero_Hero_Friends(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "friends"), entityIds), default !, default !, default !));
                }

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Int32 DeserializeNonNullableInt32(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _intParser.Parse(obj.Value.GetInt32()!);
        }

        private global::System.String DeserializeNonNullableString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _stringParser.Parse(obj.Value.GetString()!);
        }

        private global::StarWarsGeneratedClient.State.FriendsConnectionData? DeserializeIGetHero_Hero_Friends(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("FriendsConnection", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::StarWarsGeneratedClient.State.FriendsConnectionData(typename, edges: DeserializeIGetHero_Hero_Friends_EdgesNonNullableArray(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "edges"), entityIds));
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.State.FriendsEdgeData>? DeserializeIGetHero_Hero_Friends_EdgesNonNullableArray(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            var friendsEdges = new global::System.Collections.Generic.List<global::StarWarsGeneratedClient.State.FriendsEdgeData>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                friendsEdges.Add(DeserializeNonNullableIGetHero_Hero_Friends_Edges(session, child, entityIds));
            }

            return friendsEdges;
        }

        private global::StarWarsGeneratedClient.State.FriendsEdgeData DeserializeNonNullableIGetHero_Hero_Friends_Edges(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("FriendsEdge", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::StarWarsGeneratedClient.State.FriendsEdgeData(typename, node: UpdateIGetHero_Hero_Friends_Edges_NodeEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "node"), entityIds));
            }

            throw new global::System.NotSupportedException();
        }

        private global::StrawberryShake.EntityId? UpdateIGetHero_Hero_Friends_Edges_NodeEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);
            entityIds.Add(entityId);
            if (entityId.Name.Equals("Human", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::StarWarsGeneratedClient.State.HumanEntity? entity))
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.HumanEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), entity.Friends, entity.Height, entity.AppearsIn));
                }
                else
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.HumanEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), default !, default !, default !));
                }

                return entityId;
            }

            if (entityId.Name.Equals("Droid", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::StarWarsGeneratedClient.State.DroidEntity? entity))
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.DroidEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), entity.Friends, entity.Height, entity.AppearsIn, entity.PrimaryFunction));
                }
                else
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.DroidEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), default !, default !, default !, default !));
                }

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class CreateReviewBuilder : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.ICreateReviewResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityIdSerializer _idSerializer;
        private readonly global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.ICreateReviewResult> _resultDataFactory;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::StarWarsGeneratedClient.Episode> _episodeParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Int32, global::System.Int32> _intParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;
        public CreateReviewBuilder(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer idSerializer, global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.ICreateReviewResult> resultDataFactory, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _idSerializer = idSerializer ?? throw new global::System.ArgumentNullException(nameof(idSerializer));
            _resultDataFactory = resultDataFactory ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));
            _episodeParser = serializerResolver.GetLeafValueParser<global::System.String, global::StarWarsGeneratedClient.Episode>("Episode") ?? throw new global::System.ArgumentException("No serializer for type `Episode` found.");
            _intParser = serializerResolver.GetLeafValueParser<global::System.Int32, global::System.Int32>("Int") ?? throw new global::System.ArgumentException("No serializer for type `Int` found.");
            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("String") ?? throw new global::System.ArgumentException("No serializer for type `String` found.");
        }

        public global::StrawberryShake.IOperationResult<ICreateReviewResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)
        {
            (ICreateReviewResult Result, CreateReviewResultInfo Info)? data = null;
            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.IClientError>? errors = null;
            if (response.Exception is null)
            {
                try
                {
                    if (response.Body != null)
                    {
                        if (response.Body.RootElement.TryGetProperty("data", out global::System.Text.Json.JsonElement dataElement) && dataElement.ValueKind == global::System.Text.Json.JsonValueKind.Object)
                        {
                            data = BuildData(dataElement);
                        }

                        if (response.Body.RootElement.TryGetProperty("errors", out global::System.Text.Json.JsonElement errorsElement))
                        {
                            errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);
                        }
                    }
                }
                catch (global::System.Exception ex)
                {
                    errors = new global::StrawberryShake.IClientError[]{new global::StrawberryShake.ClientError(ex.Message, exception: ex, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>{{"body", response.Body?.RootElement.ToString()}})};
                }
            }
            else
            {
                errors = new global::StrawberryShake.IClientError[]{new global::StrawberryShake.ClientError(response.Exception.Message, exception: response.Exception, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>{{"body", response.Body?.RootElement.ToString()}})};
            }

            return new global::StrawberryShake.OperationResult<ICreateReviewResult>(data?.Result, data?.Info, _resultDataFactory, errors);
        }

        private (ICreateReviewResult, CreateReviewResultInfo) BuildData(global::System.Text.Json.JsonElement obj)
        {
            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();
            global::StrawberryShake.IEntityStoreSnapshot snapshot = default !;
            global::StarWarsGeneratedClient.State.CreateReviewPayloadData createReviewId = default !;
            _entityStore.Update(session =>
            {
                createReviewId = DeserializeNonNullableICreateReview_CreateReview(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "createReview"), entityIds);
                snapshot = session.CurrentSnapshot;
            });
            var resultInfo = new CreateReviewResultInfo(createReviewId, entityIds, snapshot.Version);
            return (_resultDataFactory.Create(resultInfo), resultInfo);
        }

        private global::StarWarsGeneratedClient.State.CreateReviewPayloadData DeserializeNonNullableICreateReview_CreateReview(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("CreateReviewPayload", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::StarWarsGeneratedClient.State.CreateReviewPayloadData(typename, review: UpdateNonNullableICreateReview_CreateReview_ReviewEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "review"), entityIds));
            }

            throw new global::System.NotSupportedException();
        }

        private global::StrawberryShake.EntityId UpdateNonNullableICreateReview_CreateReview_ReviewEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);
            entityIds.Add(entityId);
            if (entityId.Name.Equals("Review", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::StarWarsGeneratedClient.State.ReviewEntity? entity))
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.ReviewEntity(DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "commentary")), DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "stars"))));
                }
                else
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.ReviewEntity(DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "commentary")), DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "stars"))));
                }

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.String DeserializeNonNullableString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _stringParser.Parse(obj.Value.GetString()!);
        }

        private global::System.Int32 DeserializeNonNullableInt32(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _intParser.Parse(obj.Value.GetInt32()!);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersByIdsBuilder : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.IGetCharactersByIdsResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityIdSerializer _idSerializer;
        private readonly global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.IGetCharactersByIdsResult> _resultDataFactory;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::StarWarsGeneratedClient.Episode> _episodeParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Int32, global::System.Int32> _intParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Double, global::System.Double> _floatParser;
        public GetCharactersByIdsBuilder(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer idSerializer, global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.IGetCharactersByIdsResult> resultDataFactory, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _idSerializer = idSerializer ?? throw new global::System.ArgumentNullException(nameof(idSerializer));
            _resultDataFactory = resultDataFactory ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));
            _episodeParser = serializerResolver.GetLeafValueParser<global::System.String, global::StarWarsGeneratedClient.Episode>("Episode") ?? throw new global::System.ArgumentException("No serializer for type `Episode` found.");
            _intParser = serializerResolver.GetLeafValueParser<global::System.Int32, global::System.Int32>("Int") ?? throw new global::System.ArgumentException("No serializer for type `Int` found.");
            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("String") ?? throw new global::System.ArgumentException("No serializer for type `String` found.");
            _floatParser = serializerResolver.GetLeafValueParser<global::System.Double, global::System.Double>("Float") ?? throw new global::System.ArgumentException("No serializer for type `Float` found.");
        }

        public global::StrawberryShake.IOperationResult<IGetCharactersByIdsResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)
        {
            (IGetCharactersByIdsResult Result, GetCharactersByIdsResultInfo Info)? data = null;
            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.IClientError>? errors = null;
            if (response.Exception is null)
            {
                try
                {
                    if (response.Body != null)
                    {
                        if (response.Body.RootElement.TryGetProperty("data", out global::System.Text.Json.JsonElement dataElement) && dataElement.ValueKind == global::System.Text.Json.JsonValueKind.Object)
                        {
                            data = BuildData(dataElement);
                        }

                        if (response.Body.RootElement.TryGetProperty("errors", out global::System.Text.Json.JsonElement errorsElement))
                        {
                            errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);
                        }
                    }
                }
                catch (global::System.Exception ex)
                {
                    errors = new global::StrawberryShake.IClientError[]{new global::StrawberryShake.ClientError(ex.Message, exception: ex, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>{{"body", response.Body?.RootElement.ToString()}})};
                }
            }
            else
            {
                errors = new global::StrawberryShake.IClientError[]{new global::StrawberryShake.ClientError(response.Exception.Message, exception: response.Exception, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>{{"body", response.Body?.RootElement.ToString()}})};
            }

            return new global::StrawberryShake.OperationResult<IGetCharactersByIdsResult>(data?.Result, data?.Info, _resultDataFactory, errors);
        }

        private (IGetCharactersByIdsResult, GetCharactersByIdsResultInfo) BuildData(global::System.Text.Json.JsonElement obj)
        {
            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();
            global::StrawberryShake.IEntityStoreSnapshot snapshot = default !;
            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId> charactersByIdsId = default !;
            _entityStore.Update(session =>
            {
                charactersByIdsId = UpdateNonNullableIGetCharactersByIds_CharactersByIdsEntityNonNullableArray(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "charactersByIds"), entityIds);
                snapshot = session.CurrentSnapshot;
            });
            var resultInfo = new GetCharactersByIdsResultInfo(charactersByIdsId, entityIds, snapshot.Version);
            return (_resultDataFactory.Create(resultInfo), resultInfo);
        }

        private global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId> UpdateNonNullableIGetCharactersByIds_CharactersByIdsEntityNonNullableArray(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var characters = new global::System.Collections.Generic.List<global::StrawberryShake.EntityId>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                characters.Add(UpdateNonNullableIGetCharactersByIds_CharactersByIdsEntity(session, child, entityIds));
            }

            return characters;
        }

        private global::StrawberryShake.EntityId UpdateNonNullableIGetCharactersByIds_CharactersByIdsEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);
            entityIds.Add(entityId);
            if (entityId.Name.Equals("Human", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::StarWarsGeneratedClient.State.HumanEntity? entity))
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.HumanEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), entity.Friends, DeserializeNonNullableDouble(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "height")), DeserializeNonNullableEpisodeNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "appearsIn"))));
                }
                else
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.HumanEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), default !, DeserializeNonNullableDouble(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "height")), DeserializeNonNullableEpisodeNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "appearsIn"))));
                }

                return entityId;
            }

            if (entityId.Name.Equals("Droid", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::StarWarsGeneratedClient.State.DroidEntity? entity))
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.DroidEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), entity.Friends, DeserializeNonNullableDouble(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "height")), DeserializeNonNullableEpisodeNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "appearsIn")), entity.PrimaryFunction));
                }
                else
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.DroidEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), default !, DeserializeNonNullableDouble(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "height")), DeserializeNonNullableEpisodeNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "appearsIn")), default !));
                }

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Int32 DeserializeNonNullableInt32(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _intParser.Parse(obj.Value.GetInt32()!);
        }

        private global::System.String DeserializeNonNullableString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _stringParser.Parse(obj.Value.GetString()!);
        }

        private global::System.Double DeserializeNonNullableDouble(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _floatParser.Parse(obj.Value.GetDouble()!);
        }

        private global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode> DeserializeNonNullableEpisodeNonNullableArray(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var episodes = new global::System.Collections.Generic.List<global::StarWarsGeneratedClient.Episode>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                episodes.Add(DeserializeNonNullableEpisode(child));
            }

            return episodes;
        }

        private global::StarWarsGeneratedClient.Episode DeserializeNonNullableEpisode(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _episodeParser.Parse(obj.Value.GetString()!);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetAllCharactersBuilder : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.IGetAllCharactersResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityIdSerializer _idSerializer;
        private readonly global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.IGetAllCharactersResult> _resultDataFactory;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::StarWarsGeneratedClient.Episode> _episodeParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Int32, global::System.Int32> _intParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Double, global::System.Double> _floatParser;
        public GetAllCharactersBuilder(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer idSerializer, global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.IGetAllCharactersResult> resultDataFactory, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _idSerializer = idSerializer ?? throw new global::System.ArgumentNullException(nameof(idSerializer));
            _resultDataFactory = resultDataFactory ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));
            _episodeParser = serializerResolver.GetLeafValueParser<global::System.String, global::StarWarsGeneratedClient.Episode>("Episode") ?? throw new global::System.ArgumentException("No serializer for type `Episode` found.");
            _intParser = serializerResolver.GetLeafValueParser<global::System.Int32, global::System.Int32>("Int") ?? throw new global::System.ArgumentException("No serializer for type `Int` found.");
            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("String") ?? throw new global::System.ArgumentException("No serializer for type `String` found.");
            _floatParser = serializerResolver.GetLeafValueParser<global::System.Double, global::System.Double>("Float") ?? throw new global::System.ArgumentException("No serializer for type `Float` found.");
        }

        public global::StrawberryShake.IOperationResult<IGetAllCharactersResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)
        {
            (IGetAllCharactersResult Result, GetAllCharactersResultInfo Info)? data = null;
            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.IClientError>? errors = null;
            if (response.Exception is null)
            {
                try
                {
                    if (response.Body != null)
                    {
                        if (response.Body.RootElement.TryGetProperty("data", out global::System.Text.Json.JsonElement dataElement) && dataElement.ValueKind == global::System.Text.Json.JsonValueKind.Object)
                        {
                            data = BuildData(dataElement);
                        }

                        if (response.Body.RootElement.TryGetProperty("errors", out global::System.Text.Json.JsonElement errorsElement))
                        {
                            errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);
                        }
                    }
                }
                catch (global::System.Exception ex)
                {
                    errors = new global::StrawberryShake.IClientError[]{new global::StrawberryShake.ClientError(ex.Message, exception: ex, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>{{"body", response.Body?.RootElement.ToString()}})};
                }
            }
            else
            {
                errors = new global::StrawberryShake.IClientError[]{new global::StrawberryShake.ClientError(response.Exception.Message, exception: response.Exception, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>{{"body", response.Body?.RootElement.ToString()}})};
            }

            return new global::StrawberryShake.OperationResult<IGetAllCharactersResult>(data?.Result, data?.Info, _resultDataFactory, errors);
        }

        private (IGetAllCharactersResult, GetAllCharactersResultInfo) BuildData(global::System.Text.Json.JsonElement obj)
        {
            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();
            global::StrawberryShake.IEntityStoreSnapshot snapshot = default !;
            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId> charactersId = default !;
            _entityStore.Update(session =>
            {
                charactersId = UpdateNonNullableIGetAllCharacters_CharactersEntityNonNullableArray(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "characters"), entityIds);
                snapshot = session.CurrentSnapshot;
            });
            var resultInfo = new GetAllCharactersResultInfo(charactersId, entityIds, snapshot.Version);
            return (_resultDataFactory.Create(resultInfo), resultInfo);
        }

        private global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId> UpdateNonNullableIGetAllCharacters_CharactersEntityNonNullableArray(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var characters = new global::System.Collections.Generic.List<global::StrawberryShake.EntityId>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                characters.Add(UpdateNonNullableIGetAllCharacters_CharactersEntity(session, child, entityIds));
            }

            return characters;
        }

        private global::StrawberryShake.EntityId UpdateNonNullableIGetAllCharacters_CharactersEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);
            entityIds.Add(entityId);
            if (entityId.Name.Equals("Human", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::StarWarsGeneratedClient.State.HumanEntity? entity))
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.HumanEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), entity.Friends, DeserializeNonNullableDouble(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "height")), DeserializeNonNullableEpisodeNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "appearsIn"))));
                }
                else
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.HumanEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), default !, DeserializeNonNullableDouble(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "height")), DeserializeNonNullableEpisodeNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "appearsIn"))));
                }

                return entityId;
            }

            if (entityId.Name.Equals("Droid", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::StarWarsGeneratedClient.State.DroidEntity? entity))
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.DroidEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), entity.Friends, DeserializeNonNullableDouble(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "height")), DeserializeNonNullableEpisodeNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "appearsIn")), entity.PrimaryFunction));
                }
                else
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.DroidEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), default !, DeserializeNonNullableDouble(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "height")), DeserializeNonNullableEpisodeNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "appearsIn")), default !));
                }

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Int32 DeserializeNonNullableInt32(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _intParser.Parse(obj.Value.GetInt32()!);
        }

        private global::System.String DeserializeNonNullableString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _stringParser.Parse(obj.Value.GetString()!);
        }

        private global::System.Double DeserializeNonNullableDouble(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _floatParser.Parse(obj.Value.GetDouble()!);
        }

        private global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode> DeserializeNonNullableEpisodeNonNullableArray(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var episodes = new global::System.Collections.Generic.List<global::StarWarsGeneratedClient.Episode>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                episodes.Add(DeserializeNonNullableEpisode(child));
            }

            return episodes;
        }

        private global::StarWarsGeneratedClient.Episode DeserializeNonNullableEpisode(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _episodeParser.Parse(obj.Value.GetString()!);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersWithCursorPagingBuilder : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.IGetCharactersWithCursorPagingResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityIdSerializer _idSerializer;
        private readonly global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.IGetCharactersWithCursorPagingResult> _resultDataFactory;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::StarWarsGeneratedClient.Episode> _episodeParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Int32, global::System.Int32> _intParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Double, global::System.Double> _floatParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Boolean, global::System.Boolean> _booleanParser;
        public GetCharactersWithCursorPagingBuilder(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer idSerializer, global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.IGetCharactersWithCursorPagingResult> resultDataFactory, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _idSerializer = idSerializer ?? throw new global::System.ArgumentNullException(nameof(idSerializer));
            _resultDataFactory = resultDataFactory ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));
            _episodeParser = serializerResolver.GetLeafValueParser<global::System.String, global::StarWarsGeneratedClient.Episode>("Episode") ?? throw new global::System.ArgumentException("No serializer for type `Episode` found.");
            _intParser = serializerResolver.GetLeafValueParser<global::System.Int32, global::System.Int32>("Int") ?? throw new global::System.ArgumentException("No serializer for type `Int` found.");
            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("String") ?? throw new global::System.ArgumentException("No serializer for type `String` found.");
            _floatParser = serializerResolver.GetLeafValueParser<global::System.Double, global::System.Double>("Float") ?? throw new global::System.ArgumentException("No serializer for type `Float` found.");
            _booleanParser = serializerResolver.GetLeafValueParser<global::System.Boolean, global::System.Boolean>("Boolean") ?? throw new global::System.ArgumentException("No serializer for type `Boolean` found.");
        }

        public global::StrawberryShake.IOperationResult<IGetCharactersWithCursorPagingResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)
        {
            (IGetCharactersWithCursorPagingResult Result, GetCharactersWithCursorPagingResultInfo Info)? data = null;
            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.IClientError>? errors = null;
            if (response.Exception is null)
            {
                try
                {
                    if (response.Body != null)
                    {
                        if (response.Body.RootElement.TryGetProperty("data", out global::System.Text.Json.JsonElement dataElement) && dataElement.ValueKind == global::System.Text.Json.JsonValueKind.Object)
                        {
                            data = BuildData(dataElement);
                        }

                        if (response.Body.RootElement.TryGetProperty("errors", out global::System.Text.Json.JsonElement errorsElement))
                        {
                            errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);
                        }
                    }
                }
                catch (global::System.Exception ex)
                {
                    errors = new global::StrawberryShake.IClientError[]{new global::StrawberryShake.ClientError(ex.Message, exception: ex, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>{{"body", response.Body?.RootElement.ToString()}})};
                }
            }
            else
            {
                errors = new global::StrawberryShake.IClientError[]{new global::StrawberryShake.ClientError(response.Exception.Message, exception: response.Exception, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>{{"body", response.Body?.RootElement.ToString()}})};
            }

            return new global::StrawberryShake.OperationResult<IGetCharactersWithCursorPagingResult>(data?.Result, data?.Info, _resultDataFactory, errors);
        }

        private (IGetCharactersWithCursorPagingResult, GetCharactersWithCursorPagingResultInfo) BuildData(global::System.Text.Json.JsonElement obj)
        {
            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();
            global::StrawberryShake.IEntityStoreSnapshot snapshot = default !;
            global::StarWarsGeneratedClient.State.CharactersWithCursorPagingFilteringAndSortingConnectionData? charactersWithCursorPagingFilteringAndSortingId = default !;
            _entityStore.Update(session =>
            {
                charactersWithCursorPagingFilteringAndSortingId = DeserializeIGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "charactersWithCursorPagingFilteringAndSorting"), entityIds);
                snapshot = session.CurrentSnapshot;
            });
            var resultInfo = new GetCharactersWithCursorPagingResultInfo(charactersWithCursorPagingFilteringAndSortingId, entityIds, snapshot.Version);
            return (_resultDataFactory.Create(resultInfo), resultInfo);
        }

        private global::StarWarsGeneratedClient.State.CharactersWithCursorPagingFilteringAndSortingConnectionData? DeserializeIGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("CharactersWithCursorPagingFilteringAndSortingConnection", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::StarWarsGeneratedClient.State.CharactersWithCursorPagingFilteringAndSortingConnectionData(typename, nodes: UpdateIGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_NodesEntityArray(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "nodes"), entityIds), totalCount: DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "totalCount")), pageInfo: DeserializeNonNullableIGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_PageInfo(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "pageInfo")));
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId?>? UpdateIGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_NodesEntityArray(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            var characters = new global::System.Collections.Generic.List<global::StrawberryShake.EntityId?>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                characters.Add(UpdateIGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_NodesEntity(session, child, entityIds));
            }

            return characters;
        }

        private global::StrawberryShake.EntityId? UpdateIGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_NodesEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);
            entityIds.Add(entityId);
            if (entityId.Name.Equals("Human", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::StarWarsGeneratedClient.State.HumanEntity? entity))
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.HumanEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), entity.Friends, DeserializeNonNullableDouble(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "height")), DeserializeNonNullableEpisodeNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "appearsIn"))));
                }
                else
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.HumanEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), default !, DeserializeNonNullableDouble(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "height")), DeserializeNonNullableEpisodeNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "appearsIn"))));
                }

                return entityId;
            }

            if (entityId.Name.Equals("Droid", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::StarWarsGeneratedClient.State.DroidEntity? entity))
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.DroidEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), entity.Friends, DeserializeNonNullableDouble(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "height")), DeserializeNonNullableEpisodeNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "appearsIn")), entity.PrimaryFunction));
                }
                else
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.DroidEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), default !, DeserializeNonNullableDouble(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "height")), DeserializeNonNullableEpisodeNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "appearsIn")), default !));
                }

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Int32 DeserializeNonNullableInt32(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _intParser.Parse(obj.Value.GetInt32()!);
        }

        private global::System.String DeserializeNonNullableString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _stringParser.Parse(obj.Value.GetString()!);
        }

        private global::System.Double DeserializeNonNullableDouble(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _floatParser.Parse(obj.Value.GetDouble()!);
        }

        private global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode> DeserializeNonNullableEpisodeNonNullableArray(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var episodes = new global::System.Collections.Generic.List<global::StarWarsGeneratedClient.Episode>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                episodes.Add(DeserializeNonNullableEpisode(child));
            }

            return episodes;
        }

        private global::StarWarsGeneratedClient.Episode DeserializeNonNullableEpisode(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _episodeParser.Parse(obj.Value.GetString()!);
        }

        private global::StarWarsGeneratedClient.State.PageInfoData DeserializeNonNullableIGetCharactersWithCursorPaging_CharactersWithCursorPagingFilteringAndSorting_PageInfo(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("PageInfo", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::StarWarsGeneratedClient.State.PageInfoData(typename, endCursor: DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "endCursor")), startCursor: DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "startCursor")), hasNextPage: DeserializeNonNullableBoolean(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "hasNextPage")), hasPreviousPage: DeserializeNonNullableBoolean(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "hasPreviousPage")));
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.String? DeserializeString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            return _stringParser.Parse(obj.Value.GetString()!);
        }

        private global::System.Boolean DeserializeNonNullableBoolean(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _booleanParser.Parse(obj.Value.GetBoolean()!);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersWithPagingBuilder : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.IGetCharactersWithPagingResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityIdSerializer _idSerializer;
        private readonly global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.IGetCharactersWithPagingResult> _resultDataFactory;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::StarWarsGeneratedClient.Episode> _episodeParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::StarWarsGeneratedClient.SortEnumType> _sortEnumTypeParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Int32, global::System.Int32> _intParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Boolean, global::System.Boolean> _booleanParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Double, global::System.Double> _floatParser;
        public GetCharactersWithPagingBuilder(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer idSerializer, global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.IGetCharactersWithPagingResult> resultDataFactory, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _idSerializer = idSerializer ?? throw new global::System.ArgumentNullException(nameof(idSerializer));
            _resultDataFactory = resultDataFactory ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));
            _episodeParser = serializerResolver.GetLeafValueParser<global::System.String, global::StarWarsGeneratedClient.Episode>("Episode") ?? throw new global::System.ArgumentException("No serializer for type `Episode` found.");
            _sortEnumTypeParser = serializerResolver.GetLeafValueParser<global::System.String, global::StarWarsGeneratedClient.SortEnumType>("SortEnumType") ?? throw new global::System.ArgumentException("No serializer for type `SortEnumType` found.");
            _intParser = serializerResolver.GetLeafValueParser<global::System.Int32, global::System.Int32>("Int") ?? throw new global::System.ArgumentException("No serializer for type `Int` found.");
            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("String") ?? throw new global::System.ArgumentException("No serializer for type `String` found.");
            _booleanParser = serializerResolver.GetLeafValueParser<global::System.Boolean, global::System.Boolean>("Boolean") ?? throw new global::System.ArgumentException("No serializer for type `Boolean` found.");
            _floatParser = serializerResolver.GetLeafValueParser<global::System.Double, global::System.Double>("Float") ?? throw new global::System.ArgumentException("No serializer for type `Float` found.");
        }

        public global::StrawberryShake.IOperationResult<IGetCharactersWithPagingResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)
        {
            (IGetCharactersWithPagingResult Result, GetCharactersWithPagingResultInfo Info)? data = null;
            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.IClientError>? errors = null;
            if (response.Exception is null)
            {
                try
                {
                    if (response.Body != null)
                    {
                        if (response.Body.RootElement.TryGetProperty("data", out global::System.Text.Json.JsonElement dataElement) && dataElement.ValueKind == global::System.Text.Json.JsonValueKind.Object)
                        {
                            data = BuildData(dataElement);
                        }

                        if (response.Body.RootElement.TryGetProperty("errors", out global::System.Text.Json.JsonElement errorsElement))
                        {
                            errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);
                        }
                    }
                }
                catch (global::System.Exception ex)
                {
                    errors = new global::StrawberryShake.IClientError[]{new global::StrawberryShake.ClientError(ex.Message, exception: ex, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>{{"body", response.Body?.RootElement.ToString()}})};
                }
            }
            else
            {
                errors = new global::StrawberryShake.IClientError[]{new global::StrawberryShake.ClientError(response.Exception.Message, exception: response.Exception, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>{{"body", response.Body?.RootElement.ToString()}})};
            }

            return new global::StrawberryShake.OperationResult<IGetCharactersWithPagingResult>(data?.Result, data?.Info, _resultDataFactory, errors);
        }

        private (IGetCharactersWithPagingResult, GetCharactersWithPagingResultInfo) BuildData(global::System.Text.Json.JsonElement obj)
        {
            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();
            global::StrawberryShake.IEntityStoreSnapshot snapshot = default !;
            global::StarWarsGeneratedClient.State.CharacterCollectionSegmentData? charactersWithPagingFilteringAndSortingId = default !;
            _entityStore.Update(session =>
            {
                charactersWithPagingFilteringAndSortingId = DeserializeIGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "charactersWithPagingFilteringAndSorting"), entityIds);
                snapshot = session.CurrentSnapshot;
            });
            var resultInfo = new GetCharactersWithPagingResultInfo(charactersWithPagingFilteringAndSortingId, entityIds, snapshot.Version);
            return (_resultDataFactory.Create(resultInfo), resultInfo);
        }

        private global::StarWarsGeneratedClient.State.CharacterCollectionSegmentData? DeserializeIGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("CharacterCollectionSegment", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::StarWarsGeneratedClient.State.CharacterCollectionSegmentData(typename, items: UpdateIGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_ItemsEntityArray(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "items"), entityIds), totalCount: DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "totalCount")), pageInfo: DeserializeNonNullableIGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_PageInfo(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "pageInfo")));
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId?>? UpdateIGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_ItemsEntityArray(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            var characters = new global::System.Collections.Generic.List<global::StrawberryShake.EntityId?>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                characters.Add(UpdateIGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_ItemsEntity(session, child, entityIds));
            }

            return characters;
        }

        private global::StrawberryShake.EntityId? UpdateIGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_ItemsEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);
            entityIds.Add(entityId);
            if (entityId.Name.Equals("Human", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::StarWarsGeneratedClient.State.HumanEntity? entity))
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.HumanEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), entity.Friends, DeserializeNonNullableDouble(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "height")), DeserializeNonNullableEpisodeNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "appearsIn"))));
                }
                else
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.HumanEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), default !, DeserializeNonNullableDouble(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "height")), DeserializeNonNullableEpisodeNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "appearsIn"))));
                }

                return entityId;
            }

            if (entityId.Name.Equals("Droid", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::StarWarsGeneratedClient.State.DroidEntity? entity))
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.DroidEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), entity.Friends, DeserializeNonNullableDouble(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "height")), DeserializeNonNullableEpisodeNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "appearsIn")), entity.PrimaryFunction));
                }
                else
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.DroidEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), default !, DeserializeNonNullableDouble(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "height")), DeserializeNonNullableEpisodeNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "appearsIn")), default !));
                }

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Int32 DeserializeNonNullableInt32(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _intParser.Parse(obj.Value.GetInt32()!);
        }

        private global::System.String DeserializeNonNullableString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _stringParser.Parse(obj.Value.GetString()!);
        }

        private global::System.Double DeserializeNonNullableDouble(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _floatParser.Parse(obj.Value.GetDouble()!);
        }

        private global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode> DeserializeNonNullableEpisodeNonNullableArray(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var episodes = new global::System.Collections.Generic.List<global::StarWarsGeneratedClient.Episode>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                episodes.Add(DeserializeNonNullableEpisode(child));
            }

            return episodes;
        }

        private global::StarWarsGeneratedClient.Episode DeserializeNonNullableEpisode(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _episodeParser.Parse(obj.Value.GetString()!);
        }

        private global::StarWarsGeneratedClient.State.CollectionSegmentInfoData DeserializeNonNullableIGetCharactersWithPaging_CharactersWithPagingFilteringAndSorting_PageInfo(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("CollectionSegmentInfo", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::StarWarsGeneratedClient.State.CollectionSegmentInfoData(typename, hasNextPage: DeserializeNonNullableBoolean(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "hasNextPage")), hasPreviousPage: DeserializeNonNullableBoolean(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "hasPreviousPage")));
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Boolean DeserializeNonNullableBoolean(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _booleanParser.Parse(obj.Value.GetBoolean()!);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetAllHumansAndDroidsBuilder : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.IGetAllHumansAndDroidsResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityIdSerializer _idSerializer;
        private readonly global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.IGetAllHumansAndDroidsResult> _resultDataFactory;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::StarWarsGeneratedClient.Episode> _episodeParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Int32, global::System.Int32> _intParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;
        public GetAllHumansAndDroidsBuilder(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer idSerializer, global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.IGetAllHumansAndDroidsResult> resultDataFactory, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _idSerializer = idSerializer ?? throw new global::System.ArgumentNullException(nameof(idSerializer));
            _resultDataFactory = resultDataFactory ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));
            _episodeParser = serializerResolver.GetLeafValueParser<global::System.String, global::StarWarsGeneratedClient.Episode>("Episode") ?? throw new global::System.ArgumentException("No serializer for type `Episode` found.");
            _intParser = serializerResolver.GetLeafValueParser<global::System.Int32, global::System.Int32>("Int") ?? throw new global::System.ArgumentException("No serializer for type `Int` found.");
            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("String") ?? throw new global::System.ArgumentException("No serializer for type `String` found.");
        }

        public global::StrawberryShake.IOperationResult<IGetAllHumansAndDroidsResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)
        {
            (IGetAllHumansAndDroidsResult Result, GetAllHumansAndDroidsResultInfo Info)? data = null;
            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.IClientError>? errors = null;
            if (response.Exception is null)
            {
                try
                {
                    if (response.Body != null)
                    {
                        if (response.Body.RootElement.TryGetProperty("data", out global::System.Text.Json.JsonElement dataElement) && dataElement.ValueKind == global::System.Text.Json.JsonValueKind.Object)
                        {
                            data = BuildData(dataElement);
                        }

                        if (response.Body.RootElement.TryGetProperty("errors", out global::System.Text.Json.JsonElement errorsElement))
                        {
                            errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);
                        }
                    }
                }
                catch (global::System.Exception ex)
                {
                    errors = new global::StrawberryShake.IClientError[]{new global::StrawberryShake.ClientError(ex.Message, exception: ex, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>{{"body", response.Body?.RootElement.ToString()}})};
                }
            }
            else
            {
                errors = new global::StrawberryShake.IClientError[]{new global::StrawberryShake.ClientError(response.Exception.Message, exception: response.Exception, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>{{"body", response.Body?.RootElement.ToString()}})};
            }

            return new global::StrawberryShake.OperationResult<IGetAllHumansAndDroidsResult>(data?.Result, data?.Info, _resultDataFactory, errors);
        }

        private (IGetAllHumansAndDroidsResult, GetAllHumansAndDroidsResultInfo) BuildData(global::System.Text.Json.JsonElement obj)
        {
            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();
            global::StrawberryShake.IEntityStoreSnapshot snapshot = default !;
            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId> charactersId = default !;
            _entityStore.Update(session =>
            {
                charactersId = UpdateNonNullableIGetAllHumansAndDroids_CharactersEntityNonNullableArray(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "characters"), entityIds);
                snapshot = session.CurrentSnapshot;
            });
            var resultInfo = new GetAllHumansAndDroidsResultInfo(charactersId, entityIds, snapshot.Version);
            return (_resultDataFactory.Create(resultInfo), resultInfo);
        }

        private global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId> UpdateNonNullableIGetAllHumansAndDroids_CharactersEntityNonNullableArray(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var characters = new global::System.Collections.Generic.List<global::StrawberryShake.EntityId>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                characters.Add(UpdateNonNullableIGetAllHumansAndDroids_CharactersEntity(session, child, entityIds));
            }

            return characters;
        }

        private global::StrawberryShake.EntityId UpdateNonNullableIGetAllHumansAndDroids_CharactersEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);
            entityIds.Add(entityId);
            if (entityId.Name.Equals("Human", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::StarWarsGeneratedClient.State.HumanEntity? entity))
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.HumanEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), entity.Friends, entity.Height, DeserializeNonNullableEpisodeNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "appearsIn"))));
                }
                else
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.HumanEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), default !, default !, DeserializeNonNullableEpisodeNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "appearsIn"))));
                }

                return entityId;
            }

            if (entityId.Name.Equals("Droid", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::StarWarsGeneratedClient.State.DroidEntity? entity))
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.DroidEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), entity.Friends, entity.Height, DeserializeNonNullableEpisodeNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "appearsIn")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "primaryFunction"))));
                }
                else
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.DroidEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), default !, default !, DeserializeNonNullableEpisodeNonNullableArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "appearsIn")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "primaryFunction"))));
                }

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Int32 DeserializeNonNullableInt32(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _intParser.Parse(obj.Value.GetInt32()!);
        }

        private global::System.String DeserializeNonNullableString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _stringParser.Parse(obj.Value.GetString()!);
        }

        private global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.Episode> DeserializeNonNullableEpisodeNonNullableArray(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var episodes = new global::System.Collections.Generic.List<global::StarWarsGeneratedClient.Episode>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                episodes.Add(DeserializeNonNullableEpisode(child));
            }

            return episodes;
        }

        private global::StarWarsGeneratedClient.Episode DeserializeNonNullableEpisode(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _episodeParser.Parse(obj.Value.GetString()!);
        }
    }

    ///<summary>A connection to a list of items.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class FriendsConnectionData
    {
        public FriendsConnectionData(global::System.String __typename, global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.State.FriendsEdgeData>? edges = default !)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
            Edges = edges;
        }

        public global::System.String __typename { get; }

        ///<summary>A list of edges.</summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.State.FriendsEdgeData>? Edges { get; }
    }

    ///<summary>An edge in a connection.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class FriendsEdgeData
    {
        public FriendsEdgeData(global::System.String __typename, global::StrawberryShake.EntityId? node = default !)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
            Node = node;
        }

        public global::System.String __typename { get; }

        ///<summary>The item at the end of the edge.</summary>
        public global::StrawberryShake.EntityId? Node { get; }
    }

    ///<summary>This payload allows us to query the created review object.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class CreateReviewPayloadData
    {
        public CreateReviewPayloadData(global::System.String __typename, global::StrawberryShake.EntityId? review = default !)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
            Review = review;
        }

        public global::System.String __typename { get; }

        ///<summary>The review that was being created.</summary>
        public global::StrawberryShake.EntityId? Review { get; }
    }

    ///<summary>A connection to a list of items.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class CharactersWithCursorPagingFilteringAndSortingConnectionData
    {
        public CharactersWithCursorPagingFilteringAndSortingConnectionData(global::System.String __typename, global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId?>? nodes = default !, global::System.Int32? totalCount = default !, global::StarWarsGeneratedClient.State.PageInfoData? pageInfo = default !)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
            Nodes = nodes;
            TotalCount = totalCount;
            PageInfo = pageInfo;
        }

        public global::System.String __typename { get; }

        ///<summary>A flattened list of the nodes.</summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId?>? Nodes { get; }

        public global::System.Int32? TotalCount { get; }

        ///<summary>Information to aid in pagination.</summary>
        public global::StarWarsGeneratedClient.State.PageInfoData? PageInfo { get; }
    }

    ///<summary>Information about pagination in a connection.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class PageInfoData
    {
        public PageInfoData(global::System.String __typename, global::System.String? endCursor = default !, global::System.String? startCursor = default !, global::System.Boolean? hasNextPage = default !, global::System.Boolean? hasPreviousPage = default !)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
            EndCursor = endCursor;
            StartCursor = startCursor;
            HasNextPage = hasNextPage;
            HasPreviousPage = hasPreviousPage;
        }

        public global::System.String __typename { get; }

        ///<summary>When paginating forwards, the cursor to continue.</summary>
        public global::System.String? EndCursor { get; }

        ///<summary>When paginating backwards, the cursor to continue.</summary>
        public global::System.String? StartCursor { get; }

        ///<summary>Indicates whether more edges exist following the set defined by the clients arguments.</summary>
        public global::System.Boolean? HasNextPage { get; }

        ///<summary>Indicates whether more edges exist prior the set defined by the clients arguments.</summary>
        public global::System.Boolean? HasPreviousPage { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class CharacterCollectionSegmentData
    {
        public CharacterCollectionSegmentData(global::System.String __typename, global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId?>? items = default !, global::System.Int32? totalCount = default !, global::StarWarsGeneratedClient.State.CollectionSegmentInfoData? pageInfo = default !)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
            Items = items;
            TotalCount = totalCount;
            PageInfo = pageInfo;
        }

        public global::System.String __typename { get; }

        public global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId?>? Items { get; }

        public global::System.Int32? TotalCount { get; }

        ///<summary>Information to aid in pagination.</summary>
        public global::StarWarsGeneratedClient.State.CollectionSegmentInfoData? PageInfo { get; }
    }

    ///<summary>Information about the offset pagination.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class CollectionSegmentInfoData
    {
        public CollectionSegmentInfoData(global::System.String __typename, global::System.Boolean? hasNextPage = default !, global::System.Boolean? hasPreviousPage = default !)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
            HasNextPage = hasNextPage;
            HasPreviousPage = hasPreviousPage;
        }

        public global::System.String __typename { get; }

        ///<summary>Indicates whether more items exist following the set defined by the clients arguments.</summary>
        public global::System.Boolean? HasNextPage { get; }

        ///<summary>Indicates whether more items exist prior the set defined by the clients arguments.</summary>
        public global::System.Boolean? HasPreviousPage { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class StarWarsGeneratedClientEntityIdFactory : global::StrawberryShake.IEntityIdSerializer
    {
        private static readonly global::System.Text.Json.JsonWriterOptions _options = new global::System.Text.Json.JsonWriterOptions()
        {Indented = false};
        public global::StrawberryShake.EntityId Parse(global::System.Text.Json.JsonElement obj)
        {
            global::System.String __typename = obj.GetProperty("__typename").GetString()!;
            return __typename switch
            {
                "Human" => ParseHumanEntityId(obj, __typename),
                "Droid" => ParseDroidEntityId(obj, __typename),
                "Review" => ParseReviewEntityId(obj, __typename),
                _ => throw new global::System.NotSupportedException()};
        }

        public global::System.String Format(global::StrawberryShake.EntityId entityId)
        {
            return entityId.Name switch
            {
                "Human" => FormatHumanEntityId(entityId),
                "Droid" => FormatDroidEntityId(entityId),
                "Review" => FormatReviewEntityId(entityId),
                _ => throw new global::System.NotSupportedException()};
        }

        private global::StrawberryShake.EntityId ParseHumanEntityId(global::System.Text.Json.JsonElement obj, global::System.String type)
        {
            return new global::StrawberryShake.EntityId(type, obj.GetProperty("id").GetInt32()!);
        }

        private global::System.String FormatHumanEntityId(global::StrawberryShake.EntityId entityId)
        {
            using var writer = new global::StrawberryShake.Internal.ArrayWriter();
            using var jsonWriter = new global::System.Text.Json.Utf8JsonWriter(writer, _options);
            jsonWriter.WriteStartObject();
            jsonWriter.WriteString("__typename", entityId.Name);
            jsonWriter.WriteNumber("id", (global::System.Int32)entityId.Value);
            jsonWriter.WriteEndObject();
            jsonWriter.Flush();
            return global::System.Text.Encoding.UTF8.GetString(writer.GetInternalBuffer(), 0, writer.Length);
        }

        private global::StrawberryShake.EntityId ParseDroidEntityId(global::System.Text.Json.JsonElement obj, global::System.String type)
        {
            return new global::StrawberryShake.EntityId(type, obj.GetProperty("id").GetInt32()!);
        }

        private global::System.String FormatDroidEntityId(global::StrawberryShake.EntityId entityId)
        {
            using var writer = new global::StrawberryShake.Internal.ArrayWriter();
            using var jsonWriter = new global::System.Text.Json.Utf8JsonWriter(writer, _options);
            jsonWriter.WriteStartObject();
            jsonWriter.WriteString("__typename", entityId.Name);
            jsonWriter.WriteNumber("id", (global::System.Int32)entityId.Value);
            jsonWriter.WriteEndObject();
            jsonWriter.Flush();
            return global::System.Text.Encoding.UTF8.GetString(writer.GetInternalBuffer(), 0, writer.Length);
        }

        private global::StrawberryShake.EntityId ParseReviewEntityId(global::System.Text.Json.JsonElement obj, global::System.String type)
        {
            return new global::StrawberryShake.EntityId(type, obj.GetProperty("id").GetString()!);
        }

        private global::System.String FormatReviewEntityId(global::StrawberryShake.EntityId entityId)
        {
            using var writer = new global::StrawberryShake.Internal.ArrayWriter();
            using var jsonWriter = new global::System.Text.Json.Utf8JsonWriter(writer, _options);
            jsonWriter.WriteStartObject();
            jsonWriter.WriteString("__typename", entityId.Name);
            jsonWriter.WriteString("id", (global::System.String)entityId.Value);
            jsonWriter.WriteEndObject();
            jsonWriter.Flush();
            return global::System.Text.Encoding.UTF8.GetString(writer.GetInternalBuffer(), 0, writer.Length);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class StarWarsGeneratedClientStoreAccessor : global::StrawberryShake.StoreAccessor
    {
        public StarWarsGeneratedClientStoreAccessor(global::StrawberryShake.IOperationStore operationStore, global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer entityIdSerializer, global::System.Collections.Generic.IEnumerable<global::StrawberryShake.IOperationRequestFactory> requestFactories, global::System.Collections.Generic.IEnumerable<global::StrawberryShake.IOperationResultDataFactory> resultDataFactories) : base(operationStore, entityStore, entityIdSerializer, requestFactories, resultDataFactories)
        {
        }
    }
}
